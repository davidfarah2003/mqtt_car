{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-main\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Home \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_connected_view = _resolveComponent(\"connected-view\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createVNode(_component_connected_view, {\n    subscribedTopics: _ctx.subscribedTopics,\n    dataCallBack: _ctx.dataCallBack\n  }, {\n    default: _withCtx(data => [_hoisted_2, data.connected ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_3, \"Connected\")) : (_openBlock(), _createElementBlock(\"h1\", _hoisted_4, \"Disconnected\")), _createElementVNode(\"h3\", null, \"Data: \" + _toDisplayString(data.battery.pack_info.pack_voltage), 1 /* TEXT */), _createElementVNode(\"h4\", null, \"Subscribed topics: \" + _toDisplayString(data.subscribedTopics), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"subscribedTopics\", \"dataCallBack\"])]);\n}","map":{"version":3,"mappings":";;EACWA,KAAK,EAAC;AAAU;gCAGrBC,oBAAe,YAAX,QAAM;;;;;;;;;uBAHdC,oBAYU,WAZVC,UAYU,GAVRC,aAQiBC;IAReC,gBAAgB,EAAEC,qBAAgB;IAAGC,YAAY,EAAED;;sBAA1DE,IAAI,KAC3BC,UAAe,EACLD,IAAI,CAACE,SAAS,kBAAxBT,oBAAwC,kBAAd,WAAS,oBACnCA,oBAA4B,kBAAjB,cAAY,IAEvBD,oBAAsD,YAAlD,QAAM,oBAAEQ,IAAI,CAACG,OAAO,CAACC,SAAS,CAACC,YAAY,kBAE/Cb,oBAAqD,YAAjD,qBAAmB,oBAAEQ,IAAI,CAACH,gBAAgB","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_connected_view","subscribedTopics","_ctx","dataCallBack","data","_hoisted_2","connected","battery","pack_info","pack_voltage"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  <section class=\"app-main\">\n\n    <connected-view  v-slot=\"data\" :subscribedTopics=\"subscribedTopics\" :dataCallBack=\"dataCallBack\">\n      <h1> Home </h1>\n      <h1 v-if=\"data.connected\">Connected</h1>\n      <h1 v-else>Disconnected</h1>\n\n      <h3>Data: {{data.battery.pack_info.pack_voltage}}</h3>\n\n      <h4>Subscribed topics: {{data.subscribedTopics}}</h4>\n    </connected-view>\n\n  </section>\n</template>\n\n<script>\nimport ConnectedView from \"@/views/ConnectedView\";\nimport {ref} from \"vue\";\nimport retrieveDataFromJSON from \"@/composables/responseUtils\";\nimport homeData from \"@/composables/dataObjects\";\n\nexport default {\n  name: \"Home\",\n  components: {ConnectedView},\n\n\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n    const sensorData = ref({})\n\n    let data = ref({\n      FCU: {\n        state_machine: {\n          global_state: -1,\n          flight_state: -1,\n          flight_mode: -1,\n          arming_state: -1,\n        },\n        height_sensor: {\n          height_sensor_status : -1,\n          height_measure: NaN\n        },\n        event_flags: {\n          event_flags: -1,\n        },\n        bridge_ahrs: {\n          palpeur_altitude_filtered: NaN,\n          vel_x: NaN,\n          yaw_rate: NaN,\n          roll: NaN,\n          pitch: NaN,\n        },\n        bridge_motor:{\n          motor_1_ctrl_temp: NaN,\n          motor_1_current: NaN,\n          motor_1_rpm: NaN,\n          motor_2_ctrl_temp: NaN,\n          motor_2_current: NaN,\n          motor_2_rpm: NaN,\n        },\n        heartBeat: NaN,\n      },\n      main_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        },\n      },\n      lat_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        },\n      },\n      back_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n      battery: {\n        can_port_current_1: {\n          pack_current: NaN,\n        },\n        pack_info: {\n          pack_voltage: NaN,\n          pack_soc: NaN,\n          status: NaN,\n          fan_duty: NaN,\n        },\n        bms_status: {\n          max_cell_temp : NaN,\n          min_cell_voltage: NaN,\n          max_cell_voltage: NaN,\n          temp_BMS: NaN,\n          temp_ext_1: NaN,\n          temp_ext_2: NaN,\n          bms_status: NaN,\n        },\n        mppt_current_1: {\n          mppt_1: NaN,\n          mppt_2: NaN,\n          mppt_3: NaN,\n          mppt_4: NaN,\n        },\n        mppt_current_2: {\n          mppt_5: NaN,\n          mppt_6: NaN,\n          mppt_7: NaN,\n          mppt_8: NaN,\n        },\n        mppt_current_3: {\n          mppt_9: NaN,\n          mppt_10: NaN,\n        },\n\n      },\n      inertial_central: {\n        imu_delta_velocity: {\n          d_vel_x: NaN,\n          d_vel_y: NaN,\n          d_vel_z: NaN\n        },\n        ekf_euler_accuracy: {\n          roll_acc: NaN,\n          pitch_acc: NaN,\n          yaw_acc: NaN\n        },\n        ekf_position: {\n          latitude: NaN,\n          longitude: NaN,\n        },\n        ekf_vel_body:{\n          velocity_x: NaN,\n          velocity_y: NaN,\n          velocity_z: NaN,\n        },\n        air_data_info: {\n          air_time_stamp: NaN,\n          air_data_status: -1,\n          air_temperature: NaN\n        },\n        air_data_altitude: {\n          pressure: NaN,\n          pressure_altitude: NaN\n        },\n        imu_gyro: {\n          gyro_x: NaN,\n          gyro_y: NaN,\n          gyro_z: NaN,\n        }\n      }\n    })\n\n    let dataCallBack = (receivedData) => {\n      retrieveDataFromJSON(receivedData, sensorData)\n\n      console.log(sensorData)\n    }\n    return {subscribedTopics, dataCallBack, sensorData, data}\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}