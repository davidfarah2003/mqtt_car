{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, KeepAlive as _KeepAlive, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"nav\", null, [_createVNode(_component_router_link, {\n    to: {\n      name: 'Home'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Home\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'AllData'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"All Data\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'Recordings'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Recordings\")]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_router_view, null, {\n    default: _withCtx(_ref => {\n      let {\n        Component\n      } = _ref;\n      return [(_openBlock(), _createBlock(_KeepAlive, null, [(_openBlock(), _createBlock(_resolveDynamicComponent(Component)))], 1024 /* DYNAMIC_SLOTS */))];\n    }),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;6DACEA,oBAIM,cAHJC,aAAoDC;IAAtCC,EAAE,EAAE;MAAAC;IAAA;EAAc;sBAAE,MAAI,kBAAJ,MAAI;;uBAAc,KACpD,gBAA2DF;IAA7CC,EAAE,EAAE;MAAAC;IAAA;EAAiB;sBAAE,MAAQ,kBAAR,UAAQ;;uBAAc,KAC3D,gBAAgEF;IAAlDC,EAAE,EAAE;MAAAC;IAAA;EAAoB;sBAAE,MAAU,kBAAV,YAAU;;QAGpDH,aAIcI;sBAHZ;MAAA,IAEa;QAHQC;MAAS;MAAA,uBAC9BC,aAEaC,kCADXD,aAA6BE,yBAAbH,SAAS","names":["_createElementVNode","_createVNode","_component_router_link","to","name","_component_router_view","Component","_createBlock","_KeepAlive","_resolveDynamicComponent"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/App.vue"],"sourcesContent":["<template>\n  <nav>\n    <router-link :to=\"{name: 'Home'}\">Home</router-link> |\n    <router-link :to=\"{name: 'AllData'}\">All Data</router-link> |\n    <router-link :to=\"{name: 'Recordings'}\">Recordings</router-link>\n  </nav>\n\n  <router-view v-slot=\"{ Component }\">\n    <keep-alive>\n      <component :is=\"Component\" />\n    </keep-alive>\n  </router-view>\n\n</template>\n\n<script>\nimport {provide} from \"vue\";\nimport mqttUtils from \"@/composables/mqttUtils.mjs\";\nimport Home from \"@/views/Home\";\nimport apiUtils from \"@/composables/apiUtils.mjs\";\n\nexport default {\n  components: {Home},\n  setup() {\n    //They are created here to be unique between views\n\n    let mqttClient = mqttUtils.getMqttClient()\n    provide('mqttClient', mqttClient) //provide the client to components that need it (import via inject(key)\n\n    let API = new apiUtils()\n    provide('apiClient', API)\n\n  },\n}\n</script>\n\n<style>\n:root {\n  --contours: #12aad0;\n  --primary: #686868;\n  --primary-dark: #414040;\n  --secondary: #c22e2e;\n  --title_color: black;\n  --text_color: orange;\n  --h4_color: #ffbf4e;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: var(--title_color);\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: var(--title_color);\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}