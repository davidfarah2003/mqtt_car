{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-46acf8b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"plugin\"\n};\nconst _hoisted_2 = {\n  class: \"temps\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dataObject['Pack temp 1'], (values, fieldName) => {\n    return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"div\", null, _toDisplayString(fieldName) + \": \", 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(values[0]) + \" \" + _toDisplayString(values[1]), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dataObject['Pack temp 1'], (values, fieldName) => {\n    return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"div\", null, _toDisplayString(fieldName) + \": \", 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(values[0]) + \" \" + _toDisplayString(values[1]), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;;EACQA,KAAK,EAAC;AAAQ;;EACbA,KAAK,EAAC;AAAO;;uBADpBC,oBAaO,QAbPC,UAaO,GAZLC,oBAUM,OAVNC,UAUM,sBATJH,oBAGGI,6BAH+BC,iBAAU,kBAAhCC,MAAM,EAAEC,SAAS;yBAA7BP,oBAGG,aAFHE,oBAA0B,8BAAnBK,SAAS,IAAE,IAAE,iBACpBL,oBAAsC,8BAA/BI,MAAM,OAAK,GAAC,oBAAEA,MAAM;uDAG7BN,oBAGKI,6BAH6BC,iBAAU,kBAAhCC,MAAM,EAAEC,SAAS;yBAA7BP,oBAGK,aAFHE,oBAA0B,8BAAnBK,SAAS,IAAE,IAAE,iBACpBL,oBAAsC,8BAA/BI,MAAM,OAAK,GAAC,oBAAEA,MAAM","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","$setup","values","fieldName"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/components/Battery/Battery_detailed.vue"],"sourcesContent":["<template>\n  <span class=\"plugin\">\n    <div class=\"temps\">\n      <li v-for=\"(values, fieldName) in dataObject['Pack temp 1']\">\n      <div>{{fieldName}}: </div>\n      <div>{{values[0]}} {{values[1]}}</div>\n    </li>\n\n    <li v-for=\"(values, fieldName) in dataObject['Pack temp 1']\">\n      <div>{{fieldName}}: </div>\n      <div>{{values[0]}} {{values[1]}}</div>\n    </li>\n    </div>\n\n  </span>\n\n\n</template>\n\n<script>\nimport {ref} from \"vue\";\n\nexport default {\n  name: \"Battery_detailed\",\n  props: ['canUpdate'],\n  emits: ['subscribeToFields', 'updateData'],\n\n  setup(props, {emit}) {\n    let dataObject = ref({})\n    let initialized = ref(false)\n\n    let requiredFields = {\n      \"Pack temp 1\": \"battery/pack_temp_1/*\",\n      \"Pack temp 2\": \"battery/pack_temp_2/*\",\n    }\n\n    emit(\"subscribeToFields\", requiredFields)\n\n    setInterval( ()=>{\n      if (props.canUpdate) {\n        emit(\"updateData\", requiredFields, dataObject)\n        if(!initialized.value) initialized.value = true\n      }\n    } , 1000)\n\n    return {dataObject, initialized}\n  }\n}\n</script>\n\n<style scoped>\nli {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 5px;\n}\n\n.temps {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 5px;\n}\n\nli div {\n  color: orange;\n}\n</style>"]},"metadata":{},"sourceType":"module"}