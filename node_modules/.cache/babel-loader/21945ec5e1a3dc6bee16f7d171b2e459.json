{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-297d0747\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BForm = _resolveComponent(\"BForm\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$setup.initialized ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_1, _toDisplayString($setup.dataObject[\"motor_1_current\"]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_BForm, null, {\n    default: _withCtx(() => [_createTextVNode(\"sdds\")]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;;6DACYA,kBAAW,kBAArBC,oBAA6D,mCAApCD,iBAAU,0EACnCE,aAAmBC;sBAAZ,MAAI,kBAAJ,MAAI","names":["$setup","_createElementBlock","_createVNode","_component_BForm"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/components/Home/Status_panel.vue"],"sourcesContent":["<template>\n  <h1 v-if=\"initialized\">{{dataObject[\"motor_1_current\"]}}</h1>\n  <BForm>sdds</BForm>\n</template>\n\n<script>\nimport {computed, ref, watch} from \"vue\";\n\nexport default {\n  name: \"Status_panel\",\n  props: ['canUpdate'],\n  emits: ['subscribeFields', 'updateData'],\n\n  setup(props, {emit}) {\n    let dataObject = ref({})\n    let initialized = ref(false)\n\n    let requiredFields = {\n      motor_1_current: \"fcu/bridge_motor/motor_1_current\",\n      motor_2_current: \"fcu/bridge_motor/motor_2_current\",\n      main_sts: \"main_position_motor/txpdo_1/statusword\",\n      back_sts: \"back_position_motor/txpdo_1/statusword\",\n      lat_sts: \"lat_position_motor/txpdo_1/statusword\",\n      fcu_sts: \"fcu/status_01/general_status\",\n      imu_sts: \"imu/status_01/general_status\",\n      battery_current: \"battery/pack_info/current\",\n      battery_status: \"battery/pack_info/status\",\n      height_sensor_sts: \"fcu/height_sensor/height_sensor_status\",\n      cockpit_speed_command: \"cockpit_arduino/pilot_command_01/speedcommand\",\n    }\n\n    emit(\"subscribeFields\", requiredFields)\n\n    setInterval( ()=>{\n      if (props.canUpdate) {\n        console.log(\"I can update\")\n        emit(\"updateData\", requiredFields, dataObject)\n        initialized.value = true\n      }\n    } , 200 )\n\n\n    let statuses = computed(()=>{\n      if (dataObject.value) return dataObject\n    })\n\n    return {dataObject, initialized}\n  }\n}\n</script>\n\n<style scoped>\n#online {\n  background: green;\n  border-radius: 50%;\n  width: 100px;\n  height: 100px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}