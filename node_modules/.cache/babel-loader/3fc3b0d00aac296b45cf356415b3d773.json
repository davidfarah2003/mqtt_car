{"ast":null,"code":"import { computed, ref, watch } from \"vue\";\nexport default {\n  name: \"Status_panel\",\n  props: ['canUpdate', 'connected'],\n  emits: ['subscribeFields', 'updateData'],\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    let dataObject = ref({});\n    let initialized = ref(false);\n    let requiredFields = {\n      \"M1\": \"motor_controller_1/pwm/warnings\",\n      \"M2\": \"motor_controller_2/pwm/warnings\",\n      \"Main foil\": \"main_position_motor/txpdo_1/statusword\",\n      \"Back foil\": \"back_position_motor/txpdo_1/statusword\",\n      \"Lat foil\": \"lat_position_motor/txpdo_1/statusword\",\n      \"FCU\": \"fcu/status_01/general_status\",\n      \"IMU\": \"imu/status_01/general_status\",\n      \"Battery\": \"battery/pack_info/status\",\n      \"Height Sensor\": \"fcu/height_sensor/height_sensor_status\"\n    };\n    emit(\"subscribeFields\", requiredFields);\n    setInterval(() => {\n      if (props.canUpdate) {\n        emit(\"updateData\", requiredFields, dataObject);\n        if (!initialized.value) initialized.value = true;\n      }\n    }, 1000);\n    let statuses = computed(() => {\n      if (dataObject.value) {\n        return {};\n      }\n      return {};\n    });\n    return {\n      dataObject,\n      initialized,\n      connected: props.connected\n    };\n  }\n};","map":{"version":3,"mappings":"AAaA,SAAQA,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAO,KAAK;AAExC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;EACjCC,KAAK,EAAE,CAAC,iBAAiB,EAAE,YAAY,CAAC;EAExCC,KAAK,CAACF,KAAK,QAAU;IAAA,IAAR;MAACG;IAAI,CAAC;IACjB,IAAIC,UAAS,GAAIP,GAAG,CAAC,CAAC,CAAC;IACvB,IAAIQ,WAAU,GAAIR,GAAG,CAAC,KAAK;IAE3B,IAAIS,cAAa,GAAI;MACnB,IAAI,EAAE,iCAAiC;MACvC,IAAI,EAAE,iCAAiC;MACvC,WAAW,EAAE,wCAAwC;MACrD,WAAW,EAAE,wCAAwC;MACrD,UAAU,EAAE,uCAAuC;MACnD,KAAK,EAAE,8BAA8B;MACrC,KAAK,EAAE,8BAA8B;MACrC,SAAS,EAAE,0BAA0B;MACrC,eAAe,EAAE;IACnB;IAEAH,IAAI,CAAC,iBAAiB,EAAEG,cAAc;IAEtCC,WAAW,CAAE,MAAI;MACf,IAAIP,KAAK,CAACQ,SAAS,EAAE;QACnBL,IAAI,CAAC,YAAY,EAAEG,cAAc,EAAEF,UAAU;QAC7C,IAAG,CAACC,WAAW,CAACI,KAAK,EAAEJ,WAAW,CAACI,KAAI,GAAI,IAAG;MAChD;IACF,GAAI,IAAI;IAER,IAAIC,QAAO,GAAId,QAAQ,CAAC,MAAI;MAC1B,IAAIQ,UAAU,CAACK,KAAK,EAAE;QACpB,OAAO,CAAC;MACV;MACA,OAAO,CAAC;IACV,CAAC;IAED,OAAO;MAACL,UAAU;MAAEC,WAAW;MAAEM,SAAS,EAAEX,KAAK,CAACW;IAAS;EAC7D;AACF","names":["computed","ref","watch","name","props","emits","setup","emit","dataObject","initialized","requiredFields","setInterval","canUpdate","value","statuses","connected"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/components/Home/Status_panel.vue"],"sourcesContent":["<template>\n  <span>\n    <ul>\n      <li v-for=\"(values, fieldName) in dataObject\">\n        {{connected}}\n        <div>{{fieldName}}:</div>\n        <div :class=\"values[0]===0 ? 'green': 'red'\"/>\n      </li>\n    </ul>\n  </span>\n</template>\n\n<script>\nimport {computed, ref, watch} from \"vue\";\n\nexport default {\n  name: \"Status_panel\",\n  props: ['canUpdate', 'connected'],\n  emits: ['subscribeFields', 'updateData'],\n\n  setup(props, {emit}) {\n    let dataObject = ref({})\n    let initialized = ref(false)\n\n    let requiredFields = {\n      \"M1\": \"motor_controller_1/pwm/warnings\",\n      \"M2\": \"motor_controller_2/pwm/warnings\",\n      \"Main foil\": \"main_position_motor/txpdo_1/statusword\",\n      \"Back foil\": \"back_position_motor/txpdo_1/statusword\",\n      \"Lat foil\": \"lat_position_motor/txpdo_1/statusword\",\n      \"FCU\": \"fcu/status_01/general_status\",\n      \"IMU\": \"imu/status_01/general_status\",\n      \"Battery\": \"battery/pack_info/status\",\n      \"Height Sensor\": \"fcu/height_sensor/height_sensor_status\",\n    }\n\n    emit(\"subscribeFields\", requiredFields)\n\n    setInterval( ()=>{\n      if (props.canUpdate) {\n        emit(\"updateData\", requiredFields, dataObject)\n        if(!initialized.value) initialized.value = true\n      }\n    } , 1000)\n\n    let statuses = computed(()=>{\n      if (dataObject.value) {\n        return {}\n      }\n      return {}\n    })\n\n    return {dataObject, initialized, connected: props.connected}\n  }\n}\n</script>\n\n<style scoped>\n.green {\n  background: green;\n  border-radius: 50%;\n  width: 1rem;\n  height: 1rem;\n}\n\n.red {\n  background: red;\n  border-radius: 50%;\n  width: 1rem;\n  height: 1rem;\n}\n\nli {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 5px;\n}\n\nli div {\n  color: orange;\n}\n\nspan {\n  border: 1px solid red;\n}\n</style>"]},"metadata":{},"sourceType":"module"}