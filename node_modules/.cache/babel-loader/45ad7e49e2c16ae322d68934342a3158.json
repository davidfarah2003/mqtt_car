{"ast":null,"code":"import { inject, onMounted, ref, watch } from \"vue\";\nexport default {\n  name: \"Home\",\n  setup(props) {\n    onMounted(() => {\n      const mqttClient = inject('mqttClient');\n      let mqtt = ref(null);\n      mqttClient.then(client => {\n        client.on('connect', () => {\n          mqtt = client;\n          //subscribe('test')\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n      console.log(mqtt);\n      watch(mqtt, (newVal, oldVal) => {\n        console.log(oldVal);\n        console.log(newVal);\n        newVal.valueOf();\n      });\n    });\n  }\n};","map":{"version":3,"mappings":"AAMA,SAAQA,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,KAAK,QAAO,KAAK;AAEjD,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,KAAK,CAACC,KAAK,EAAC;IACVL,SAAS,CAAC,MAAI;MACZ,MAAMM,UAAS,GAAIP,MAAM,CAAC,YAAY;MACtC,IAAIQ,IAAG,GAAIN,GAAG,CAAC,IAAI;MAEnBK,UAAS,CACJE,IAAI,CAAEC,MAAM,IAAK;QAChBA,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAK;UACxBH,IAAG,GAAIE,MAAK;UACZ;QACF,CAAC;MAEH,CAAC,EACAE,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG;MACjB,CAAC,CAAC;MAENC,OAAO,CAACC,GAAG,CAACP,IAAI;MAEhBL,KAAK,CAACK,IAAI,EAAE,CAACQ,MAAM,EAAEC,MAAM,KAAI;QAC7BH,OAAO,CAACC,GAAG,CAACE,MAAM;QAClBH,OAAO,CAACC,GAAG,CAACC,MAAM;QAClBA,MAAM,CAACE,OAAO,EAAC;MACjB,CAAC;IAEH,CAAC;EAOH;AACF","names":["inject","onMounted","ref","watch","name","setup","props","mqttClient","mqtt","then","client","on","catch","err","console","log","newVal","oldVal","valueOf"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  Home\n</template>\n\n<script>\n\nimport {inject, onMounted, ref, watch} from \"vue\";\n\nexport default {\n  name: \"Home\",\n  setup(props){\n    onMounted(()=>{\n      const mqttClient = inject('mqttClient')\n      let mqtt = ref(null)\n\n      mqttClient\n          .then((client) => {\n            client.on('connect', ()=> {\n              mqtt = client\n              //subscribe('test')\n            })\n\n          })\n          .catch((err) => {\n            console.log(err)\n          });\n\n      console.log(mqtt)\n\n      watch(mqtt, (newVal, oldVal)=> {\n        console.log(oldVal)\n        console.log(newVal)\n        newVal.valueOf()\n      })\n\n    })\n\n\n\n\n\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}