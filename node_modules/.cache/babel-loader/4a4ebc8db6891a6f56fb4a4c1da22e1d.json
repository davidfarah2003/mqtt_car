{"ast":null,"code":"import _typeof from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _createForOfIteratorHelper from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _errorMessages, _helperNameMap, _deprecationData;\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.link.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.last-index-of.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.string.repeat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.weak-set.js\";\nimport { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n  process.env.NODE_ENV !== 'production' && console.warn(\"[Vue warn] \".concat(msg.message));\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  var msg = process.env.NODE_ENV !== 'production' || !true ? (messages || errorMessages)[code] + (additionalMessage || \"\") : code;\n  var error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nvar errorMessages = (_errorMessages = {}, _defineProperty(_errorMessages, 0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */, 'Illegal comment.'), _defineProperty(_errorMessages, 1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */, 'CDATA section is allowed only in XML context.'), _defineProperty(_errorMessages, 2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */, 'Duplicate attribute.'), _defineProperty(_errorMessages, 3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */, 'End tag cannot have attributes.'), _defineProperty(_errorMessages, 4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */, \"Illegal '/' in tags.\"), _defineProperty(_errorMessages, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 'Unexpected EOF in tag.'), _defineProperty(_errorMessages, 6 /* ErrorCodes.EOF_IN_CDATA */, 'Unexpected EOF in CDATA section.'), _defineProperty(_errorMessages, 7 /* ErrorCodes.EOF_IN_COMMENT */, 'Unexpected EOF in comment.'), _defineProperty(_errorMessages, 8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */, 'Unexpected EOF in script.'), _defineProperty(_errorMessages, 9 /* ErrorCodes.EOF_IN_TAG */, 'Unexpected EOF in tag.'), _defineProperty(_errorMessages, 10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */, 'Incorrectly closed comment.'), _defineProperty(_errorMessages, 11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */, 'Incorrectly opened comment.'), _defineProperty(_errorMessages, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, \"Illegal tag name. Use '&lt;' to print '<'.\"), _defineProperty(_errorMessages, 13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */, 'Attribute value was expected.'), _defineProperty(_errorMessages, 14 /* ErrorCodes.MISSING_END_TAG_NAME */, 'End tag name was expected.'), _defineProperty(_errorMessages, 15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */, 'Whitespace was expected.'), _defineProperty(_errorMessages, 16 /* ErrorCodes.NESTED_COMMENT */, \"Unexpected '<!--' in comment.\"), _defineProperty(_errorMessages, 17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).'), _defineProperty(_errorMessages, 18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).'), _defineProperty(_errorMessages, 19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */, \"Attribute name cannot start with '='.\"), _defineProperty(_errorMessages, 21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, \"'<?' is allowed only in XML context.\"), _defineProperty(_errorMessages, 20 /* ErrorCodes.UNEXPECTED_NULL_CHARACTER */, \"Unexpected null character.\"), _defineProperty(_errorMessages, 22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */, \"Illegal '/' in tags.\"), _defineProperty(_errorMessages, 23 /* ErrorCodes.X_INVALID_END_TAG */, 'Invalid end tag.'), _defineProperty(_errorMessages, 24 /* ErrorCodes.X_MISSING_END_TAG */, 'Element is missing end tag.'), _defineProperty(_errorMessages, 25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */, 'Interpolation end sign was not found.'), _defineProperty(_errorMessages, 27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */, 'End bracket for dynamic directive argument was not found. ' + 'Note that dynamic directive argument cannot contain spaces.'), _defineProperty(_errorMessages, 26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */, 'Legal directive name was expected.'), _defineProperty(_errorMessages, 28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */, \"v-if/v-else-if is missing expression.\"), _defineProperty(_errorMessages, 29 /* ErrorCodes.X_V_IF_SAME_KEY */, \"v-if/else branches must use unique keys.\"), _defineProperty(_errorMessages, 30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, \"v-else/v-else-if has no adjacent v-if or v-else-if.\"), _defineProperty(_errorMessages, 31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */, \"v-for is missing expression.\"), _defineProperty(_errorMessages, 32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, \"v-for has invalid expression.\"), _defineProperty(_errorMessages, 33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */, \"<template v-for> key should be placed on the <template> tag.\"), _defineProperty(_errorMessages, 34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */, \"v-bind is missing expression.\"), _defineProperty(_errorMessages, 35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, \"v-on is missing expression.\"), _defineProperty(_errorMessages, 36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, \"Unexpected custom directive on <slot> outlet.\"), _defineProperty(_errorMessages, 37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */, \"Mixed v-slot usage on both the component and nested <template>.\" + \"When there are multiple named slots, all slots should use <template> \" + \"syntax to avoid scope ambiguity.\"), _defineProperty(_errorMessages, 38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */, \"Duplicate slot names found. \"), _defineProperty(_errorMessages, 39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, \"Extraneous children found when component already has explicitly named \" + \"default slot. These children will be ignored.\"), _defineProperty(_errorMessages, 40 /* ErrorCodes.X_V_SLOT_MISPLACED */, \"v-slot can only be used on components or <template> tags.\"), _defineProperty(_errorMessages, 41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */, \"v-model is missing expression.\"), _defineProperty(_errorMessages, 42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */, \"v-model value must be a valid JavaScript member expression.\"), _defineProperty(_errorMessages, 43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */, \"v-model cannot be used on v-for or v-slot scope variables because they are not writable.\"), _defineProperty(_errorMessages, 44 /* ErrorCodes.X_V_MODEL_ON_PROPS */, \"v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.\"), _defineProperty(_errorMessages, 45 /* ErrorCodes.X_INVALID_EXPRESSION */, \"Error parsing JavaScript expression: \"), _defineProperty(_errorMessages, 46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */, \"<KeepAlive> expects exactly one child component.\"), _defineProperty(_errorMessages, 47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */, \"\\\"prefixIdentifiers\\\" option is not supported in this build of compiler.\"), _defineProperty(_errorMessages, 48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */, \"ES module mode is not supported in this build of compiler.\"), _defineProperty(_errorMessages, 49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */, \"\\\"cacheHandlers\\\" option is only supported when the \\\"prefixIdentifiers\\\" option is enabled.\"), _defineProperty(_errorMessages, 50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */, \"\\\"scopeId\\\" option is only supported in module mode.\"), _defineProperty(_errorMessages, 51 /* ErrorCodes.__EXTEND_POINT__ */, \"\"), _errorMessages);\nvar FRAGMENT = Symbol(process.env.NODE_ENV !== 'production' ? \"Fragment\" : \"\");\nvar TELEPORT = Symbol(process.env.NODE_ENV !== 'production' ? \"Teleport\" : \"\");\nvar SUSPENSE = Symbol(process.env.NODE_ENV !== 'production' ? \"Suspense\" : \"\");\nvar KEEP_ALIVE = Symbol(process.env.NODE_ENV !== 'production' ? \"KeepAlive\" : \"\");\nvar BASE_TRANSITION = Symbol(process.env.NODE_ENV !== 'production' ? \"BaseTransition\" : \"\");\nvar OPEN_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? \"openBlock\" : \"\");\nvar CREATE_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? \"createBlock\" : \"\");\nvar CREATE_ELEMENT_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? \"createElementBlock\" : \"\");\nvar CREATE_VNODE = Symbol(process.env.NODE_ENV !== 'production' ? \"createVNode\" : \"\");\nvar CREATE_ELEMENT_VNODE = Symbol(process.env.NODE_ENV !== 'production' ? \"createElementVNode\" : \"\");\nvar CREATE_COMMENT = Symbol(process.env.NODE_ENV !== 'production' ? \"createCommentVNode\" : \"\");\nvar CREATE_TEXT = Symbol(process.env.NODE_ENV !== 'production' ? \"createTextVNode\" : \"\");\nvar CREATE_STATIC = Symbol(process.env.NODE_ENV !== 'production' ? \"createStaticVNode\" : \"\");\nvar RESOLVE_COMPONENT = Symbol(process.env.NODE_ENV !== 'production' ? \"resolveComponent\" : \"\");\nvar RESOLVE_DYNAMIC_COMPONENT = Symbol(process.env.NODE_ENV !== 'production' ? \"resolveDynamicComponent\" : \"\");\nvar RESOLVE_DIRECTIVE = Symbol(process.env.NODE_ENV !== 'production' ? \"resolveDirective\" : \"\");\nvar RESOLVE_FILTER = Symbol(process.env.NODE_ENV !== 'production' ? \"resolveFilter\" : \"\");\nvar WITH_DIRECTIVES = Symbol(process.env.NODE_ENV !== 'production' ? \"withDirectives\" : \"\");\nvar RENDER_LIST = Symbol(process.env.NODE_ENV !== 'production' ? \"renderList\" : \"\");\nvar RENDER_SLOT = Symbol(process.env.NODE_ENV !== 'production' ? \"renderSlot\" : \"\");\nvar CREATE_SLOTS = Symbol(process.env.NODE_ENV !== 'production' ? \"createSlots\" : \"\");\nvar TO_DISPLAY_STRING = Symbol(process.env.NODE_ENV !== 'production' ? \"toDisplayString\" : \"\");\nvar MERGE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? \"mergeProps\" : \"\");\nvar NORMALIZE_CLASS = Symbol(process.env.NODE_ENV !== 'production' ? \"normalizeClass\" : \"\");\nvar NORMALIZE_STYLE = Symbol(process.env.NODE_ENV !== 'production' ? \"normalizeStyle\" : \"\");\nvar NORMALIZE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? \"normalizeProps\" : \"\");\nvar GUARD_REACTIVE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? \"guardReactiveProps\" : \"\");\nvar TO_HANDLERS = Symbol(process.env.NODE_ENV !== 'production' ? \"toHandlers\" : \"\");\nvar CAMELIZE = Symbol(process.env.NODE_ENV !== 'production' ? \"camelize\" : \"\");\nvar CAPITALIZE = Symbol(process.env.NODE_ENV !== 'production' ? \"capitalize\" : \"\");\nvar TO_HANDLER_KEY = Symbol(process.env.NODE_ENV !== 'production' ? \"toHandlerKey\" : \"\");\nvar SET_BLOCK_TRACKING = Symbol(process.env.NODE_ENV !== 'production' ? \"setBlockTracking\" : \"\");\nvar PUSH_SCOPE_ID = Symbol(process.env.NODE_ENV !== 'production' ? \"pushScopeId\" : \"\");\nvar POP_SCOPE_ID = Symbol(process.env.NODE_ENV !== 'production' ? \"popScopeId\" : \"\");\nvar WITH_CTX = Symbol(process.env.NODE_ENV !== 'production' ? \"withCtx\" : \"\");\nvar UNREF = Symbol(process.env.NODE_ENV !== 'production' ? \"unref\" : \"\");\nvar IS_REF = Symbol(process.env.NODE_ENV !== 'production' ? \"isRef\" : \"\");\nvar WITH_MEMO = Symbol(process.env.NODE_ENV !== 'production' ? \"withMemo\" : \"\");\nvar IS_MEMO_SAME = Symbol(process.env.NODE_ENV !== 'production' ? \"isMemoSame\" : \"\");\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\nvar helperNameMap = (_helperNameMap = {}, _defineProperty(_helperNameMap, FRAGMENT, \"Fragment\"), _defineProperty(_helperNameMap, TELEPORT, \"Teleport\"), _defineProperty(_helperNameMap, SUSPENSE, \"Suspense\"), _defineProperty(_helperNameMap, KEEP_ALIVE, \"KeepAlive\"), _defineProperty(_helperNameMap, BASE_TRANSITION, \"BaseTransition\"), _defineProperty(_helperNameMap, OPEN_BLOCK, \"openBlock\"), _defineProperty(_helperNameMap, CREATE_BLOCK, \"createBlock\"), _defineProperty(_helperNameMap, CREATE_ELEMENT_BLOCK, \"createElementBlock\"), _defineProperty(_helperNameMap, CREATE_VNODE, \"createVNode\"), _defineProperty(_helperNameMap, CREATE_ELEMENT_VNODE, \"createElementVNode\"), _defineProperty(_helperNameMap, CREATE_COMMENT, \"createCommentVNode\"), _defineProperty(_helperNameMap, CREATE_TEXT, \"createTextVNode\"), _defineProperty(_helperNameMap, CREATE_STATIC, \"createStaticVNode\"), _defineProperty(_helperNameMap, RESOLVE_COMPONENT, \"resolveComponent\"), _defineProperty(_helperNameMap, RESOLVE_DYNAMIC_COMPONENT, \"resolveDynamicComponent\"), _defineProperty(_helperNameMap, RESOLVE_DIRECTIVE, \"resolveDirective\"), _defineProperty(_helperNameMap, RESOLVE_FILTER, \"resolveFilter\"), _defineProperty(_helperNameMap, WITH_DIRECTIVES, \"withDirectives\"), _defineProperty(_helperNameMap, RENDER_LIST, \"renderList\"), _defineProperty(_helperNameMap, RENDER_SLOT, \"renderSlot\"), _defineProperty(_helperNameMap, CREATE_SLOTS, \"createSlots\"), _defineProperty(_helperNameMap, TO_DISPLAY_STRING, \"toDisplayString\"), _defineProperty(_helperNameMap, MERGE_PROPS, \"mergeProps\"), _defineProperty(_helperNameMap, NORMALIZE_CLASS, \"normalizeClass\"), _defineProperty(_helperNameMap, NORMALIZE_STYLE, \"normalizeStyle\"), _defineProperty(_helperNameMap, NORMALIZE_PROPS, \"normalizeProps\"), _defineProperty(_helperNameMap, GUARD_REACTIVE_PROPS, \"guardReactiveProps\"), _defineProperty(_helperNameMap, TO_HANDLERS, \"toHandlers\"), _defineProperty(_helperNameMap, CAMELIZE, \"camelize\"), _defineProperty(_helperNameMap, CAPITALIZE, \"capitalize\"), _defineProperty(_helperNameMap, TO_HANDLER_KEY, \"toHandlerKey\"), _defineProperty(_helperNameMap, SET_BLOCK_TRACKING, \"setBlockTracking\"), _defineProperty(_helperNameMap, PUSH_SCOPE_ID, \"pushScopeId\"), _defineProperty(_helperNameMap, POP_SCOPE_ID, \"popScopeId\"), _defineProperty(_helperNameMap, WITH_CTX, \"withCtx\"), _defineProperty(_helperNameMap, UNREF, \"unref\"), _defineProperty(_helperNameMap, IS_REF, \"isRef\"), _defineProperty(_helperNameMap, WITH_MEMO, \"withMemo\"), _defineProperty(_helperNameMap, IS_MEMO_SAME, \"isMemoSame\"), _helperNameMap);\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach(function (s) {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\n// AST Utilities ---------------------------------------------------------------\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nvar locStub = {\n  source: '',\n  start: {\n    line: 1,\n    column: 1,\n    offset: 0\n  },\n  end: {\n    line: 1,\n    column: 1,\n    offset: 0\n  }\n};\nfunction createRoot(children) {\n  var loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : locStub;\n  return {\n    type: 0 /* NodeTypes.ROOT */,\n    children: children,\n    helpers: [],\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: undefined,\n    loc: loc\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives) {\n  var isBlock = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n  var disableTracking = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var isComponent = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n  var loc = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : locStub;\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13 /* NodeTypes.VNODE_CALL */,\n    tag: tag,\n    props: props,\n    children: children,\n    patchFlag: patchFlag,\n    dynamicProps: dynamicProps,\n    directives: directives,\n    isBlock: isBlock,\n    disableTracking: disableTracking,\n    isComponent: isComponent,\n    loc: loc\n  };\n}\nfunction createArrayExpression(elements) {\n  var loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : locStub;\n  return {\n    type: 17 /* NodeTypes.JS_ARRAY_EXPRESSION */,\n    loc: loc,\n    elements: elements\n  };\n}\nfunction createObjectExpression(properties) {\n  var loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : locStub;\n  return {\n    type: 15 /* NodeTypes.JS_OBJECT_EXPRESSION */,\n    loc: loc,\n    properties: properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16 /* NodeTypes.JS_PROPERTY */,\n    loc: locStub,\n    key: isString(key) ? createSimpleExpression(key, true) : key,\n    value: value\n  };\n}\nfunction createSimpleExpression(content) {\n  var isStatic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var loc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : locStub;\n  var constType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return {\n    type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n    loc: loc,\n    content: content,\n    isStatic: isStatic,\n    constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5 /* NodeTypes.INTERPOLATION */,\n    loc: loc,\n    content: isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children) {\n  var loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : locStub;\n  return {\n    type: 8 /* NodeTypes.COMPOUND_EXPRESSION */,\n    loc: loc,\n    children: children\n  };\n}\nfunction createCallExpression(callee) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var loc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : locStub;\n  return {\n    type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\n    loc: loc,\n    callee: callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params) {\n  var returns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var newline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSlot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var loc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : locStub;\n  return {\n    type: 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */,\n    params: params,\n    returns: returns,\n    newline: newline,\n    isSlot: isSlot,\n    loc: loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate) {\n  var newline = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  return {\n    type: 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */,\n    test: test,\n    consequent: consequent,\n    alternate: alternate,\n    newline: newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value) {\n  var isVNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: 20 /* NodeTypes.JS_CACHE_EXPRESSION */,\n    index: index,\n    value: value,\n    isVNode: isVNode,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21 /* NodeTypes.JS_BLOCK_STATEMENT */,\n    body: body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22 /* NodeTypes.JS_TEMPLATE_LITERAL */,\n    elements: elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23 /* NodeTypes.JS_IF_STATEMENT */,\n    test: test,\n    consequent: consequent,\n    alternate: alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */,\n    left: left,\n    right: right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */,\n    expressions: expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26 /* NodeTypes.JS_RETURN_STATEMENT */,\n    returns: returns,\n    loc: locStub\n  };\n}\nvar isStaticExp = function isStaticExp(p) {\n  return p.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.isStatic;\n};\nvar isBuiltInType = function isBuiltInType(tag, expected) {\n  return tag === expected || tag === hyphenate(expected);\n};\nfunction isCoreComponent(tag) {\n  if (isBuiltInType(tag, 'Teleport')) {\n    return TELEPORT;\n  } else if (isBuiltInType(tag, 'Suspense')) {\n    return SUSPENSE;\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\n    return KEEP_ALIVE;\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\n    return BASE_TRANSITION;\n  }\n}\nvar nonIdentifierRE = /^\\d|[^\\$\\w]/;\nvar isSimpleIdentifier = function isSimpleIdentifier(name) {\n  return !nonIdentifierRE.test(name);\n};\nvar validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nvar validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nvar whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\n/**\n * Simple lexer to check if an expression is a member expression. This is\n * lax and only checks validity at the root level (i.e. does not validate exps\n * inside square brackets), but it's ok since these are only used on template\n * expressions and false positives are invalid expressions in the first place.\n */\nvar isMemberExpressionBrowser = function isMemberExpressionBrowser(path) {\n  // remove whitespaces around . or [ first\n  path = path.trim().replace(whitespaceRE, function (s) {\n    return s.trim();\n  });\n  var state = 0 /* MemberExpLexState.inMemberExp */;\n  var stateStack = [];\n  var currentOpenBracketCount = 0;\n  var currentOpenParensCount = 0;\n  var currentStringType = null;\n  for (var i = 0; i < path.length; i++) {\n    var _char = path.charAt(i);\n    switch (state) {\n      case 0 /* MemberExpLexState.inMemberExp */:\n        if (_char === '[') {\n          stateStack.push(state);\n          state = 1 /* MemberExpLexState.inBrackets */;\n          currentOpenBracketCount++;\n        } else if (_char === '(') {\n          stateStack.push(state);\n          state = 2 /* MemberExpLexState.inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(_char)) {\n          return false;\n        }\n        break;\n      case 1 /* MemberExpLexState.inBrackets */:\n        if (_char === \"'\" || _char === \"\\\"\" || _char === '`') {\n          stateStack.push(state);\n          state = 3 /* MemberExpLexState.inString */;\n          currentStringType = _char;\n        } else if (_char === \"[\") {\n          currentOpenBracketCount++;\n        } else if (_char === \"]\") {\n          if (! --currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* MemberExpLexState.inParens */:\n        if (_char === \"'\" || _char === \"\\\"\" || _char === '`') {\n          stateStack.push(state);\n          state = 3 /* MemberExpLexState.inString */;\n          currentStringType = _char;\n        } else if (_char === \"(\") {\n          currentOpenParensCount++;\n        } else if (_char === \")\") {\n          // if the exp ends as a call then it should not be considered valid\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (! --currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* MemberExpLexState.inString */:\n        if (_char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nvar isMemberExpressionNode = NOOP;\nvar isMemberExpression = isMemberExpressionBrowser;\nfunction getInnerRange(loc, offset, length) {\n  var source = loc.source.slice(offset, offset + length);\n  var newLoc = {\n    source: source,\n    start: advancePositionWithClone(loc.start, loc.source, offset),\n    end: loc.end\n  };\n  if (length != null) {\n    newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\n  }\n  return newLoc;\n}\nfunction advancePositionWithClone(pos, source) {\n  var numberOfCharacters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : source.length;\n  return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\n}\n// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nfunction advancePositionWithMutation(pos, source) {\n  var numberOfCharacters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : source.length;\n  var linesCount = 0;\n  var lastNewLinePos = -1;\n  for (var i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  /* istanbul ignore if */\n  if (!condition) {\n    throw new Error(msg || \"unexpected compiler condition\");\n  }\n}\nfunction findDir(node, name) {\n  var allowEmpty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  for (var i = 0; i < node.props.length; i++) {\n    var p = node.props[i];\n    if (p.type === 7 /* NodeTypes.DIRECTIVE */ && (allowEmpty || p.exp) && (isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name) {\n  var dynamicOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var allowEmpty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  for (var i = 0; i < node.props.length; i++) {\n    var p = node.props[i];\n    if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n      if (dynamicOnly) continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === 'bind' && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(function (p) {\n    return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && (!p.arg ||\n    // v-bind=\"obj\"\n    p.arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n    // v-bind:[_ctx.foo]\n    !p.arg.isStatic);\n  } // v-bind:[foo]\n  );\n}\n\nfunction isText(node) {\n  return node.type === 5 /* NodeTypes.INTERPOLATION */ || node.type === 2 /* NodeTypes.TEXT */;\n}\n\nfunction isVSlot(p) {\n  return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'slot';\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 3 /* ElementTypes.TEMPLATE */;\n}\n\nfunction isSlotOutlet(node) {\n  return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 2 /* ElementTypes.SLOT */;\n}\n\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nvar propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props) {\n  var callPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (props && !isString(props) && props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n    var callee = props.callee;\n    if (!isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  var propsWithInjection;\n  /**\n   * 1. mergeProps(...)\n   * 2. toHandlers(...)\n   * 3. normalizeProps(...)\n   * 4. normalizeProps(guardReactiveProps(...))\n   *\n   * we need to get the real props before normalization\n   */\n  var props = node.type === 13 /* NodeTypes.VNODE_CALL */ ? node.props : node.arguments[2];\n  var callPath = [];\n  var parentCall;\n  if (props && !isString(props) && props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n    var ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n    // merged props... add ours\n    // only inject key to object literal if it's the first argument so that\n    // if doesn't override user provided keys\n    var first = props.arguments[0];\n    if (!isString(first) && first.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n      // #6631\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        // #2366\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    // single v-bind with expression, return a merged replacement\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]);\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n    // the `guardReactiveProps` will no longer be needed\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13 /* NodeTypes.VNODE_CALL */) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\n// check existing key to avoid overriding user provided keys\nfunction hasProp(prop, props) {\n  var result = false;\n  if (prop.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    var propKeyName = prop.key.content;\n    result = props.properties.some(function (p) {\n      return p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.key.content === propKeyName;\n    });\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n  return \"_\".concat(type, \"_\").concat(name.replace(/[^\\w]/g, function (searchValue, replaceValue) {\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\n  }));\n}\n// Check if a node contains expressions that reference current context scope ids\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1 /* NodeTypes.ELEMENT */:\n      for (var i = 0; i < node.props.length; i++) {\n        var p = node.props[i];\n        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some(function (c) {\n        return hasScopeRef(c, ids);\n      });\n    case 11 /* NodeTypes.FOR */:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some(function (c) {\n        return hasScopeRef(c, ids);\n      });\n    case 9 /* NodeTypes.IF */:\n      return node.branches.some(function (b) {\n        return hasScopeRef(b, ids);\n      });\n    case 10 /* NodeTypes.IF_BRANCH */:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some(function (c) {\n        return hasScopeRef(c, ids);\n      });\n    case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n      return node.children.some(function (c) {\n        return isObject(c) && hasScopeRef(c, ids);\n      });\n    case 5 /* NodeTypes.INTERPOLATION */:\n    case 12 /* NodeTypes.TEXT_CALL */:\n      return hasScopeRef(node.content, ids);\n    case 2 /* NodeTypes.TEXT */:\n    case 3 /* NodeTypes.COMMENT */:\n      return false;\n    default:\n      if (process.env.NODE_ENV !== 'production') ;\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nfunction makeBlock(node, _ref) {\n  var helper = _ref.helper,\n    removeHelper = _ref.removeHelper,\n    inSSR = _ref.inSSR;\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\nvar deprecationData = (_deprecationData = {}, _defineProperty(_deprecationData, \"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, {\n  message: \"Platform-native elements with \\\"is\\\" prop will no longer be \" + \"treated as components in Vue 3 unless the \\\"is\\\" value is explicitly \" + \"prefixed with \\\"vue:\\\".\",\n  link: \"https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html\"\n}), _defineProperty(_deprecationData, \"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */, {\n  message: function message(key) {\n    return \".sync modifier for v-bind has been removed. Use v-model with \" + \"argument instead. `v-bind:\".concat(key, \".sync` should be changed to \") + \"`v-model:\".concat(key, \"`.\");\n  },\n  link: \"https://v3-migration.vuejs.org/breaking-changes/v-model.html\"\n}), _defineProperty(_deprecationData, \"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */, {\n  message: \".prop modifier for v-bind has been removed and no longer necessary. \" + \"Vue 3 will automatically set a binding as DOM property when appropriate.\"\n}), _defineProperty(_deprecationData, \"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, {\n  message: \"v-bind=\\\"obj\\\" usage is now order sensitive and behaves like JavaScript \" + \"object spread: it will now overwrite an existing non-mergeable attribute \" + \"that appears before v-bind in the case of conflict. \" + \"To retain 2.x behavior, move v-bind to make it the first attribute. \" + \"You can also suppress this warning if the usage is intended.\",\n  link: \"https://v3-migration.vuejs.org/breaking-changes/v-bind.html\"\n}), _defineProperty(_deprecationData, \"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */, {\n  message: \".native modifier for v-on has been removed as is no longer necessary.\",\n  link: \"https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html\"\n}), _defineProperty(_deprecationData, \"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, {\n  message: \"v-if / v-for precedence when used on the same element has changed \" + \"in Vue 3: v-if now takes higher precedence and will no longer have \" + \"access to v-for scope variables. It is best to avoid the ambiguity \" + \"with <template> tags or use a computed property that filters v-for \" + \"data source.\",\n  link: \"https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html\"\n}), _defineProperty(_deprecationData, \"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, {\n  message: \"<template> with no special directives will render as a native template \" + \"element instead of its inner content in Vue 3.\"\n}), _defineProperty(_deprecationData, \"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */, {\n  message: \"\\\"inline-template\\\" has been removed in Vue 3.\",\n  link: \"https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html\"\n}), _defineProperty(_deprecationData, \"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, {\n  message: \"filters have been removed in Vue 3. \" + \"The \\\"|\\\" symbol will be treated as native JavaScript bitwise OR operator. \" + \"Use method calls or computed properties instead.\",\n  link: \"https://v3-migration.vuejs.org/breaking-changes/filters.html\"\n}), _deprecationData);\nfunction getCompatValue(key, context) {\n  var config = context.options ? context.options.compatConfig : context.compatConfig;\n  var value = config && config[key];\n  if (key === 'MODE') {\n    return value || 3; // compiler defaults to v3 behavior\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  var mode = getCompatValue('MODE', context);\n  var value = getCompatValue(key, context);\n  // in v3 mode, only enable if explicitly set to true\n  // otherwise enable for any non-false value\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc) {\n  var enabled = isCompatEnabled(key, context);\n  if (process.env.NODE_ENV !== 'production' && enabled) {\n    for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n    warnDeprecation.apply(void 0, [key, context, loc].concat(args));\n  }\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc) {\n  var val = getCompatValue(key, context);\n  if (val === 'suppress-warning') {\n    return;\n  }\n  var _deprecationData$key = deprecationData[key],\n    message = _deprecationData$key.message,\n    link = _deprecationData$key.link;\n  for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n    args[_key2 - 3] = arguments[_key2];\n  }\n  var msg = \"(deprecation \".concat(key, \") \").concat(typeof message === 'function' ? message.apply(void 0, args) : message).concat(link ? \"\\n  Details: \".concat(link) : \"\");\n  var err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n}\n\n// The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\nvar decodeRE = /&(gt|lt|amp|apos|quot);/g;\nvar decodeMap = {\n  gt: '>',\n  lt: '<',\n  amp: '&',\n  apos: \"'\",\n  quot: '\"'\n};\nvar defaultParserOptions = {\n  delimiters: [\"{{\", \"}}\"],\n  getNamespace: function getNamespace() {\n    return 0;\n  } /* Namespaces.HTML */,\n  getTextMode: function getTextMode() {\n    return 0;\n  } /* TextModes.DATA */,\n  isVoidTag: NO,\n  isPreTag: NO,\n  isCustomElement: NO,\n  decodeEntities: function decodeEntities(rawText) {\n    return rawText.replace(decodeRE, function (_, p1) {\n      return decodeMap[p1];\n    });\n  },\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: process.env.NODE_ENV !== 'production'\n};\nfunction baseParse(content) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var context = createParserContext(content, options);\n  var start = getCursor(context);\n  return createRoot(parseChildren(context, 0 /* TextModes.DATA */, []), getSelection(context, start));\n}\nfunction createParserContext(content, rawOptions) {\n  var options = extend({}, defaultParserOptions);\n  var key;\n  for (key in rawOptions) {\n    // @ts-ignore\n    options[key] = rawOptions[key] === undefined ? defaultParserOptions[key] : rawOptions[key];\n  }\n  return {\n    options: options,\n    column: 1,\n    line: 1,\n    offset: 0,\n    originalSource: content,\n    source: content,\n    inPre: false,\n    inVPre: false,\n    onWarn: options.onWarn\n  };\n}\nfunction parseChildren(context, mode, ancestors) {\n  var parent = last(ancestors);\n  var ns = parent ? parent.ns : 0 /* Namespaces.HTML */;\n  var nodes = [];\n  while (!isEnd(context, mode, ancestors)) {\n    var s = context.source;\n    var node = undefined;\n    if (mode === 0 /* TextModes.DATA */ || mode === 1 /* TextModes.RCDATA */) {\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n        // '{{'\n        node = parseInterpolation(context, mode);\n      } else if (mode === 0 /* TextModes.DATA */ && s[0] === '<') {\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n        if (s.length === 1) {\n          emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 1);\n        } else if (s[1] === '!') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n          if (startsWith(s, '<!--')) {\n            node = parseComment(context);\n          } else if (startsWith(s, '<!DOCTYPE')) {\n            // Ignore DOCTYPE by a limitation.\n            node = parseBogusComment(context);\n          } else if (startsWith(s, '<![CDATA[')) {\n            if (ns !== 0 /* Namespaces.HTML */) {\n              node = parseCDATA(context, ancestors);\n            } else {\n              emitError(context, 1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */);\n              node = parseBogusComment(context);\n            }\n          } else {\n            emitError(context, 11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */);\n            node = parseBogusComment(context);\n          }\n        } else if (s[1] === '/') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n          if (s.length === 2) {\n            emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 2);\n          } else if (s[2] === '>') {\n            emitError(context, 14 /* ErrorCodes.MISSING_END_TAG_NAME */, 2);\n            advanceBy(context, 3);\n            continue;\n          } else if (/[a-z]/i.test(s[2])) {\n            emitError(context, 23 /* ErrorCodes.X_INVALID_END_TAG */);\n            parseTag(context, 1 /* TagType.End */, parent);\n            continue;\n          } else {\n            emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\n            node = parseBogusComment(context);\n          }\n        } else if (/[a-z]/i.test(s[1])) {\n          node = parseElement(context, ancestors);\n          // 2.x <template> with no directive compat\n          if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context) && node && node.tag === 'template' && !node.props.some(function (p) {\n            return p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name);\n          })) {\n            process.env.NODE_ENV !== 'production' && warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context, node.loc);\n            node = node.children;\n          }\n        } else if (s[1] === '?') {\n          emitError(context, 21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\n          node = parseBogusComment(context);\n        } else {\n          emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\n        }\n      }\n    }\n    if (!node) {\n      node = parseText(context, mode);\n    }\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        pushNode(nodes, node[i]);\n      }\n    } else {\n      pushNode(nodes, node);\n    }\n  }\n  // Whitespace handling strategy like v2\n  var removedWhitespace = false;\n  if (mode !== 2 /* TextModes.RAWTEXT */ && mode !== 1 /* TextModes.RCDATA */) {\n    var shouldCondense = context.options.whitespace !== 'preserve';\n    for (var _i = 0; _i < nodes.length; _i++) {\n      var _node2 = nodes[_i];\n      if (_node2.type === 2 /* NodeTypes.TEXT */) {\n        if (!context.inPre) {\n          if (!/[^\\t\\r\\n\\f ]/.test(_node2.content)) {\n            var prev = nodes[_i - 1];\n            var next = nodes[_i + 1];\n            // Remove if:\n            // - the whitespace is the first or last node, or:\n            // - (condense mode) the whitespace is between twos comments, or:\n            // - (condense mode) the whitespace is between comment and element, or:\n            // - (condense mode) the whitespace is between two elements AND contains newline\n            if (!prev || !next || shouldCondense && (prev.type === 3 /* NodeTypes.COMMENT */ && next.type === 3 /* NodeTypes.COMMENT */ || prev.type === 3 /* NodeTypes.COMMENT */ && next.type === 1 /* NodeTypes.ELEMENT */ || prev.type === 1 /* NodeTypes.ELEMENT */ && next.type === 3 /* NodeTypes.COMMENT */ || prev.type === 1 /* NodeTypes.ELEMENT */ && next.type === 1 /* NodeTypes.ELEMENT */ && /[\\r\\n]/.test(_node2.content))) {\n              removedWhitespace = true;\n              nodes[_i] = null;\n            } else {\n              // Otherwise, the whitespace is condensed into a single space\n              _node2.content = ' ';\n            }\n          } else if (shouldCondense) {\n            // in condense mode, consecutive whitespaces in text are condensed\n            // down to a single space.\n            _node2.content = _node2.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\n          }\n        } else {\n          // #6410 normalize windows newlines in <pre>:\n          // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\n          // in the DOM\n          _node2.content = _node2.content.replace(/\\r\\n/g, '\\n');\n        }\n      }\n      // Remove comment nodes if desired by configuration.\n      else if (_node2.type === 3 /* NodeTypes.COMMENT */ && !context.options.comments) {\n        removedWhitespace = true;\n        nodes[_i] = null;\n      }\n    }\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n      // remove leading newline per html spec\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n      var first = nodes[0];\n      if (first && first.type === 2 /* NodeTypes.TEXT */) {\n        first.content = first.content.replace(/^\\r?\\n/, '');\n      }\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction pushNode(nodes, node) {\n  if (node.type === 2 /* NodeTypes.TEXT */) {\n    var prev = last(nodes);\n    // Merge if both this and the previous node are text and those are\n    // consecutive. This happens for cases like \"a < b\".\n    if (prev && prev.type === 2 /* NodeTypes.TEXT */ && prev.loc.end.offset === node.loc.start.offset) {\n      prev.content += node.content;\n      prev.loc.end = node.loc.end;\n      prev.loc.source += node.loc.source;\n      return;\n    }\n  }\n  nodes.push(node);\n}\nfunction parseCDATA(context, ancestors) {\n  advanceBy(context, 9);\n  var nodes = parseChildren(context, 3 /* TextModes.CDATA */, ancestors);\n  if (context.source.length === 0) {\n    emitError(context, 6 /* ErrorCodes.EOF_IN_CDATA */);\n  } else {\n    advanceBy(context, 3);\n  }\n  return nodes;\n}\nfunction parseComment(context) {\n  var start = getCursor(context);\n  var content;\n  // Regular comment.\n  var match = /--(\\!)?>/.exec(context.source);\n  if (!match) {\n    content = context.source.slice(4);\n    advanceBy(context, context.source.length);\n    emitError(context, 7 /* ErrorCodes.EOF_IN_COMMENT */);\n  } else {\n    if (match.index <= 3) {\n      emitError(context, 0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\n    }\n\n    if (match[1]) {\n      emitError(context, 10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */);\n    }\n\n    content = context.source.slice(4, match.index);\n    // Advancing with reporting nested comments.\n    var s = context.source.slice(0, match.index);\n    var prevIndex = 1,\n      nestedIndex = 0;\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\n      advanceBy(context, nestedIndex - prevIndex + 1);\n      if (nestedIndex + 4 < s.length) {\n        emitError(context, 16 /* ErrorCodes.NESTED_COMMENT */);\n      }\n\n      prevIndex = nestedIndex + 1;\n    }\n    advanceBy(context, match.index + match[0].length - prevIndex + 1);\n  }\n  return {\n    type: 3 /* NodeTypes.COMMENT */,\n    content: content,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseBogusComment(context) {\n  var start = getCursor(context);\n  var contentStart = context.source[1] === '?' ? 1 : 2;\n  var content;\n  var closeIndex = context.source.indexOf('>');\n  if (closeIndex === -1) {\n    content = context.source.slice(contentStart);\n    advanceBy(context, context.source.length);\n  } else {\n    content = context.source.slice(contentStart, closeIndex);\n    advanceBy(context, closeIndex + 1);\n  }\n  return {\n    type: 3 /* NodeTypes.COMMENT */,\n    content: content,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseElement(context, ancestors) {\n  // Start tag.\n  var wasInPre = context.inPre;\n  var wasInVPre = context.inVPre;\n  var parent = last(ancestors);\n  var element = parseTag(context, 0 /* TagType.Start */, parent);\n  var isPreBoundary = context.inPre && !wasInPre;\n  var isVPreBoundary = context.inVPre && !wasInVPre;\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n    // #4030 self-closing <pre> tag\n    if (isPreBoundary) {\n      context.inPre = false;\n    }\n    if (isVPreBoundary) {\n      context.inVPre = false;\n    }\n    return element;\n  }\n  // Children.\n  ancestors.push(element);\n  var mode = context.options.getTextMode(element, parent);\n  var children = parseChildren(context, mode, ancestors);\n  ancestors.pop();\n  // 2.x inline-template compat\n  {\n    var inlineTemplateProp = element.props.find(function (p) {\n      return p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'inline-template';\n    });\n    if (inlineTemplateProp && checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\n      var loc = getSelection(context, element.loc.end);\n      inlineTemplateProp.value = {\n        type: 2 /* NodeTypes.TEXT */,\n        content: loc.source,\n        loc: loc\n      };\n    }\n  }\n  element.children = children;\n  // End tag.\n  if (startsWithEndTagOpen(context.source, element.tag)) {\n    parseTag(context, 1 /* TagType.End */, parent);\n  } else {\n    emitError(context, 24 /* ErrorCodes.X_MISSING_END_TAG */, 0, element.loc.start);\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n      var first = children[0];\n      if (first && startsWith(first.loc.source, '<!--')) {\n        emitError(context, 8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\n      }\n    }\n  }\n\n  element.loc = getSelection(context, element.loc.start);\n  if (isPreBoundary) {\n    context.inPre = false;\n  }\n  if (isVPreBoundary) {\n    context.inVPre = false;\n  }\n  return element;\n}\nvar isSpecialTemplateDirective = /*#__PURE__*/makeMap(\"if,else,else-if,for,slot\");\nfunction parseTag(context, type, parent) {\n  // Tag open.\n  var start = getCursor(context);\n  var match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\n  var tag = match[1];\n  var ns = context.options.getNamespace(tag, parent);\n  advanceBy(context, match[0].length);\n  advanceSpaces(context);\n  // save current state in case we need to re-parse attributes with v-pre\n  var cursor = getCursor(context);\n  var currentSource = context.source;\n  // check <pre> tag\n  if (context.options.isPreTag(tag)) {\n    context.inPre = true;\n  }\n  // Attributes.\n  var props = parseAttributes(context, type);\n  // check v-pre\n  if (type === 0 /* TagType.Start */ && !context.inVPre && props.some(function (p) {\n    return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'pre';\n  })) {\n    context.inVPre = true;\n    // reset context\n    extend(context, cursor);\n    context.source = currentSource;\n    // re-parse attrs and filter out v-pre itself\n    props = parseAttributes(context, type).filter(function (p) {\n      return p.name !== 'v-pre';\n    });\n  }\n  // Tag close.\n  var isSelfClosing = false;\n  if (context.source.length === 0) {\n    emitError(context, 9 /* ErrorCodes.EOF_IN_TAG */);\n  } else {\n    isSelfClosing = startsWith(context.source, '/>');\n    if (type === 1 /* TagType.End */ && isSelfClosing) {\n      emitError(context, 4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */);\n    }\n\n    advanceBy(context, isSelfClosing ? 2 : 1);\n  }\n  if (type === 1 /* TagType.End */) {\n    return;\n  }\n  // 2.x deprecation checks\n  if (process.env.NODE_ENV !== 'production' && isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\n    var hasIf = false;\n    var hasFor = false;\n    for (var i = 0; i < props.length; i++) {\n      var p = props[i];\n      if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\n        if (p.name === 'if') {\n          hasIf = true;\n        } else if (p.name === 'for') {\n          hasFor = true;\n        }\n      }\n      if (hasIf && hasFor) {\n        warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\n        break;\n      }\n    }\n  }\n  var tagType = 0 /* ElementTypes.ELEMENT */;\n  if (!context.inVPre) {\n    if (tag === 'slot') {\n      tagType = 2 /* ElementTypes.SLOT */;\n    } else if (tag === 'template') {\n      if (props.some(function (p) {\n        return p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name);\n      })) {\n        tagType = 3 /* ElementTypes.TEMPLATE */;\n      }\n    } else if (isComponent(tag, props, context)) {\n      tagType = 1 /* ElementTypes.COMPONENT */;\n    }\n  }\n\n  return {\n    type: 1 /* NodeTypes.ELEMENT */,\n    ns: ns,\n    tag: tag,\n    tagType: tagType,\n    props: props,\n    isSelfClosing: isSelfClosing,\n    children: [],\n    loc: getSelection(context, start),\n    codegenNode: undefined // to be created during transform phase\n  };\n}\n\nfunction isComponent(tag, props, context) {\n  var options = context.options;\n  if (options.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === 'component' || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {\n    return true;\n  }\n  // at this point the tag should be a native tag, but check for potential \"is\"\n  // casting\n  for (var i = 0; i < props.length; i++) {\n    var p = props[i];\n    if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n      if (p.name === 'is' && p.value) {\n        if (p.value.content.startsWith('vue:')) {\n          return true;\n        } else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n          return true;\n        }\n      }\n    } else {\n      // directive\n      // v-is (TODO Deprecate)\n      if (p.name === 'is') {\n        return true;\n      } else if (\n      // :is on plain element - only treat as component in compat mode\n      p.name === 'bind' && isStaticArgOf(p.arg, 'is') && true && checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n        return true;\n      }\n    }\n  }\n}\nfunction parseAttributes(context, type) {\n  var props = [];\n  var attributeNames = new Set();\n  while (context.source.length > 0 && !startsWith(context.source, '>') && !startsWith(context.source, '/>')) {\n    if (startsWith(context.source, '/')) {\n      emitError(context, 22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */);\n      advanceBy(context, 1);\n      advanceSpaces(context);\n      continue;\n    }\n    if (type === 1 /* TagType.End */) {\n      emitError(context, 3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */);\n    }\n\n    var attr = parseAttribute(context, attributeNames);\n    // Trim whitespace between class\n    // https://github.com/vuejs/core/issues/4251\n    if (attr.type === 6 /* NodeTypes.ATTRIBUTE */ && attr.value && attr.name === 'class') {\n      attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\n    }\n    if (type === 0 /* TagType.Start */) {\n      props.push(attr);\n    }\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n      emitError(context, 15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\n    }\n\n    advanceSpaces(context);\n  }\n  return props;\n}\nfunction parseAttribute(context, nameSet) {\n  // Name.\n  var start = getCursor(context);\n  var match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n  var name = match[0];\n  if (nameSet.has(name)) {\n    emitError(context, 2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */);\n  }\n\n  nameSet.add(name);\n  if (name[0] === '=') {\n    emitError(context, 19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\n  }\n\n  {\n    var pattern = /[\"'<]/g;\n    var m;\n    while (m = pattern.exec(name)) {\n      emitError(context, 17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\n    }\n  }\n  advanceBy(context, name.length);\n  // Value\n  var value = undefined;\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    advanceSpaces(context);\n    advanceBy(context, 1);\n    advanceSpaces(context);\n    value = parseAttributeValue(context);\n    if (!value) {\n      emitError(context, 13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */);\n    }\n  }\n\n  var loc = getSelection(context, start);\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n    var _match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\n    var isPropShorthand = startsWith(name, '.');\n    var dirName = _match[1] || (isPropShorthand || startsWith(name, ':') ? 'bind' : startsWith(name, '@') ? 'on' : 'slot');\n    var arg;\n    if (_match[2]) {\n      var isSlot = dirName === 'slot';\n      var startOffset = name.lastIndexOf(_match[2]);\n      var _loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + _match[2].length + (isSlot && _match[3] || '').length));\n      var content = _match[2];\n      var isStatic = true;\n      if (content.startsWith('[')) {\n        isStatic = false;\n        if (!content.endsWith(']')) {\n          emitError(context, 27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\n          content = content.slice(1);\n        } else {\n          content = content.slice(1, content.length - 1);\n        }\n      } else if (isSlot) {\n        // #1241 special case for v-slot: vuetify relies extensively on slot\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n        // supports such usage so we are keeping it consistent with 2.x.\n        content += _match[3] || '';\n      }\n      arg = {\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n        content: content,\n        isStatic: isStatic,\n        constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : 0 /* ConstantTypes.NOT_CONSTANT */,\n        loc: _loc\n      };\n    }\n    if (value && value.isQuoted) {\n      var valueLoc = value.loc;\n      valueLoc.start.offset++;\n      valueLoc.start.column++;\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\n      valueLoc.source = valueLoc.source.slice(1, -1);\n    }\n    var modifiers = _match[3] ? _match[3].slice(1).split('.') : [];\n    if (isPropShorthand) modifiers.push('prop');\n    // 2.x compat v-bind:foo.sync -> v-model:foo\n    if (dirName === 'bind' && arg) {\n      if (modifiers.includes('sync') && checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\n        dirName = 'model';\n        modifiers.splice(modifiers.indexOf('sync'), 1);\n      }\n      if (process.env.NODE_ENV !== 'production' && modifiers.includes('prop')) {\n        checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */, context, loc);\n      }\n    }\n    return {\n      type: 7 /* NodeTypes.DIRECTIVE */,\n      name: dirName,\n      exp: value && {\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n        content: value.content,\n        isStatic: false,\n        // Treat as non-constant by default. This can be potentially set to\n        // other values by `transformExpression` to make it eligible for hoisting.\n        constType: 0 /* ConstantTypes.NOT_CONSTANT */,\n        loc: value.loc\n      },\n      arg: arg,\n      modifiers: modifiers,\n      loc: loc\n    };\n  }\n  // missing directive name or illegal directive name\n  if (!context.inVPre && startsWith(name, 'v-')) {\n    emitError(context, 26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */);\n  }\n\n  return {\n    type: 6 /* NodeTypes.ATTRIBUTE */,\n    name: name,\n    value: value && {\n      type: 2 /* NodeTypes.TEXT */,\n      content: value.content,\n      loc: value.loc\n    },\n    loc: loc\n  };\n}\nfunction parseAttributeValue(context) {\n  var start = getCursor(context);\n  var content;\n  var quote = context.source[0];\n  var isQuoted = quote === \"\\\"\" || quote === \"'\";\n  if (isQuoted) {\n    // Quoted value.\n    advanceBy(context, 1);\n    var endIndex = context.source.indexOf(quote);\n    if (endIndex === -1) {\n      content = parseTextData(context, context.source.length, 4 /* TextModes.ATTRIBUTE_VALUE */);\n    } else {\n      content = parseTextData(context, endIndex, 4 /* TextModes.ATTRIBUTE_VALUE */);\n      advanceBy(context, 1);\n    }\n  } else {\n    // Unquoted\n    var match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\n    if (!match) {\n      return undefined;\n    }\n    var unexpectedChars = /[\"'<=`]/g;\n    var m;\n    while (m = unexpectedChars.exec(match[0])) {\n      emitError(context, 18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\n    }\n    content = parseTextData(context, match[0].length, 4 /* TextModes.ATTRIBUTE_VALUE */);\n  }\n\n  return {\n    content: content,\n    isQuoted: isQuoted,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseInterpolation(context, mode) {\n  var _context$options$deli = _slicedToArray(context.options.delimiters, 2),\n    open = _context$options$deli[0],\n    close = _context$options$deli[1];\n  var closeIndex = context.source.indexOf(close, open.length);\n  if (closeIndex === -1) {\n    emitError(context, 25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */);\n    return undefined;\n  }\n  var start = getCursor(context);\n  advanceBy(context, open.length);\n  var innerStart = getCursor(context);\n  var innerEnd = getCursor(context);\n  var rawContentLength = closeIndex - open.length;\n  var rawContent = context.source.slice(0, rawContentLength);\n  var preTrimContent = parseTextData(context, rawContentLength, mode);\n  var content = preTrimContent.trim();\n  var startOffset = preTrimContent.indexOf(content);\n  if (startOffset > 0) {\n    advancePositionWithMutation(innerStart, rawContent, startOffset);\n  }\n  var endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\n  advancePositionWithMutation(innerEnd, rawContent, endOffset);\n  advanceBy(context, close.length);\n  return {\n    type: 5 /* NodeTypes.INTERPOLATION */,\n    content: {\n      type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n      isStatic: false,\n      // Set `isConstant` to false by default and will decide in transformExpression\n      constType: 0 /* ConstantTypes.NOT_CONSTANT */,\n      content: content,\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  };\n}\nfunction parseText(context, mode) {\n  var endTokens = mode === 3 /* TextModes.CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\n  var endIndex = context.source.length;\n  for (var i = 0; i < endTokens.length; i++) {\n    var index = context.source.indexOf(endTokens[i], 1);\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n  var start = getCursor(context);\n  var content = parseTextData(context, endIndex, mode);\n  return {\n    type: 2 /* NodeTypes.TEXT */,\n    content: content,\n    loc: getSelection(context, start)\n  };\n}\n/**\n * Get text data with a given length from the current location.\n * This translates HTML entities in the text data.\n */\nfunction parseTextData(context, length, mode) {\n  var rawText = context.source.slice(0, length);\n  advanceBy(context, length);\n  if (mode === 2 /* TextModes.RAWTEXT */ || mode === 3 /* TextModes.CDATA */ || !rawText.includes('&')) {\n    return rawText;\n  } else {\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\n    return context.options.decodeEntities(rawText, mode === 4 /* TextModes.ATTRIBUTE_VALUE */);\n  }\n}\n\nfunction getCursor(context) {\n  var column = context.column,\n    line = context.line,\n    offset = context.offset;\n  return {\n    column: column,\n    line: line,\n    offset: offset\n  };\n}\nfunction getSelection(context, start, end) {\n  end = end || getCursor(context);\n  return {\n    start: start,\n    end: end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  };\n}\nfunction last(xs) {\n  return xs[xs.length - 1];\n}\nfunction startsWith(source, searchString) {\n  return source.startsWith(searchString);\n}\nfunction advanceBy(context, numberOfCharacters) {\n  var source = context.source;\n  advancePositionWithMutation(context, source, numberOfCharacters);\n  context.source = source.slice(numberOfCharacters);\n}\nfunction advanceSpaces(context) {\n  var match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\n  if (match) {\n    advanceBy(context, match[0].length);\n  }\n}\nfunction getNewPosition(context, start, numberOfCharacters) {\n  return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\n}\nfunction emitError(context, code, offset) {\n  var loc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : getCursor(context);\n  if (offset) {\n    loc.offset += offset;\n    loc.column += offset;\n  }\n  context.options.onError(createCompilerError(code, {\n    start: loc,\n    end: loc,\n    source: ''\n  }));\n}\nfunction isEnd(context, mode, ancestors) {\n  var s = context.source;\n  switch (mode) {\n    case 0 /* TextModes.DATA */:\n      if (startsWith(s, '</')) {\n        // TODO: probably bad performance\n        for (var i = ancestors.length - 1; i >= 0; --i) {\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n            return true;\n          }\n        }\n      }\n      break;\n    case 1 /* TextModes.RCDATA */:\n    case 2 /* TextModes.RAWTEXT */:\n      {\n        var parent = last(ancestors);\n        if (parent && startsWithEndTagOpen(s, parent.tag)) {\n          return true;\n        }\n        break;\n      }\n    case 3 /* TextModes.CDATA */:\n      if (startsWith(s, ']]>')) {\n        return true;\n      }\n      break;\n  }\n  return !s;\n}\nfunction startsWithEndTagOpen(source, tag) {\n  return startsWith(source, '</') && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>');\n}\nfunction hoistStatic(root, context) {\n  walk(root, context,\n  // Root node is unfortunately non-hoistable due to potential parent\n  // fallthrough attributes.\n  isSingleElementRoot(root, root.children[0]));\n}\nfunction isSingleElementRoot(root, child) {\n  var children = root.children;\n  return children.length === 1 && child.type === 1 /* NodeTypes.ELEMENT */ && !isSlotOutlet(child);\n}\nfunction walk(node, context) {\n  var doNotHoistNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var children = node.children;\n  var originalCount = children.length;\n  var hoistedCount = 0;\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    // only plain elements & text calls are eligible for hoisting.\n    if (child.type === 1 /* NodeTypes.ELEMENT */ && child.tagType === 0 /* ElementTypes.ELEMENT */) {\n      var constantType = doNotHoistNode ? 0 /* ConstantTypes.NOT_CONSTANT */ : getConstantType(child, context);\n      if (constantType > 0 /* ConstantTypes.NOT_CONSTANT */) {\n        if (constantType >= 2 /* ConstantTypes.CAN_HOIST */) {\n          child.codegenNode.patchFlag = -1 /* PatchFlags.HOISTED */ + (process.env.NODE_ENV !== 'production' ? \" /* HOISTED */\" : \"\");\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        // node may contain dynamic children, but its props may be eligible for\n        // hoisting.\n        var codegenNode = child.codegenNode;\n        if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n          var flag = getPatchFlag(codegenNode);\n          if ((!flag || flag === 512 /* PatchFlags.NEED_PATCH */ || flag === 1 /* PatchFlags.TEXT */) && getGeneratedPropsConstantType(child, context) >= 2 /* ConstantTypes.CAN_HOIST */) {\n            var props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    }\n    // walk further\n    if (child.type === 1 /* NodeTypes.ELEMENT */) {\n      var _isComponent = child.tagType === 1 /* ElementTypes.COMPONENT */;\n      if (_isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, context);\n      if (_isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11 /* NodeTypes.FOR */) {\n      // Do not hoist v-for single child because it has to be a block\n      walk(child, context, child.children.length === 1);\n    } else if (child.type === 9 /* NodeTypes.IF */) {\n      for (var _i2 = 0; _i2 < child.branches.length; _i2++) {\n        // Do not hoist v-if single child because it has to be a block\n        walk(child.branches[_i2], context, child.branches[_i2].children.length === 1);\n      }\n    }\n  }\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n  // all children were hoisted - the entire children array is hoistable.\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 0 /* ElementTypes.ELEMENT */ && node.codegenNode && node.codegenNode.type === 13 /* NodeTypes.VNODE_CALL */ && isArray(node.codegenNode.children)) {\n    node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\n  }\n}\nfunction getConstantType(node, context) {\n  var constantCache = context.constantCache;\n  switch (node.type) {\n    case 1 /* NodeTypes.ELEMENT */:\n      if (node.tagType !== 0 /* ElementTypes.ELEMENT */) {\n        return 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n      var cached = constantCache.get(node);\n      if (cached !== undefined) {\n        return cached;\n      }\n      var codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13 /* NodeTypes.VNODE_CALL */) {\n        return 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n      if (codegenNode.isBlock && node.tag !== 'svg' && node.tag !== 'foreignObject') {\n        return 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n      var flag = getPatchFlag(codegenNode);\n      if (!flag) {\n        var _returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n        // Element itself has no patch flag. However we still need to check:\n        // 1. Even for a node with no patch flag, it is possible for it to contain\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\n        // injected keys or cached event handlers. Therefore we need to always\n        // check the codegenNode's props to be sure.\n        var generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n          constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n          return 0 /* ConstantTypes.NOT_CONSTANT */;\n        }\n\n        if (generatedPropsType < _returnType) {\n          _returnType = generatedPropsType;\n        }\n        // 2. its children.\n        for (var i = 0; i < node.children.length; i++) {\n          var childType = getConstantType(node.children[i], context);\n          if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n            constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\n          }\n\n          if (childType < _returnType) {\n            _returnType = childType;\n          }\n        }\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n        // type, check if any of the props can cause the type to be lowered\n        // we can skip can_patch because it's guaranteed by the absence of a\n        // patchFlag.\n        if (_returnType > 1 /* ConstantTypes.CAN_SKIP_PATCH */) {\n          for (var _i3 = 0; _i3 < node.props.length; _i3++) {\n            var p = node.props[_i3];\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && p.exp) {\n              var expType = getConstantType(p.exp, context);\n              if (expType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n              }\n\n              if (expType < _returnType) {\n                _returnType = expType;\n              }\n            }\n          }\n        }\n        // only svg/foreignObject could be block here, however if they are\n        // static then they don't need to be blocks since there will be no\n        // nested updates.\n        if (codegenNode.isBlock) {\n          // except set custom directives.\n          for (var _i4 = 0; _i4 < node.props.length; _i4++) {\n            var _p = node.props[_i4];\n            if (_p.type === 7 /* NodeTypes.DIRECTIVE */) {\n              constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n              return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n          }\n\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, _returnType);\n        return _returnType;\n      } else {\n        constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n        return 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n    case 2 /* NodeTypes.TEXT */:\n    case 3 /* NodeTypes.COMMENT */:\n      return 3 /* ConstantTypes.CAN_STRINGIFY */;\n    case 9 /* NodeTypes.IF */:\n    case 11 /* NodeTypes.FOR */:\n    case 10 /* NodeTypes.IF_BRANCH */:\n      return 0 /* ConstantTypes.NOT_CONSTANT */;\n    case 5 /* NodeTypes.INTERPOLATION */:\n    case 12 /* NodeTypes.TEXT_CALL */:\n      return getConstantType(node.content, context);\n    case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n      return node.constType;\n    case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n      var returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n      for (var _i5 = 0; _i5 < node.children.length; _i5++) {\n        var child = node.children[_i5];\n        if (isString(child) || isSymbol(child)) {\n          continue;\n        }\n        var _childType = getConstantType(child, context);\n        if (_childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n          return 0 /* ConstantTypes.NOT_CONSTANT */;\n        } else if (_childType < returnType) {\n          returnType = _childType;\n        }\n      }\n      return returnType;\n    default:\n      if (process.env.NODE_ENV !== 'production') ;\n      return 0 /* ConstantTypes.NOT_CONSTANT */;\n  }\n}\n\nvar allowHoistedHelperSet = new Set([NORMALIZE_CLASS, NORMALIZE_STYLE, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && !isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    var arg = value.arguments[0];\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0 /* ConstantTypes.NOT_CONSTANT */;\n}\n\nfunction getGeneratedPropsConstantType(node, context) {\n  var returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n  var props = getNodeProps(node);\n  if (props && props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n    var properties = props.properties;\n    for (var i = 0; i < properties.length; i++) {\n      var _properties$i = properties[i],\n        key = _properties$i.key,\n        value = _properties$i.value;\n      var keyType = getConstantType(key, context);\n      if (keyType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      var valueType = void 0;\n      if (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n        // some helper calls can be hoisted,\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n        // in this case we need to respect the ConstantType of the helper's arguments\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n      if (valueType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  var codegenNode = node.codegenNode;\n  if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n    return codegenNode.props;\n  }\n}\nfunction getPatchFlag(node) {\n  var flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : undefined;\n}\nfunction createTransformContext(root, _ref2) {\n  var _ref2$filename = _ref2.filename,\n    filename = _ref2$filename === void 0 ? '' : _ref2$filename,\n    _ref2$prefixIdentifie = _ref2.prefixIdentifiers,\n    prefixIdentifiers = _ref2$prefixIdentifie === void 0 ? false : _ref2$prefixIdentifie,\n    _ref2$hoistStatic = _ref2.hoistStatic,\n    hoistStatic = _ref2$hoistStatic === void 0 ? false : _ref2$hoistStatic,\n    _ref2$cacheHandlers = _ref2.cacheHandlers,\n    cacheHandlers = _ref2$cacheHandlers === void 0 ? false : _ref2$cacheHandlers,\n    _ref2$nodeTransforms = _ref2.nodeTransforms,\n    nodeTransforms = _ref2$nodeTransforms === void 0 ? [] : _ref2$nodeTransforms,\n    _ref2$directiveTransf = _ref2.directiveTransforms,\n    directiveTransforms = _ref2$directiveTransf === void 0 ? {} : _ref2$directiveTransf,\n    _ref2$transformHoist = _ref2.transformHoist,\n    transformHoist = _ref2$transformHoist === void 0 ? null : _ref2$transformHoist,\n    _ref2$isBuiltInCompon = _ref2.isBuiltInComponent,\n    isBuiltInComponent = _ref2$isBuiltInCompon === void 0 ? NOOP : _ref2$isBuiltInCompon,\n    _ref2$isCustomElement = _ref2.isCustomElement,\n    isCustomElement = _ref2$isCustomElement === void 0 ? NOOP : _ref2$isCustomElement,\n    _ref2$expressionPlugi = _ref2.expressionPlugins,\n    expressionPlugins = _ref2$expressionPlugi === void 0 ? [] : _ref2$expressionPlugi,\n    _ref2$scopeId = _ref2.scopeId,\n    scopeId = _ref2$scopeId === void 0 ? null : _ref2$scopeId,\n    _ref2$slotted = _ref2.slotted,\n    slotted = _ref2$slotted === void 0 ? true : _ref2$slotted,\n    _ref2$ssr = _ref2.ssr,\n    ssr = _ref2$ssr === void 0 ? false : _ref2$ssr,\n    _ref2$inSSR = _ref2.inSSR,\n    inSSR = _ref2$inSSR === void 0 ? false : _ref2$inSSR,\n    _ref2$ssrCssVars = _ref2.ssrCssVars,\n    ssrCssVars = _ref2$ssrCssVars === void 0 ? \"\" : _ref2$ssrCssVars,\n    _ref2$bindingMetadata = _ref2.bindingMetadata,\n    bindingMetadata = _ref2$bindingMetadata === void 0 ? EMPTY_OBJ : _ref2$bindingMetadata,\n    _ref2$inline = _ref2.inline,\n    inline = _ref2$inline === void 0 ? false : _ref2$inline,\n    _ref2$isTS = _ref2.isTS,\n    isTS = _ref2$isTS === void 0 ? false : _ref2$isTS,\n    _ref2$onError = _ref2.onError,\n    onError = _ref2$onError === void 0 ? defaultOnError : _ref2$onError,\n    _ref2$onWarn = _ref2.onWarn,\n    onWarn = _ref2$onWarn === void 0 ? defaultOnWarn : _ref2$onWarn,\n    compatConfig = _ref2.compatConfig;\n  var nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\n  var context = {\n    // options\n    selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\n    prefixIdentifiers: prefixIdentifiers,\n    hoistStatic: hoistStatic,\n    cacheHandlers: cacheHandlers,\n    nodeTransforms: nodeTransforms,\n    directiveTransforms: directiveTransforms,\n    transformHoist: transformHoist,\n    isBuiltInComponent: isBuiltInComponent,\n    isCustomElement: isCustomElement,\n    expressionPlugins: expressionPlugins,\n    scopeId: scopeId,\n    slotted: slotted,\n    ssr: ssr,\n    inSSR: inSSR,\n    ssrCssVars: ssrCssVars,\n    bindingMetadata: bindingMetadata,\n    inline: inline,\n    isTS: isTS,\n    onError: onError,\n    onWarn: onWarn,\n    compatConfig: compatConfig,\n    // state\n    root: root,\n    helpers: new Map(),\n    components: new Set(),\n    directives: new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: new Map(),\n    temps: 0,\n    cached: 0,\n    identifiers: Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper: function helper(name) {\n      var count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper: function removeHelper(name) {\n      var count = context.helpers.get(name);\n      if (count) {\n        var currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers[\"delete\"](name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString: function helperString(name) {\n      return \"_\".concat(helperNameMap[context.helper(name)]);\n    },\n    replaceNode: function replaceNode(node) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        if (!context.currentNode) {\n          throw new Error(\"Node being replaced is already removed.\");\n        }\n        if (!context.parent) {\n          throw new Error(\"Cannot replace root node.\");\n        }\n      }\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode: function removeNode(node) {\n      if (process.env.NODE_ENV !== 'production' && !context.parent) {\n        throw new Error(\"Cannot remove root node.\");\n      }\n      var list = context.parent.children;\n      var removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && removalIndex < 0) {\n        throw new Error(\"node being removed is not a child of current parent\");\n      }\n      if (!node || node === context.currentNode) {\n        // current node removed\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        // sibling node removed\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: function onNodeRemoved() {},\n    addIdentifiers: function addIdentifiers(exp) {},\n    removeIdentifiers: function removeIdentifiers(exp) {},\n    hoist: function hoist(exp) {\n      if (isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      var identifier = createSimpleExpression(\"_hoisted_\".concat(context.hoists.length), false, exp.loc, 2 /* ConstantTypes.CAN_HOIST */);\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache: function cache(exp) {\n      var isVNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n  };\n  {\n    context.filters = new Set();\n  }\n  return context;\n}\nfunction transform(root, options) {\n  var context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  // finalize meta information\n  root.helpers = _toConsumableArray(context.helpers.keys());\n  root.components = _toConsumableArray(context.components);\n  root.directives = _toConsumableArray(context.directives);\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  {\n    root.filters = _toConsumableArray(context.filters);\n  }\n}\nfunction createRootCodegen(root, context) {\n  var helper = context.helper;\n  var children = root.children;\n  if (children.length === 1) {\n    var child = children[0];\n    // if the single child is an element, turn it into a block.\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      // single element root is never hoisted so codegenNode will never be\n      // SimpleExpressionNode\n      var codegenNode = child.codegenNode;\n      if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n        makeBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      // - single <slot/>, IfNode, ForNode: already blocks.\n      // - single text node: always patched.\n      // root codegen falls through via genNode()\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    // root has multiple nodes - return a fragment block.\n    var patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\n    var patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\n    // check if the fragment actually contains a single valid child with\n    // the rest being comments\n    if (process.env.NODE_ENV !== 'production' && children.filter(function (c) {\n      return c.type !== 3;\n    } /* NodeTypes.COMMENT */).length === 1) {\n      patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\n      patchFlagText += \", \".concat(PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]);\n    }\n\n    root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + (process.env.NODE_ENV !== 'production' ? \" /* \".concat(patchFlagText, \" */\") : \"\"), undefined, undefined, true, undefined, false /* isComponent */);\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  var i = 0;\n  var nodeRemoved = function nodeRemoved() {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    var child = parent.children[i];\n    if (isString(child)) continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  // apply transform plugins\n  var nodeTransforms = context.nodeTransforms;\n  var exitFns = [];\n  for (var _i6 = 0; _i6 < nodeTransforms.length; _i6++) {\n    var onExit = nodeTransforms[_i6](node, context);\n    if (onExit) {\n      if (isArray(onExit)) {\n        exitFns.push.apply(exitFns, _toConsumableArray(onExit));\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      // node was removed\n      return;\n    } else {\n      // node may have been replaced\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3 /* NodeTypes.COMMENT */:\n      if (!context.ssr) {\n        // inject import for the Comment symbol, which is needed for creating\n        // comment nodes with `createVNode`\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5 /* NodeTypes.INTERPOLATION */:\n      // no need to traverse, but we need to inject toString helper\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    // for container types, further traverse downwards\n    case 9 /* NodeTypes.IF */:\n      for (var _i7 = 0; _i7 < node.branches.length; _i7++) {\n        traverseNode(node.branches[_i7], context);\n      }\n      break;\n    case 10 /* NodeTypes.IF_BRANCH */:\n    case 11 /* NodeTypes.FOR */:\n    case 1 /* NodeTypes.ELEMENT */:\n    case 0 /* NodeTypes.ROOT */:\n      traverseChildren(node, context);\n      break;\n  }\n  // exit transforms\n  context.currentNode = node;\n  var i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  var matches = isString(name) ? function (n) {\n    return n === name;\n  } : function (n) {\n    return name.test(n);\n  };\n  return function (node, context) {\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\n      var props = node.props;\n      // structural directive transforms are not concerned with slots\n      // as they are handled separately in vSlot.ts\n      if (node.tagType === 3 /* ElementTypes.TEMPLATE */ && props.some(isVSlot)) {\n        return;\n      }\n      var exitFns = [];\n      for (var i = 0; i < props.length; i++) {\n        var prop = props[i];\n        if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && matches(prop.name)) {\n          // structural directives are removed to avoid infinite recursion\n          // also we remove them *before* applying so that it can further\n          // traverse itself in case it moves the node around\n          props.splice(i, 1);\n          i--;\n          var onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\nvar PURE_ANNOTATION = \"/*#__PURE__*/\";\nvar aliasHelper = function aliasHelper(s) {\n  return \"\".concat(helperNameMap[s], \": _\").concat(helperNameMap[s]);\n};\nfunction createCodegenContext(ast, _ref3) {\n  var _ref3$mode = _ref3.mode,\n    mode = _ref3$mode === void 0 ? 'function' : _ref3$mode,\n    _ref3$prefixIdentifie = _ref3.prefixIdentifiers,\n    prefixIdentifiers = _ref3$prefixIdentifie === void 0 ? mode === 'module' : _ref3$prefixIdentifie,\n    _ref3$sourceMap = _ref3.sourceMap,\n    sourceMap = _ref3$sourceMap === void 0 ? false : _ref3$sourceMap,\n    _ref3$filename = _ref3.filename,\n    filename = _ref3$filename === void 0 ? \"template.vue.html\" : _ref3$filename,\n    _ref3$scopeId = _ref3.scopeId,\n    scopeId = _ref3$scopeId === void 0 ? null : _ref3$scopeId,\n    _ref3$optimizeImports = _ref3.optimizeImports,\n    optimizeImports = _ref3$optimizeImports === void 0 ? false : _ref3$optimizeImports,\n    _ref3$runtimeGlobalNa = _ref3.runtimeGlobalName,\n    runtimeGlobalName = _ref3$runtimeGlobalNa === void 0 ? \"Vue\" : _ref3$runtimeGlobalNa,\n    _ref3$runtimeModuleNa = _ref3.runtimeModuleName,\n    runtimeModuleName = _ref3$runtimeModuleNa === void 0 ? \"vue\" : _ref3$runtimeModuleNa,\n    _ref3$ssrRuntimeModul = _ref3.ssrRuntimeModuleName,\n    ssrRuntimeModuleName = _ref3$ssrRuntimeModul === void 0 ? 'vue/server-renderer' : _ref3$ssrRuntimeModul,\n    _ref3$ssr = _ref3.ssr,\n    ssr = _ref3$ssr === void 0 ? false : _ref3$ssr,\n    _ref3$isTS = _ref3.isTS,\n    isTS = _ref3$isTS === void 0 ? false : _ref3$isTS,\n    _ref3$inSSR = _ref3.inSSR,\n    inSSR = _ref3$inSSR === void 0 ? false : _ref3$inSSR;\n  var context = {\n    mode: mode,\n    prefixIdentifiers: prefixIdentifiers,\n    sourceMap: sourceMap,\n    filename: filename,\n    scopeId: scopeId,\n    optimizeImports: optimizeImports,\n    runtimeGlobalName: runtimeGlobalName,\n    runtimeModuleName: runtimeModuleName,\n    ssrRuntimeModuleName: ssrRuntimeModuleName,\n    ssr: ssr,\n    isTS: isTS,\n    inSSR: inSSR,\n    source: ast.loc.source,\n    code: \"\",\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: undefined,\n    helper: function helper(key) {\n      return \"_\".concat(helperNameMap[key]);\n    },\n    push: function push(code, node) {\n      context.code += code;\n    },\n    indent: function indent() {\n      _newline(++context.indentLevel);\n    },\n    deindent: function deindent() {\n      var withoutNewLine = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        _newline(--context.indentLevel);\n      }\n    },\n    newline: function newline() {\n      _newline(context.indentLevel);\n    }\n  };\n  function _newline(n) {\n    context.push('\\n' + \"  \".repeat(n));\n  }\n  return context;\n}\nfunction generate(ast) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  var mode = context.mode,\n    push = context.push,\n    prefixIdentifiers = context.prefixIdentifiers,\n    indent = context.indent,\n    deindent = context.deindent,\n    newline = context.newline,\n    scopeId = context.scopeId,\n    ssr = context.ssr;\n  var hasHelpers = ast.helpers.length > 0;\n  var useWithBlock = !prefixIdentifiers && mode !== 'module';\n  // preambles\n  // in setup() inline mode, the preamble is generated in a sub context\n  // and returned separately.\n  var preambleContext = context;\n  {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  // enter render function\n  var functionName = ssr ? \"ssrRender\" : \"render\";\n  var args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\n  var signature = args.join(', ');\n  {\n    push(\"function \".concat(functionName, \"(\").concat(signature, \") {\"));\n  }\n  indent();\n  if (useWithBlock) {\n    push(\"with (_ctx) {\");\n    indent();\n    // function mode const declarations should be inside with block\n    // also they should be renamed to avoid collision with user properties\n    if (hasHelpers) {\n      push(\"const { \".concat(ast.helpers.map(aliasHelper).join(', '), \" } = _Vue\"));\n      push(\"\\n\");\n      newline();\n    }\n  }\n  // generate asset resolution statements\n  if (ast.components.length) {\n    genAssets(ast.components, 'component', context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, 'directive', context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, 'filter', context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(\"let \");\n    for (var i = 0; i < ast.temps; i++) {\n      push(\"\".concat(i > 0 ? \", \" : \"\", \"_temp\").concat(i));\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(\"\\n\");\n    newline();\n  }\n  // generate the VNode tree expression\n  if (!ssr) {\n    push(\"return \");\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(\"null\");\n  }\n  if (useWithBlock) {\n    deindent();\n    push(\"}\");\n  }\n  deindent();\n  push(\"}\");\n  return {\n    ast: ast,\n    code: context.code,\n    preamble: \"\",\n    // SourceMapGenerator does have toJSON() method but it's not in the types\n    map: context.map ? context.map.toJSON() : undefined\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  var ssr = context.ssr,\n    prefixIdentifiers = context.prefixIdentifiers,\n    push = context.push,\n    newline = context.newline,\n    runtimeModuleName = context.runtimeModuleName,\n    runtimeGlobalName = context.runtimeGlobalName,\n    ssrRuntimeModuleName = context.ssrRuntimeModuleName;\n  var VueBinding = runtimeGlobalName;\n  // Generate const declaration for helpers\n  // In prefix mode, we place the const declaration at top so it's done\n  // only once; But if we not prefixing, we place the declaration inside the\n  // with block so it doesn't incur the `in` check cost for every helper access.\n  if (ast.helpers.length > 0) {\n    {\n      // \"with\" mode.\n      // save Vue in a separate variable to avoid collision\n      push(\"const _Vue = \".concat(VueBinding, \"\\n\"));\n      // in \"with\" mode, helpers are declared inside the with block to avoid\n      // has check cost, but hoists are lifted out of the function - we need\n      // to provide the helper here.\n      if (ast.hoists.length) {\n        var staticHelpers = [CREATE_VNODE, CREATE_ELEMENT_VNODE, CREATE_COMMENT, CREATE_TEXT, CREATE_STATIC].filter(function (helper) {\n          return ast.helpers.includes(helper);\n        }).map(aliasHelper).join(', ');\n        push(\"const { \".concat(staticHelpers, \" } = _Vue\\n\"));\n      }\n    }\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(\"return \");\n}\nfunction genAssets(assets, type, _ref4) {\n  var helper = _ref4.helper,\n    push = _ref4.push,\n    newline = _ref4.newline,\n    isTS = _ref4.isTS;\n  var resolver = helper(type === 'filter' ? RESOLVE_FILTER : type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\n  for (var i = 0; i < assets.length; i++) {\n    var id = assets[i];\n    // potential component implicit self-reference inferred from SFC filename\n    var maybeSelfReference = id.endsWith('__self');\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\"const \".concat(toValidAssetId(id, type), \" = \").concat(resolver, \"(\").concat(JSON.stringify(id)).concat(maybeSelfReference ? \", true\" : \"\", \")\").concat(isTS ? \"!\" : \"\"));\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  var push = context.push,\n    newline = context.newline,\n    helper = context.helper,\n    scopeId = context.scopeId,\n    mode = context.mode;\n  newline();\n  for (var i = 0; i < hoists.length; i++) {\n    var exp = hoists[i];\n    if (exp) {\n      push(\"const _hoisted_\".concat(i + 1, \" = \", \"\"));\n      genNode(exp, context);\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction isText$1(n) {\n  return isString(n) || n.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ || n.type === 2 /* NodeTypes.TEXT */ || n.type === 5 /* NodeTypes.INTERPOLATION */ || n.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\n}\n\nfunction genNodeListAsArray(nodes, context) {\n  var multilines = nodes.length > 3 || process.env.NODE_ENV !== 'production' && nodes.some(function (n) {\n    return isArray(n) || !isText$1(n);\n  });\n  context.push(\"[\");\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(\"]\");\n}\nfunction genNodeList(nodes, context) {\n  var multilines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var comma = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var push = context.push,\n    newline = context.newline;\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (isString(node)) {\n      push(node);\n    } else if (isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(',');\n        newline();\n      } else {\n        comma && push(', ');\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (isString(node)) {\n    context.push(node);\n    return;\n  }\n  if (isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1 /* NodeTypes.ELEMENT */:\n    case 9 /* NodeTypes.IF */:\n    case 11 /* NodeTypes.FOR */:\n      process.env.NODE_ENV !== 'production' && assert(node.codegenNode != null, \"Codegen node is missing for element/if/for node. \" + \"Apply appropriate transforms first.\");\n      genNode(node.codegenNode, context);\n      break;\n    case 2 /* NodeTypes.TEXT */:\n      genText(node, context);\n      break;\n    case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n      genExpression(node, context);\n      break;\n    case 5 /* NodeTypes.INTERPOLATION */:\n      genInterpolation(node, context);\n      break;\n    case 12 /* NodeTypes.TEXT_CALL */:\n      genNode(node.codegenNode, context);\n      break;\n    case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n      genCompoundExpression(node, context);\n      break;\n    case 3 /* NodeTypes.COMMENT */:\n      genComment(node, context);\n      break;\n    case 13 /* NodeTypes.VNODE_CALL */:\n      genVNodeCall(node, context);\n      break;\n    case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\n      genCallExpression(node, context);\n      break;\n    case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\n      genObjectExpression(node, context);\n      break;\n    case 17 /* NodeTypes.JS_ARRAY_EXPRESSION */:\n      genArrayExpression(node, context);\n      break;\n    case 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */:\n      genFunctionExpression(node, context);\n      break;\n    case 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */:\n      genConditionalExpression(node, context);\n      break;\n    case 20 /* NodeTypes.JS_CACHE_EXPRESSION */:\n      genCacheExpression(node, context);\n      break;\n    case 21 /* NodeTypes.JS_BLOCK_STATEMENT */:\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n    case 22 /* NodeTypes.JS_TEMPLATE_LITERAL */:\n      break;\n    case 23 /* NodeTypes.JS_IF_STATEMENT */:\n      break;\n    case 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */:\n      break;\n    case 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */:\n      break;\n    case 26 /* NodeTypes.JS_RETURN_STATEMENT */:\n      break;\n    /* istanbul ignore next */\n    case 10 /* NodeTypes.IF_BRANCH */:\n      // noop\n      break;\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, \"unhandled codegen node type: \".concat(node.type));\n        // make sure we exhaust all possible types\n        var exhaustiveCheck = node;\n        return exhaustiveCheck;\n      }\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), node);\n}\nfunction genExpression(node, context) {\n  var content = node.content,\n    isStatic = node.isStatic;\n  context.push(isStatic ? JSON.stringify(content) : content, node);\n}\nfunction genInterpolation(node, context) {\n  var push = context.push,\n    helper = context.helper,\n    pure = context.pure;\n  if (pure) push(PURE_ANNOTATION);\n  push(\"\".concat(helper(TO_DISPLAY_STRING), \"(\"));\n  genNode(node.content, context);\n  push(\")\");\n}\nfunction genCompoundExpression(node, context) {\n  for (var i = 0; i < node.children.length; i++) {\n    var child = node.children[i];\n    if (isString(child)) {\n      context.push(child);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  var push = context.push;\n  if (node.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n    push(\"[\");\n    genCompoundExpression(node, context);\n    push(\"]\");\n  } else if (node.isStatic) {\n    // only quote keys if necessary\n    var text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, node);\n  } else {\n    push(\"[\".concat(node.content, \"]\"), node);\n  }\n}\nfunction genComment(node, context) {\n  var push = context.push,\n    helper = context.helper,\n    pure = context.pure;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\"\".concat(helper(CREATE_COMMENT), \"(\").concat(JSON.stringify(node.content), \")\"), node);\n}\nfunction genVNodeCall(node, context) {\n  var push = context.push,\n    helper = context.helper,\n    pure = context.pure;\n  var tag = node.tag,\n    props = node.props,\n    children = node.children,\n    patchFlag = node.patchFlag,\n    dynamicProps = node.dynamicProps,\n    directives = node.directives,\n    isBlock = node.isBlock,\n    disableTracking = node.disableTracking,\n    isComponent = node.isComponent;\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + \"(\");\n  }\n  if (isBlock) {\n    push(\"(\".concat(helper(OPEN_BLOCK), \"(\").concat(disableTracking ? \"true\" : \"\", \"), \"));\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  var callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + \"(\", node);\n  genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\n  push(\")\");\n  if (isBlock) {\n    push(\")\");\n  }\n  if (directives) {\n    push(\", \");\n    genNode(directives, context);\n    push(\")\");\n  }\n}\nfunction genNullableArgs(args) {\n  var i = args.length;\n  while (i--) {\n    if (args[i] != null) break;\n  }\n  return args.slice(0, i + 1).map(function (arg) {\n    return arg || \"null\";\n  });\n}\n// JavaScript\nfunction genCallExpression(node, context) {\n  var push = context.push,\n    helper = context.helper,\n    pure = context.pure;\n  var callee = isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + \"(\", node);\n  genNodeList(node.arguments, context);\n  push(\")\");\n}\nfunction genObjectExpression(node, context) {\n  var push = context.push,\n    indent = context.indent,\n    deindent = context.deindent,\n    newline = context.newline;\n  var properties = node.properties;\n  if (!properties.length) {\n    push(\"{}\", node);\n    return;\n  }\n  var multilines = properties.length > 1 || process.env.NODE_ENV !== 'production' && properties.some(function (p) {\n    return p.value.type !== 4;\n  } /* NodeTypes.SIMPLE_EXPRESSION */);\n  push(multilines ? \"{\" : \"{ \");\n  multilines && indent();\n  for (var i = 0; i < properties.length; i++) {\n    var _properties$i2 = properties[i],\n      key = _properties$i2.key,\n      value = _properties$i2.value;\n    // key\n    genExpressionAsPropertyKey(key, context);\n    push(\": \");\n    // value\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      // will only reach this if it's multilines\n      push(\",\");\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? \"}\" : \" }\");\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  var push = context.push,\n    indent = context.indent,\n    deindent = context.deindent;\n  var params = node.params,\n    returns = node.returns,\n    body = node.body,\n    newline = node.newline,\n    isSlot = node.isSlot;\n  if (isSlot) {\n    // wrap slot functions with owner context\n    push(\"_\".concat(helperNameMap[WITH_CTX], \"(\"));\n  }\n  push(\"(\", node);\n  if (isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(\") => \");\n  if (newline || body) {\n    push(\"{\");\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(\"return \");\n    }\n    if (isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(\"}\");\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(\", undefined, true\");\n    }\n    push(\")\");\n  }\n}\nfunction genConditionalExpression(node, context) {\n  var test = node.test,\n    consequent = node.consequent,\n    alternate = node.alternate,\n    needNewline = node.newline;\n  var push = context.push,\n    indent = context.indent,\n    deindent = context.deindent,\n    newline = context.newline;\n  if (test.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    var needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(\"(\");\n    genExpression(test, context);\n    needsParens && push(\")\");\n  } else {\n    push(\"(\");\n    genNode(test, context);\n    push(\")\");\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(\" \");\n  push(\"? \");\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(\" \");\n  push(\": \");\n  var isNested = alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(true /* without newline */);\n}\n\nfunction genCacheExpression(node, context) {\n  var push = context.push,\n    helper = context.helper,\n    indent = context.indent,\n    deindent = context.deindent,\n    newline = context.newline;\n  push(\"_cache[\".concat(node.index, \"] || (\"));\n  if (node.isVNode) {\n    indent();\n    push(\"\".concat(helper(SET_BLOCK_TRACKING), \"(-1),\"));\n    newline();\n  }\n  push(\"_cache[\".concat(node.index, \"] = \"));\n  genNode(node.value, context);\n  if (node.isVNode) {\n    push(\",\");\n    newline();\n    push(\"\".concat(helper(SET_BLOCK_TRACKING), \"(1),\"));\n    newline();\n    push(\"_cache[\".concat(node.index, \"]\"));\n    deindent();\n  }\n  push(\")\");\n}\nfunction walkIdentifiers(root, onIdentifier) {\n  var includeAll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var parentStack = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var knownIds = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Object.create(null);\n  {\n    return;\n  }\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  {\n    return false;\n  }\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\n    var i = parentStack.length;\n    while (i--) {\n      var p = parentStack[i];\n      if (p.type === 'AssignmentExpression') {\n        return true;\n      } else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  var _iterator = _createForOfIteratorHelper(node.params),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var p = _step.value;\n      var _iterator2 = _createForOfIteratorHelper(extractIdentifiers(p)),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var id = _step2.value;\n          onIdent(id);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  var _iterator3 = _createForOfIteratorHelper(block.body),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var stmt = _step3.value;\n      if (stmt.type === 'VariableDeclaration') {\n        if (stmt.declare) continue;\n        var _iterator4 = _createForOfIteratorHelper(stmt.declarations),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var decl = _step4.value;\n            var _iterator5 = _createForOfIteratorHelper(extractIdentifiers(decl.id)),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var id = _step5.value;\n                onIdent(id);\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      } else if (stmt.type === 'FunctionDeclaration' || stmt.type === 'ClassDeclaration') {\n        if (stmt.declare || !stmt.id) continue;\n        onIdent(stmt.id);\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nfunction extractIdentifiers(param) {\n  var nodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  switch (param.type) {\n    case 'Identifier':\n      nodes.push(param);\n      break;\n    case 'MemberExpression':\n      var object = param;\n      while (object.type === 'MemberExpression') {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case 'ObjectPattern':\n      var _iterator6 = _createForOfIteratorHelper(param.properties),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var prop = _step6.value;\n          if (prop.type === 'RestElement') {\n            extractIdentifiers(prop.argument, nodes);\n          } else {\n            extractIdentifiers(prop.value, nodes);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      break;\n    case 'ArrayPattern':\n      param.elements.forEach(function (element) {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n    case 'RestElement':\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case 'AssignmentPattern':\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nvar isFunctionType = function isFunctionType(node) {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nvar isStaticProperty = function isStaticProperty(node) {\n  return node && (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') && !node.computed;\n};\nvar isStaticPropertyKey = function isStaticPropertyKey(node, parent) {\n  return isStaticProperty(parent) && parent.key === node;\n};\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments,typeof,void').split(',').join('\\\\b|\\\\b') + '\\\\b');\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n/**\n * Validate a non-prefixed expression.\n * This is only called when using the in-browser runtime compiler since it\n * doesn't prefix expressions.\n */\nfunction validateBrowserExpression(node, context) {\n  var asParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var asRawStatements = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var exp = node.content;\n  // empty expressions are validated per-directive since some directives\n  // do allow empty expressions.\n  if (!exp.trim()) {\n    return;\n  }\n  try {\n    new Function(asRawStatements ? \" \".concat(exp, \" \") : \"return \".concat(asParams ? \"(\".concat(exp, \") => {}\") : \"(\".concat(exp, \")\")));\n  } catch (e) {\n    var message = e.message;\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      message = \"avoid using JavaScript keyword as property name: \\\"\".concat(keywordMatch[0], \"\\\"\");\n    }\n    context.onError(createCompilerError(45 /* ErrorCodes.X_INVALID_EXPRESSION */, node.loc, undefined, message));\n  }\n}\nvar transformExpression = function transformExpression(node, context) {\n  if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\n    node.content = processExpression(node.content, context);\n  } else if (node.type === 1 /* NodeTypes.ELEMENT */) {\n    // handle directives on element\n    for (var i = 0; i < node.props.length; i++) {\n      var dir = node.props[i];\n      // do not process for v-on & v-for since they are special handled\n      if (dir.type === 7 /* NodeTypes.DIRECTIVE */ && dir.name !== 'for') {\n        var exp = dir.exp;\n        var arg = dir.arg;\n        // do not process exp if this is v-on:arg - we need special handling\n        // for wrapping inline statements.\n        if (exp && exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !(dir.name === 'on' && arg)) {\n          dir.exp = processExpression(exp, context,\n          // slot args must be processed as function params\n          dir.name === 'slot');\n        }\n        if (arg && arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\n// Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !true check so that it can be\n// tree-shaken from the browser build.\nfunction processExpression(node, context) {\n  var asParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var asRawStatements = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var localVars = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Object.create(context.identifiers);\n  {\n    if (process.env.NODE_ENV !== 'production') {\n      // simple in-browser validation (same logic in 2.x)\n      validateBrowserExpression(node, context, asParams, asRawStatements);\n    }\n    return node;\n  }\n}\nfunction stringifyExpression(exp) {\n  if (isString(exp)) {\n    return exp;\n  } else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join('');\n  }\n}\nvar transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, function (node, dir, context) {\n  return processIf(node, dir, context, function (ifNode, branch, isRoot) {\n    // #1587: We need to dynamically increment the key based on the current\n    // node's sibling nodes, since chained v-if/else branches are\n    // rendered at the same depth\n    var siblings = context.parent.children;\n    var i = siblings.indexOf(ifNode);\n    var key = 0;\n    while (i-- >= 0) {\n      var sibling = siblings[i];\n      if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\n        key += sibling.branches.length;\n      }\n    }\n    // Exit callback. Complete the codegenNode when all children have been\n    // transformed.\n    return function () {\n      if (isRoot) {\n        ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\n      } else {\n        // attach this branch's codegen node to the v-if root.\n        var parentCondition = getParentCondition(ifNode.codegenNode);\n        parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\n      }\n    };\n  });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== 'else' && (!dir.exp || !dir.exp.content.trim())) {\n    var loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(createCompilerError(28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */, dir.loc));\n    dir.exp = createSimpleExpression(\"true\", false, loc);\n  }\n  if (process.env.NODE_ENV !== 'production' && true && dir.exp) {\n    validateBrowserExpression(dir.exp, context);\n  }\n  if (dir.name === 'if') {\n    var branch = createIfBranch(node, dir);\n    var ifNode = {\n      type: 9 /* NodeTypes.IF */,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    // locate the adjacent v-if\n    var siblings = context.parent.children;\n    var comments = [];\n    var i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      var sibling = siblings[i];\n      if (sibling && sibling.type === 3 /* NodeTypes.COMMENT */) {\n        context.removeNode(sibling);\n        process.env.NODE_ENV !== 'production' && comments.unshift(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 /* NodeTypes.TEXT */ && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\n        (function () {\n          // Check if v-else was followed by v-else-if\n          if (dir.name === 'else-if' && sibling.branches[sibling.branches.length - 1].condition === undefined) {\n            context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n          }\n          // move the node to the if node's branches\n          context.removeNode();\n          var branch = createIfBranch(node, dir);\n          if (process.env.NODE_ENV !== 'production' && comments.length &&\n          // #3619 ignore comments if the v-if is direct child of <transition>\n          !(context.parent && context.parent.type === 1 /* NodeTypes.ELEMENT */ && isBuiltInType(context.parent.tag, 'transition'))) {\n            branch.children = [].concat(comments, _toConsumableArray(branch.children));\n          }\n          // check if user is forcing same key on different branches\n          if (process.env.NODE_ENV !== 'production' || !true) {\n            var key = branch.userKey;\n            if (key) {\n              sibling.branches.forEach(function (_ref5) {\n                var userKey = _ref5.userKey;\n                if (isSameKey(userKey, key)) {\n                  context.onError(createCompilerError(29 /* ErrorCodes.X_V_IF_SAME_KEY */, branch.userKey.loc));\n                }\n              });\n            }\n          }\n          sibling.branches.push(branch);\n          var onExit = processCodegen && processCodegen(sibling, branch, false);\n          // since the branch was removed, it will not be traversed.\n          // make sure to traverse here.\n          traverseNode(branch, context);\n          // call on exit\n          if (onExit) onExit();\n          // make sure to reset currentNode after traversal to indicate this\n          // node has been removed.\n          context.currentNode = null;\n        })();\n      } else {\n        context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  var isTemplateIf = node.tagType === 3 /* ElementTypes.TEMPLATE */;\n  return {\n    type: 10 /* NodeTypes.IF_BRANCH */,\n    loc: node.loc,\n    condition: dir.name === 'else' ? undefined : dir.exp,\n    children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\n    userKey: findProp(node, \"key\"),\n    isTemplateIf: isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context),\n    // make sure to pass in asBlock: true so that the comment node call\n    // closes the current block.\n    createCallExpression(context.helper(CREATE_COMMENT), [process.env.NODE_ENV !== 'production' ? '\"v-if\"' : '\"\"', 'true']));\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  var helper = context.helper;\n  var keyProperty = createObjectProperty(\"key\", createSimpleExpression(\"\".concat(keyIndex), false, locStub, 2 /* ConstantTypes.CAN_HOIST */));\n  var children = branch.children;\n  var firstChild = children[0];\n  var needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* NodeTypes.ELEMENT */;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11 /* NodeTypes.FOR */) {\n      // optimize away nested fragments when child is a ForNode\n      var vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      var patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\n      var patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\n      // check if the fragment actually contains a single valid child with\n      // the rest being comments\n      if (process.env.NODE_ENV !== 'production' && !branch.isTemplateIf && children.filter(function (c) {\n        return c.type !== 3;\n      } /* NodeTypes.COMMENT */).length === 1) {\n        patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\n        patchFlagText += \", \".concat(PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]);\n      }\n\n      return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (process.env.NODE_ENV !== 'production' ? \" /* \".concat(patchFlagText, \" */\") : \"\"), undefined, undefined, true, false, false /* isComponent */, branch.loc);\n    }\n  } else {\n    var ret = firstChild.codegenNode;\n    var _vnodeCall = getMemoedVNodeCall(ret);\n    // Change createVNode to createBlock.\n    if (_vnodeCall.type === 13 /* NodeTypes.VNODE_CALL */) {\n      makeBlock(_vnodeCall, context);\n    }\n    // inject branch key\n    injectProp(_vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6 /* NodeTypes.ATTRIBUTE */) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    // directive\n    var exp = a.exp;\n    var branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n      if (node.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */) {\n      node = node.value;\n    }\n  }\n}\nvar transformFor = createStructuralDirectiveTransform('for', function (node, dir, context) {\n  var helper = context.helper,\n    removeHelper = context.removeHelper;\n  return processFor(node, dir, context, function (forNode) {\n    // create the loop render function expression now, and add the\n    // iterator on exit after all children have been traversed\n    var renderExp = createCallExpression(helper(RENDER_LIST), [forNode.source]);\n    var isTemplate = isTemplateNode(node);\n    var memo = findDir(node, 'memo');\n    var keyProp = findProp(node, \"key\");\n    var keyExp = keyProp && (keyProp.type === 6 /* NodeTypes.ATTRIBUTE */ ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n    var keyProperty = keyProp ? createObjectProperty(\"key\", keyExp) : null;\n    var isStableFragment = forNode.source.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && forNode.source.constType > 0 /* ConstantTypes.NOT_CONSTANT */;\n    var fragmentFlag = isStableFragment ? 64 /* PatchFlags.STABLE_FRAGMENT */ : keyProp ? 128 /* PatchFlags.KEYED_FRAGMENT */ : 256 /* PatchFlags.UNKEYED_FRAGMENT */;\n    forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag + (process.env.NODE_ENV !== 'production' ? \" /* \".concat(PatchFlagNames[fragmentFlag], \" */\") : \"\"), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\n    return function () {\n      // finish the codegen now that all children have been traversed\n      var childBlock;\n      var children = forNode.children;\n      // check <template v-for> key placement\n      if ((process.env.NODE_ENV !== 'production' || !true) && isTemplate) {\n        node.children.some(function (c) {\n          if (c.type === 1 /* NodeTypes.ELEMENT */) {\n            var key = findProp(c, 'key');\n            if (key) {\n              context.onError(createCompilerError(33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\n              return true;\n            }\n          }\n        });\n      }\n      var needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* NodeTypes.ELEMENT */;\n      var slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] // api-extractor somehow fails to infer this\n      : null;\n      if (slotOutlet) {\n        // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n        childBlock = slotOutlet.codegenNode;\n        if (isTemplate && keyProperty) {\n          // <template v-for=\"...\" :key=\"...\"><slot/></template>\n          // we need to inject the key to the renderSlot() call.\n          // the props for renderSlot is passed as the 3rd argument.\n          injectProp(childBlock, keyProperty, context);\n        }\n      } else if (needFragmentWrapper) {\n        // <template v-for=\"...\"> with text or multi-elements\n        // should generate a fragment block for each loop\n        childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* PatchFlags.STABLE_FRAGMENT */ + (process.env.NODE_ENV !== 'production' ? \" /* \".concat(PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */], \" */\") : \"\"), undefined, undefined, true, undefined, false /* isComponent */);\n      } else {\n        // Normal element v-for. Directly use the child's codegenNode\n        // but mark it as a block.\n        childBlock = children[0].codegenNode;\n        if (isTemplate && keyProperty) {\n          injectProp(childBlock, keyProperty, context);\n        }\n        if (childBlock.isBlock !== !isStableFragment) {\n          if (childBlock.isBlock) {\n            // switch from block to vnode\n            removeHelper(OPEN_BLOCK);\n            removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            // switch from vnode to block\n            removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        childBlock.isBlock = !isStableFragment;\n        if (childBlock.isBlock) {\n          helper(OPEN_BLOCK);\n          helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n        } else {\n          helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n        }\n      }\n      if (memo) {\n        var loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [createSimpleExpression(\"_cached\")]));\n        loop.body = createBlockStatement([createCompoundExpression([\"const _memo = (\", memo.exp, \")\"]), createCompoundExpression([\"if (_cached\"].concat(_toConsumableArray(keyExp ? [\" && _cached.key === \", keyExp] : []), [\" && \".concat(context.helperString(IS_MEMO_SAME), \"(_cached, _memo)) return _cached\")])), createCompoundExpression([\"const _item = \", childBlock]), createSimpleExpression(\"_item.memo = _memo\"), createSimpleExpression(\"return _item\")]);\n        renderExp.arguments.push(loop, createSimpleExpression(\"_cache\"), createSimpleExpression(String(context.cached++)));\n      } else {\n        renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\n      }\n    };\n  });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(createCompilerError(31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */, dir.loc));\n    return;\n  }\n  var parseResult = parseForExpression(\n  // can only be simple expression because vFor transform is applied\n  // before expression transform.\n  dir.exp, context);\n  if (!parseResult) {\n    context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\n    return;\n  }\n  var addIdentifiers = context.addIdentifiers,\n    removeIdentifiers = context.removeIdentifiers,\n    scopes = context.scopes;\n  var source = parseResult.source,\n    value = parseResult.value,\n    key = parseResult.key,\n    index = parseResult.index;\n  var forNode = {\n    type: 11 /* NodeTypes.FOR */,\n    loc: dir.loc,\n    source: source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult: parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  // bookkeeping\n  scopes.vFor++;\n  var onExit = processCodegen && processCodegen(forNode);\n  return function () {\n    scopes.vFor--;\n    if (onExit) onExit();\n  };\n}\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input, context) {\n  var loc = input.loc;\n  var exp = input.content;\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  var _inMatch = _slicedToArray(inMatch, 3),\n    LHS = _inMatch[1],\n    RHS = _inMatch[2];\n  var result = {\n    source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: undefined,\n    key: undefined,\n    index: undefined\n  };\n  if (process.env.NODE_ENV !== 'production' && true) {\n    validateBrowserExpression(result.source, context);\n  }\n  var valueContent = LHS.trim().replace(stripParensRE, '').trim();\n  var trimmedOffset = LHS.indexOf(valueContent);\n  var iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, '').trim();\n    var keyContent = iteratorMatch[1].trim();\n    var keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(loc, keyContent, keyOffset);\n      if (process.env.NODE_ENV !== 'production' && true) {\n        validateBrowserExpression(result.key, context, true);\n      }\n    }\n    if (iteratorMatch[2]) {\n      var indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length));\n        if (process.env.NODE_ENV !== 'production' && true) {\n          validateBrowserExpression(result.index, context, true);\n        }\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset);\n    if (process.env.NODE_ENV !== 'production' && true) {\n      validateBrowserExpression(result.value, context, true);\n    }\n  }\n  return result;\n}\nfunction createAliasExpression(range, content, offset) {\n  return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\n}\nfunction createForLoopParams(_ref6) {\n  var value = _ref6.value,\n    key = _ref6.key,\n    index = _ref6.index;\n  var memoArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return createParamsList([value, key, index].concat(_toConsumableArray(memoArgs)));\n}\nfunction createParamsList(args) {\n  var i = args.length;\n  while (i--) {\n    if (args[i]) break;\n  }\n  return args.slice(0, i + 1).map(function (arg, i) {\n    return arg || createSimpleExpression(\"_\".repeat(i + 1), false);\n  });\n}\nvar defaultFallback = createSimpleExpression(\"undefined\", false);\n// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nvar trackSlotScopes = function trackSlotScopes(node, context) {\n  if (node.type === 1 /* NodeTypes.ELEMENT */ && (node.tagType === 1 /* ElementTypes.COMPONENT */ || node.tagType === 3 /* ElementTypes.TEMPLATE */)) {\n    // We are only checking non-empty v-slot here\n    // since we only care about slots that introduce scope variables.\n    var vSlot = findDir(node, 'slot');\n    if (vSlot) {\n      vSlot.exp;\n      context.scopes.vSlot++;\n      return function () {\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\nvar trackVForSlotScopes = function trackVForSlotScopes(node, context) {\n  var vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, 'for'))) {\n    var result = vFor.parseResult = parseForExpression(vFor.exp, context);\n    if (result) {\n      var value = result.value,\n        key = result.key,\n        index = result.index;\n      var addIdentifiers = context.addIdentifiers,\n        removeIdentifiers = context.removeIdentifiers;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return function () {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nvar buildClientSlotFn = function buildClientSlotFn(props, children, loc) {\n  return createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\n};\n// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nfunction buildSlots(node, context) {\n  var buildSlotFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : buildClientSlotFn;\n  context.helper(WITH_CTX);\n  var children = node.children,\n    loc = node.loc;\n  var slotsProperties = [];\n  var dynamicSlots = [];\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\n  // since it likely uses a scope variable.\n  var hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  // 1. Check for slot with slotProps on component itself.\n  //    <Comp v-slot=\"{ prop }\"/>\n  var onComponentSlot = findDir(node, 'slot', true);\n  if (onComponentSlot) {\n    var arg = onComponentSlot.arg,\n      exp = onComponentSlot.exp;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\n  }\n  // 2. Iterate through children and check for template slots\n  //    <template v-slot:foo=\"{ prop }\">\n  var hasTemplateSlots = false;\n  var hasNamedDefaultSlot = false;\n  var implicitDefaultChildren = [];\n  var seenSlotNames = new Set();\n  var conditionalBranchIndex = 0;\n  for (var i = 0; i < children.length; i++) {\n    var slotElement = children[i];\n    var slotDir = void 0;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, 'slot', true))) {\n      // not a <template v-slot>, skip.\n      if (slotElement.type !== 3 /* NodeTypes.COMMENT */) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      // already has on-component slot - this is incorrect usage.\n      context.onError(createCompilerError(37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\n      break;\n    }\n    hasTemplateSlots = true;\n    var slotChildren = slotElement.children,\n      slotLoc = slotElement.loc;\n    var _slotDir = slotDir,\n      _slotDir$arg = _slotDir.arg,\n      slotName = _slotDir$arg === void 0 ? createSimpleExpression(\"default\", true) : _slotDir$arg,\n      slotProps = _slotDir.exp,\n      dirLoc = _slotDir.loc;\n    // check if name is dynamic.\n    var staticSlotName = void 0;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : \"default\";\n    } else {\n      hasDynamicSlots = true;\n    }\n    var slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\n    // check if this slot is conditional (v-if/v-for)\n    var vIf = void 0;\n    var vElse = void 0;\n    var vFor = void 0;\n    if (vIf = findDir(slotElement, 'if')) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));\n    } else if (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */)) {\n      // find adjacent v-if\n      var j = i;\n      var prev = void 0;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3 /* NodeTypes.COMMENT */) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n        // remove node\n        children.splice(i, 1);\n        i--;\n        // attach this slot to previous conditional\n        var conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\n      }\n    } else if (vFor = findDir(slotElement, 'for')) {\n      hasDynamicSlots = true;\n      var parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);\n      if (parseResult) {\n        // Render the dynamic slots as an array and add it to the createSlot()\n        // args. The runtime knows how to handle it appropriately.\n        dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [parseResult.source, createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)]));\n      } else {\n        context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\n      }\n    } else {\n      // check duplicate static names\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(createCompilerError(38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === 'default') {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    var buildDefaultSlotProperty = function buildDefaultSlotProperty(props, children) {\n      var fn = buildSlotFn(props, children, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(\"default\", fn);\n    };\n    if (!hasTemplateSlots) {\n      // implicit default slot (on component)\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children));\n    } else if (implicitDefaultChildren.length &&\n    // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some(function (node) {\n      return isNonWhitespaceContent(node);\n    })) {\n      // implicit default slot (mixed with named slots)\n      if (hasNamedDefaultSlot) {\n        context.onError(createCompilerError(39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\n      } else {\n        slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\n      }\n    }\n  }\n  var slotFlag = hasDynamicSlots ? 2 /* SlotFlags.DYNAMIC */ : hasForwardedSlots(node.children) ? 3 /* SlotFlags.FORWARDED */ : 1 /* SlotFlags.STABLE */;\n  var slots = createObjectExpression(slotsProperties.concat(createObjectProperty(\"_\",\n  // 2 = compiled but dynamic = can skip normalization, but must run diff\n  // 1 = compiled and static = can skip normalization AND diff as optimized\n  createSimpleExpression(slotFlag + (process.env.NODE_ENV !== 'production' ? \" /* \".concat(slotFlagsText[slotFlag], \" */\") : \"\"), false))), loc);\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [slots, createArrayExpression(dynamicSlots)]);\n  }\n  return {\n    slots: slots,\n    hasDynamicSlots: hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  var props = [createObjectProperty(\"name\", name), createObjectProperty(\"fn\", fn)];\n  if (index != null) {\n    props.push(createObjectProperty(\"key\", createSimpleExpression(String(index), true)));\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    switch (child.type) {\n      case 1 /* NodeTypes.ELEMENT */:\n        if (child.tagType === 2 /* ElementTypes.SLOT */ || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9 /* NodeTypes.IF */:\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n      case 10 /* NodeTypes.IF_BRANCH */:\n      case 11 /* NodeTypes.FOR */:\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 /* NodeTypes.TEXT */ && node.type !== 12 /* NodeTypes.TEXT_CALL */) return true;\n  return node.type === 2 /* NodeTypes.TEXT */ ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nvar directiveImportMap = new WeakMap();\n// generate a JavaScript AST for this element's codegen\nvar transformElement = function transformElement(node, context) {\n  // perform the work on exit, after all child expressions have been\n  // processed and merged.\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 /* NodeTypes.ELEMENT */ && (node.tagType === 0 /* ElementTypes.ELEMENT */ || node.tagType === 1 /* ElementTypes.COMPONENT */))) {\n      return;\n    }\n    var _node3 = node,\n      tag = _node3.tag,\n      props = _node3.props;\n    var isComponent = node.tagType === 1 /* ElementTypes.COMPONENT */;\n    // The goal of the transform is to create a codegenNode implementing the\n    // VNodeCall interface.\n    var vnodeTag = isComponent ? resolveComponentType(node, context) : \"\\\"\".concat(tag, \"\\\"\");\n    var isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    var vnodeProps;\n    var vnodeChildren;\n    var vnodePatchFlag;\n    var patchFlag = 0;\n    var vnodeDynamicProps;\n    var dynamicPropNames;\n    var vnodeDirectives;\n    var shouldUseBlock =\n    // dynamic component may resolve to plain elements\n    isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && (\n    // <svg> and <foreignObject> must be forced into blocks so that block\n    // updates inside get proper isSVG flag at runtime. (#639, #643)\n    // This is technically web-specific, but splitting the logic out of core\n    // leads to too much unnecessary complexity.\n    tag === 'svg' || tag === 'foreignObject');\n    // props\n    if (props.length > 0) {\n      var propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      var directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(directives.map(function (dir) {\n        return buildDirectiveArgs(dir, context);\n      })) : undefined;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    // children\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        // Although a built-in component, we compile KeepAlive with raw children\n        // instead of slot functions so that it can be used inside Transition\n        // or other Transition-wrapping HOCs.\n        // To ensure correct updates with block optimizations, we need to:\n        // 1. Force keep-alive into a block. This avoids its children being\n        //    collected by a parent block.\n        shouldUseBlock = true;\n        // 2. Force keep-alive to always be updated, since it uses raw children.\n        patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n        if (process.env.NODE_ENV !== 'production' && node.children.length > 1) {\n          context.onError(createCompilerError(46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */, {\n            start: node.children[0].loc.start,\n            end: node.children[node.children.length - 1].loc.end,\n            source: ''\n          }));\n        }\n      }\n      var shouldBuildAsSlots = isComponent &&\n      // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT &&\n      // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        var _buildSlots = buildSlots(node, context),\n          slots = _buildSlots.slots,\n          hasDynamicSlots = _buildSlots.hasDynamicSlots;\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        var child = node.children[0];\n        var type = child.type;\n        // check for dynamic text children\n        var hasDynamicTextChild = type === 5 /* NodeTypes.INTERPOLATION */ || type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\n          patchFlag |= 1 /* PatchFlags.TEXT */;\n        }\n        // pass directly if the only child is a text node\n        // (plain / interpolation / expression)\n        if (hasDynamicTextChild || type === 2 /* NodeTypes.TEXT */) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    // patchFlag & dynamicPropNames\n    if (patchFlag !== 0) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (patchFlag < 0) {\n          // special flags (negative and mutually exclusive)\n          vnodePatchFlag = patchFlag + \" /* \".concat(PatchFlagNames[patchFlag], \" */\");\n        } else {\n          // bitwise flags\n          var flagNames = Object.keys(PatchFlagNames).map(Number).filter(function (n) {\n            return n > 0 && patchFlag & n;\n          }).map(function (n) {\n            return PatchFlagNames[n];\n          }).join(\", \");\n          vnodePatchFlag = patchFlag + \" /* \".concat(flagNames, \" */\");\n        }\n      } else {\n        vnodePatchFlag = String(patchFlag);\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n    node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\n  };\n};\nfunction resolveComponentType(node, context) {\n  var ssr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var tag = node.tag;\n  // 1. dynamic component\n  var isExplicitDynamic = isComponentTag(tag);\n  var isProp = findProp(node, 'is');\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context)) {\n      var exp = isProp.type === 6 /* NodeTypes.ATTRIBUTE */ ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [exp]);\n      }\n    } else if (isProp.type === 6 /* NodeTypes.ATTRIBUTE */ && isProp.value.content.startsWith('vue:')) {\n      // <button is=\"vue:xxx\">\n      // if not <component>, only is value that starts with \"vue:\" will be\n      // treated as component by the parse phase and reach here, unless it's\n      // compat mode where all is values are considered components\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  // 1.5 v-is (TODO: Deprecate)\n  var isDir = !isExplicitDynamic && findDir(node, 'is');\n  if (isDir && isDir.exp) {\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [isDir.exp]);\n  }\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n  var builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    // built-ins are simply fallthroughs / have special handling during ssr\n    // so we don't need to import their runtime equivalents\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  }\n  // 5. user component (resolve)\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, \"component\");\n}\nfunction buildProps(node, context) {\n  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : node.props;\n  var isComponent = arguments.length > 3 ? arguments[3] : undefined;\n  var isDynamicComponent = arguments.length > 4 ? arguments[4] : undefined;\n  var ssr = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var tag = node.tag,\n    elementLoc = node.loc,\n    children = node.children;\n  var properties = [];\n  var mergeArgs = [];\n  var runtimeDirectives = [];\n  var hasChildren = children.length > 0;\n  var shouldUseBlock = false;\n  // patchFlag analysis\n  var patchFlag = 0;\n  var hasRef = false;\n  var hasClassBinding = false;\n  var hasStyleBinding = false;\n  var hasHydrationEventBinding = false;\n  var hasDynamicKeys = false;\n  var hasVnodeHook = false;\n  var dynamicPropNames = [];\n  var pushMergeArg = function pushMergeArg(arg) {\n    if (properties.length) {\n      mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n      properties = [];\n    }\n    if (arg) mergeArgs.push(arg);\n  };\n  var analyzePatchFlag = function analyzePatchFlag(_ref7) {\n    var key = _ref7.key,\n      value = _ref7.value;\n    if (isStaticExp(key)) {\n      var name = key.content;\n      var isEventHandler = isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) &&\n      // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== 'onclick' &&\n      // omit v-model handlers\n      name !== 'onUpdate:modelValue' &&\n      // omit onVnodeXXX hooks\n      !isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (value.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */ || (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ || value.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) && getConstantType(value, context) > 0) {\n        // skip if the prop is a cached handler or has constant value\n        return;\n      }\n      if (name === 'ref') {\n        hasRef = true;\n      } else if (name === 'class') {\n        hasClassBinding = true;\n      } else if (name === 'style') {\n        hasStyleBinding = true;\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      // treat the dynamic class and style binding of the component as dynamic props\n      if (isComponent && (name === 'class' || name === 'style') && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (var i = 0; i < props.length; i++) {\n    // static attribute\n    var prop = props[i];\n    if (prop.type === 6 /* NodeTypes.ATTRIBUTE */) {\n      var loc = prop.loc,\n        name = prop.name,\n        value = prop.value;\n      var isStatic = true;\n      if (name === 'ref') {\n        hasRef = true;\n        if (context.scopes.vFor > 0) {\n          properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n        }\n      }\n      // skip is on <component>, or is=\"vue:xxx\"\n      if (name === 'is' && (isComponentTag(tag) || value && value.content.startsWith('vue:') || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))) {\n        continue;\n      }\n      properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\n    } else {\n      // directives\n      var _name = prop.name,\n        arg = prop.arg,\n        exp = prop.exp,\n        _loc2 = prop.loc;\n      var isVBind = _name === 'bind';\n      var isVOn = _name === 'on';\n      // skip v-slot - it is handled by its dedicated transform.\n      if (_name === 'slot') {\n        if (!isComponent) {\n          context.onError(createCompilerError(40 /* ErrorCodes.X_V_SLOT_MISPLACED */, _loc2));\n        }\n        continue;\n      }\n      // skip v-once/v-memo - they are handled by dedicated transforms.\n      if (_name === 'once' || _name === 'memo') {\n        continue;\n      }\n      // skip v-is and :is on <component>\n      if (_name === 'is' || isVBind && isStaticArgOf(arg, 'is') && (isComponentTag(tag) || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))) {\n        continue;\n      }\n      // skip v-on in SSR compilation\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n      // #938: elements with dynamic keys should be forced into blocks\n      isVBind && isStaticArgOf(arg, 'key') ||\n      // inline before-update hooks need to force block so that it is invoked\n      // before children\n      isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update')) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\n        properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n      }\n      // special case for v-bind and v-on with no argument\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            // have to merge early for compat build check\n            pushMergeArg();\n            {\n              // 2.x v-bind object order compat\n              if (process.env.NODE_ENV !== 'production') {\n                var hasOverridableKeys = mergeArgs.some(function (arg) {\n                  if (arg.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n                    return arg.properties.some(function (_ref8) {\n                      var key = _ref8.key;\n                      if (key.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || !key.isStatic) {\n                        return true;\n                      }\n                      return key.content !== 'class' && key.content !== 'style' && !isOn(key.content);\n                    });\n                  } else {\n                    // dynamic expression\n                    return true;\n                  }\n                });\n                if (hasOverridableKeys) {\n                  checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context, _loc2);\n                }\n              }\n              if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context)) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            // v-on=\"obj\" -> toHandlers(obj)\n            pushMergeArg({\n              type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\n              loc: _loc2,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, \"true\"]\n            });\n          }\n        } else {\n          context.onError(createCompilerError(isVBind ? 34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */ : 35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, _loc2));\n        }\n        continue;\n      }\n      var directiveTransform = context.directiveTransforms[_name];\n      if (directiveTransform) {\n        // has built-in directive transform.\n        var _directiveTransform = directiveTransform(prop, node, context),\n          _props = _directiveTransform.props,\n          needRuntime = _directiveTransform.needRuntime;\n        !ssr && _props.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(_props, elementLoc));\n        } else {\n          var _properties;\n          (_properties = properties).push.apply(_properties, _toConsumableArray(_props));\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!isBuiltInDirective(_name)) {\n        // no built-in transform, this is a user custom directive.\n        runtimeDirectives.push(prop);\n        // custom dirs may use beforeUpdate so they need to force blocks\n        // to ensure before-update gets called before children update\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  var propsExpression = undefined;\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n  if (mergeArgs.length) {\n    // close up any not-yet-merged props\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\n    } else {\n      // single v-bind with nothing else - no need for a mergeProps call\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\n  }\n  // patchFlag analysis\n  if (hasDynamicKeys) {\n    patchFlag |= 16 /* PatchFlags.FULL_PROPS */;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2 /* PatchFlags.CLASS */;\n    }\n\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4 /* PatchFlags.STYLE */;\n    }\n\n    if (dynamicPropNames.length) {\n      patchFlag |= 8 /* PatchFlags.PROPS */;\n    }\n\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32 /* PatchFlags.HYDRATE_EVENTS */;\n    }\n  }\n\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512 /* PatchFlags.NEED_PATCH */;\n  }\n  // pre-normalize props, SSR is skipped for now\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\n        // means that there is no v-bind,\n        // but still need to deal with dynamic key binding\n        var classKeyIndex = -1;\n        var styleKeyIndex = -1;\n        var hasDynamicKey = false;\n        for (var _i8 = 0; _i8 < propsExpression.properties.length; _i8++) {\n          var key = propsExpression.properties[_i8].key;\n          if (isStaticExp(key)) {\n            if (key.content === 'class') {\n              classKeyIndex = _i8;\n            } else if (key.content === 'style') {\n              styleKeyIndex = _i8;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        var classProp = propsExpression.properties[classKeyIndex];\n        var styleProp = propsExpression.properties[styleKeyIndex];\n        // no dynamic key\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\n          }\n          if (styleProp && (\n          // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          hasStyleBinding || styleProp.value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && styleProp.value.content.trim()[0] === \"[\" ||\n          // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */)) {\n            styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\n          }\n        } else {\n          // dynamic key binding, wrap with `normalizeProps`\n          propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\n        }\n        break;\n      case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\n        // mergeProps call, do nothing\n        break;\n      default:\n        // single v-bind\n        propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [propsExpression])]);\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag: patchFlag,\n    dynamicPropNames: dynamicPropNames,\n    shouldUseBlock: shouldUseBlock\n  };\n}\n// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties) {\n  var knownProps = new Map();\n  var deduped = [];\n  for (var i = 0; i < properties.length; i++) {\n    var prop = properties[i];\n    // dynamic keys are always allowed\n    if (prop.key.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    var name = prop.key.content;\n    var existing = knownProps.get(name);\n    if (existing) {\n      if (name === 'style' || name === 'class' || isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n      // unexpected duplicate, should have emitted error during parse\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  var dirArgs = [];\n  var runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    // built-in directive with runtime\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    {\n      // inject statement for resolving directive\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, \"directive\"));\n    }\n  }\n  var loc = dir.loc;\n  if (dir.exp) dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(\"void 0\");\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(\"void 0\");\n      }\n      dirArgs.push(\"void 0\");\n    }\n    var trueExpression = createSimpleExpression(\"true\", false, loc);\n    dirArgs.push(createObjectExpression(dir.modifiers.map(function (modifier) {\n      return createObjectProperty(modifier, trueExpression);\n    }), loc));\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  var propsNamesString = \"[\";\n  for (var i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += ', ';\n  }\n  return propsNamesString + \"]\";\n}\nfunction isComponentTag(tag) {\n  return tag === 'component' || tag === 'Component';\n}\nprocess.env.NODE_ENV !== 'production' ? Object.freeze({}) : {};\nprocess.env.NODE_ENV !== 'production' ? Object.freeze([]) : [];\nvar cacheStringFunction = function cacheStringFunction(fn) {\n  var cache = Object.create(null);\n  return function (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nvar camelizeRE = /-(\\w)/g;\n/**\n * @private\n */\nvar camelize = cacheStringFunction(function (str) {\n  return str.replace(camelizeRE, function (_, c) {\n    return c ? c.toUpperCase() : '';\n  });\n});\nvar transformSlotOutlet = function transformSlotOutlet(node, context) {\n  if (isSlotOutlet(node)) {\n    var children = node.children,\n      loc = node.loc;\n    var _processSlotOutlet = processSlotOutlet(node, context),\n      slotName = _processSlotOutlet.slotName,\n      slotProps = _processSlotOutlet.slotProps;\n    var slotArgs = [context.prefixIdentifiers ? \"_ctx.$slots\" : \"$slots\", slotName, '{}', 'undefined', 'true'];\n    var expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen); // remove unused arguments\n    node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\n  }\n};\nfunction processSlotOutlet(node, context) {\n  var slotName = \"\\\"default\\\"\";\n  var slotProps = undefined;\n  var nonNameProps = [];\n  for (var i = 0; i < node.props.length; i++) {\n    var p = node.props[i];\n    if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n      if (p.value) {\n        if (p.name === 'name') {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n        if (p.exp) slotName = p.exp;\n      } else {\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    var _buildProps = buildProps(node, context, nonNameProps, false, false),\n      props = _buildProps.props,\n      directives = _buildProps.directives;\n    slotProps = props;\n    if (directives.length) {\n      context.onError(createCompilerError(36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\n    }\n  }\n  return {\n    slotName: slotName,\n    slotProps: slotProps\n  };\n}\nvar fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nvar transformOn = function transformOn(dir, node, context, augmentor) {\n  var loc = dir.loc,\n    modifiers = dir.modifiers,\n    arg = dir.arg;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\n  }\n  var eventName;\n  if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    if (arg.isStatic) {\n      var rawName = arg.content;\n      // TODO deprecate @vnodeXXX usage\n      if (rawName.startsWith('vue:')) {\n        rawName = \"vnode-\".concat(rawName.slice(4));\n      }\n      var eventString = node.tagType !== 0 /* ElementTypes.ELEMENT */ || rawName.startsWith('vnode') || !/[A-Z]/.test(rawName) ?\n      // for non-element and vnode lifecycle event listeners, auto convert\n      // it to camelCase. See issue #2249\n      toHandlerKey(camelize$1(rawName)) : // preserve case for plain element listeners that have uppercase\n      // letters, as these may be custom elements' custom events\n      \"on:\".concat(rawName);\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      // #2388\n      eventName = createCompoundExpression([\"\".concat(context.helperString(TO_HANDLER_KEY), \"(\"), arg, \")\"]);\n    }\n  } else {\n    // already a compound expression.\n    eventName = arg;\n    eventName.children.unshift(\"\".concat(context.helperString(TO_HANDLER_KEY), \"(\"));\n    eventName.children.push(\")\");\n  }\n  // handler processing\n  var exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = undefined;\n  }\n  var shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    var isMemberExp = isMemberExpression(exp.content);\n    var isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    var hasMultipleStatements = exp.content.includes(\";\");\n    if (process.env.NODE_ENV !== 'production' && true) {\n      validateBrowserExpression(exp, context, false, hasMultipleStatements);\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      // wrap inline statement in a function expression\n      exp = createCompoundExpression([\"\".concat(isInlineStatement ? \"$event\" : \"\".concat(\"\", \"(...args)\"), \" => \").concat(hasMultipleStatements ? \"{\" : \"(\"), exp, hasMultipleStatements ? \"}\" : \")\"]);\n    }\n  }\n  var ret = {\n    props: [createObjectProperty(eventName, exp || createSimpleExpression(\"() => {}\", false, loc))]\n  };\n  // apply extended compiler augmentor\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    // cache handlers so that it's always the same handler being passed down.\n    // this avoids unnecessary re-renders when users use inline handlers on\n    // components.\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  // mark the key as handler for props normalization check\n  ret.props.forEach(function (p) {\n    return p.key.isHandlerKey = true;\n  });\n  return ret;\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nvar transformBind = function transformBind(dir, _node, context) {\n  var exp = dir.exp,\n    modifiers = dir.modifiers,\n    loc = dir.loc;\n  var arg = dir.arg;\n  if (arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    arg.children.unshift(\"(\");\n    arg.children.push(\") || \\\"\\\"\");\n  } else if (!arg.isStatic) {\n    arg.content = \"\".concat(arg.content, \" || \\\"\\\"\");\n  }\n  // .sync is replaced by v-model:arg\n  if (modifiers.includes('camel')) {\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n      if (arg.isStatic) {\n        arg.content = camelize$1(arg.content);\n      } else {\n        arg.content = \"\".concat(context.helperString(CAMELIZE), \"(\").concat(arg.content, \")\");\n      }\n    } else {\n      arg.children.unshift(\"\".concat(context.helperString(CAMELIZE), \"(\"));\n      arg.children.push(\")\");\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.includes('prop')) {\n      injectPrefix(arg, '.');\n    }\n    if (modifiers.includes('attr')) {\n      injectPrefix(arg, '^');\n    }\n  }\n  if (!exp || exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !exp.content.trim()) {\n    context.onError(createCompilerError(34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */, loc));\n    return {\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\n    };\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nvar injectPrefix = function injectPrefix(arg, prefix) {\n  if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = \"`\".concat(prefix, \"${\").concat(arg.content, \"}`\");\n    }\n  } else {\n    arg.children.unshift(\"'\".concat(prefix, \"' + (\"));\n    arg.children.push(\")\");\n  }\n};\n\n// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nvar transformText = function transformText(node, context) {\n  if (node.type === 0 /* NodeTypes.ROOT */ || node.type === 1 /* NodeTypes.ELEMENT */ || node.type === 11 /* NodeTypes.FOR */ || node.type === 10 /* NodeTypes.IF_BRANCH */) {\n    // perform the transform on node exit so that all expressions have already\n    // been processed.\n    return function () {\n      var children = node.children;\n      var currentContainer = undefined;\n      var hasText = false;\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        if (isText(child)) {\n          hasText = true;\n          for (var j = i + 1; j < children.length; j++) {\n            var next = children[j];\n            if (isText(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression([child], child.loc);\n              }\n              // merge adjacent text node into current\n              currentContainer.children.push(\" + \", next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = undefined;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText ||\n      // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 /* NodeTypes.ROOT */ || node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 0 /* ElementTypes.ELEMENT */ &&\n      // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(function (p) {\n        return p.type === 7 /* NodeTypes.DIRECTIVE */ && !context.directiveTransforms[p.name];\n      }) &&\n      // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === 'template'))) {\n        return;\n      }\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\n      // runtime normalization.\n      for (var _i9 = 0; _i9 < children.length; _i9++) {\n        var _child = children[_i9];\n        if (isText(_child) || _child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n          var callArgs = [];\n          // createTextVNode defaults to single whitespace, so if it is a\n          // single space the code could be an empty call to save bytes.\n          if (_child.type !== 2 /* NodeTypes.TEXT */ || _child.content !== ' ') {\n            callArgs.push(_child);\n          }\n          // mark dynamic text with flag so it gets patched inside a block\n          if (!context.ssr && getConstantType(_child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\n            callArgs.push(1 /* PatchFlags.TEXT */ + (process.env.NODE_ENV !== 'production' ? \" /* \".concat(PatchFlagNames[1 /* PatchFlags.TEXT */], \" */\") : \"\"));\n          }\n          children[_i9] = {\n            type: 12 /* NodeTypes.TEXT_CALL */,\n            content: _child,\n            loc: _child.loc,\n            codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\n          };\n        }\n      }\n    };\n  }\n};\nvar seen = new WeakSet();\nvar transformOnce = function transformOnce(node, context) {\n  if (node.type === 1 /* NodeTypes.ELEMENT */ && findDir(node, 'once', true)) {\n    if (seen.has(node) || context.inVOnce) {\n      return;\n    }\n    seen.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return function () {\n      context.inVOnce = false;\n      var cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\n      }\n    };\n  }\n};\n\nvar transformModel = function transformModel(dir, node, context) {\n  var exp = dir.exp,\n    arg = dir.arg;\n  if (!exp) {\n    context.onError(createCompilerError(41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */, dir.loc));\n    return createTransformProps();\n  }\n  var rawExp = exp.loc.source;\n  var expString = exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ? exp.content : rawExp;\n  // im SFC <script setup> inline mode, the exp may have been transformed into\n  // _unref(exp)\n  var bindingType = context.bindingMetadata[rawExp];\n  // check props\n  if (bindingType === \"props\" /* BindingTypes.PROPS */ || bindingType === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\n    context.onError(createCompilerError(44 /* ErrorCodes.X_V_MODEL_ON_PROPS */, exp.loc));\n    return createTransformProps();\n  }\n  var maybeRef = !true;\n  if (!expString.trim() || !isMemberExpression(expString) && !maybeRef) {\n    context.onError(createCompilerError(42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\n    return createTransformProps();\n  }\n  var propName = arg ? arg : createSimpleExpression('modelValue', true);\n  var eventName = arg ? isStaticExp(arg) ? \"onUpdate:\".concat(arg.content) : createCompoundExpression(['\"onUpdate:\" + ', arg]) : \"onUpdate:modelValue\";\n  var assignmentExp;\n  var eventArg = context.isTS ? \"($event: any)\" : \"$event\";\n  {\n    assignmentExp = createCompoundExpression([\"\".concat(eventArg, \" => ((\"), exp, \") = $event)\"]);\n  }\n  var props = [\n  // modelValue: foo\n  createObjectProperty(propName, dir.exp),\n  // \"onUpdate:modelValue\": $event => (foo = $event)\n  createObjectProperty(eventName, assignmentExp)];\n  // modelModifiers: { foo: true, \"bar-baz\": true }\n  if (dir.modifiers.length && node.tagType === 1 /* ElementTypes.COMPONENT */) {\n    var modifiers = dir.modifiers.map(function (m) {\n      return (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + \": true\";\n    }).join(\", \");\n    var modifiersKey = arg ? isStaticExp(arg) ? \"\".concat(arg.content, \"Modifiers\") : createCompoundExpression([arg, ' + \"Modifiers\"']) : \"modelModifiers\";\n    props.push(createObjectProperty(modifiersKey, createSimpleExpression(\"{ \".concat(modifiers, \" }\"), false, dir.loc, 2 /* ConstantTypes.CAN_HOIST */)));\n  }\n\n  return createTransformProps(props);\n};\nfunction createTransformProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return {\n    props: props\n  };\n}\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nvar transformFilter = function transformFilter(node, context) {\n  if (!isCompatEnabled(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context)) {\n    return;\n  }\n  if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\n    // filter rewrite is applied before expression transform so only\n    // simple expressions are possible at this stage\n    rewriteFilter(node.content, context);\n  }\n  if (node.type === 1 /* NodeTypes.ELEMENT */) {\n    node.props.forEach(function (prop) {\n      if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && prop.name !== 'for' && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    parseFilter(node, context);\n  } else {\n    for (var i = 0; i < node.children.length; i++) {\n      var child = node.children[i];\n      if (_typeof(child) !== 'object') continue;\n      if (child.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        parseFilter(child, context);\n      } else if (child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5 /* NodeTypes.INTERPOLATION */) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  var exp = node.content;\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c,\n    prev,\n    i,\n    expression,\n    filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5c) inSingle = false;\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5c) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5c) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5c) inRegex = false;\n    } else if (c === 0x7c &&\n    // pipe\n    exp.charCodeAt(i + 1) !== 0x7c && exp.charCodeAt(i - 1) !== 0x7c && !curly && !square && !paren) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;\n          break;\n        // \"\n        case 0x27:\n          inSingle = true;\n          break;\n        // '\n        case 0x60:\n          inTemplateString = true;\n          break;\n        // `\n        case 0x28:\n          paren++;\n          break;\n        // (\n        case 0x29:\n          paren--;\n          break;\n        // )\n        case 0x5b:\n          square++;\n          break;\n        // [\n        case 0x5d:\n          square--;\n          break;\n        // ]\n        case 0x7b:\n          curly++;\n          break;\n        // {\n        case 0x7d:\n          curly--;\n          break;\n        // }\n      }\n\n      if (c === 0x2f) {\n        // /\n        var j = i - 1;\n        var p = void 0;\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    process.env.NODE_ENV !== 'production' && warnDeprecation(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context, node.loc);\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    context.filters.add(filter);\n    return \"\".concat(toValidAssetId(filter, 'filter'), \"(\").concat(exp, \")\");\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    context.filters.add(name);\n    return \"\".concat(toValidAssetId(name, 'filter'), \"(\").concat(exp).concat(args !== ')' ? ',' + args : args);\n  }\n}\nvar seen$1 = new WeakSet();\nvar transformMemo = function transformMemo(node, context) {\n  if (node.type === 1 /* NodeTypes.ELEMENT */) {\n    var dir = findDir(node, 'memo');\n    if (!dir || seen$1.has(node)) {\n      return;\n    }\n    seen$1.add(node);\n    return function () {\n      var codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n        // non-component sub tree should be turned into a block\n        if (node.tagType !== 1 /* ElementTypes.COMPONENT */) {\n          makeBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [dir.exp, createFunctionExpression(undefined, codegenNode), \"_cache\", String(context.cached++)]);\n      }\n    };\n  }\n};\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [[transformOnce, transformIf, transformMemo, transformFor].concat([transformFilter], _toConsumableArray(process.env.NODE_ENV !== 'production' ? [transformExpression] : []), [transformSlotOutlet, transformElement, trackSlotScopes, transformText]), {\n    on: transformOn,\n    bind: transformBind,\n    model: transformModel\n  }];\n}\n// we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\nfunction baseCompile(template) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var onError = options.onError || defaultOnError;\n  var isModuleMode = options.mode === 'module';\n  /* istanbul ignore if */\n  {\n    if (options.prefixIdentifiers === true) {\n      onError(createCompilerError(47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */));\n    } else if (isModuleMode) {\n      onError(createCompilerError(48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */));\n    }\n  }\n\n  var prefixIdentifiers = !true;\n  if (options.cacheHandlers) {\n    onError(createCompilerError(49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */));\n  }\n\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */));\n  }\n\n  var ast = isString(template) ? baseParse(template, options) : template;\n  var _getBaseTransformPres = getBaseTransformPreset(),\n    _getBaseTransformPres2 = _slicedToArray(_getBaseTransformPres, 2),\n    nodeTransforms = _getBaseTransformPres2[0],\n    directiveTransforms = _getBaseTransformPres2[1];\n  transform(ast, extend({}, options, {\n    prefixIdentifiers: prefixIdentifiers,\n    nodeTransforms: [].concat(_toConsumableArray(nodeTransforms), _toConsumableArray(options.nodeTransforms || [])),\n    directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\n    )\n  }));\n\n  return generate(ast, extend({}, options, {\n    prefixIdentifiers: prefixIdentifiers\n  }));\n}\nvar noopDirectiveTransform = function noopDirectiveTransform() {\n  return {\n    props: []\n  };\n};\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getConstantType, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, stringifyExpression, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };","map":{"version":3,"names":["isString","hyphenate","NOOP","extend","isObject","NO","isArray","makeMap","isSymbol","EMPTY_OBJ","capitalize","camelize","camelize$1","PatchFlagNames","slotFlagsText","isOn","isBuiltInDirective","isReservedProp","toHandlerKey","generateCodeFrame","defaultOnError","error","defaultOnWarn","msg","process","env","NODE_ENV","console","warn","message","createCompilerError","code","loc","messages","additionalMessage","errorMessages","SyntaxError","String","FRAGMENT","Symbol","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","Object","getOwnPropertySymbols","forEach","s","locStub","source","start","line","column","offset","end","createRoot","children","type","components","directives","hoists","imports","cached","temps","codegenNode","undefined","createVNodeCall","context","tag","props","patchFlag","dynamicProps","isBlock","disableTracking","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","key","value","createSimpleExpression","content","isStatic","constType","createInterpolation","createCompoundExpression","createCallExpression","callee","args","arguments","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","test","consequent","alternate","createCacheExpression","index","isVNode","createBlockStatement","body","createTemplateLiteral","createIfStatement","createAssignmentExpression","left","right","createSequenceExpression","expressions","createReturnStatement","isStaticExp","p","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","name","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpressionBrowser","path","trim","replace","state","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","i","length","char","charAt","push","pop","isMemberExpressionNode","isMemberExpression","getInnerRange","slice","newLoc","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","assert","condition","Error","findDir","node","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","arg","hasDynamicKeyVBind","some","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","Set","getUnnormalizedProps","callPath","has","concat","injectProp","prop","propsWithInjection","parentCall","ret","first","hasProp","unshift","result","propKeyName","toValidAssetId","searchValue","replaceValue","toString","hasScopeRef","ids","keys","c","branches","b","getMemoedVNodeCall","makeBlock","removeHelper","deprecationData","link","getCompatValue","config","options","compatConfig","isCompatEnabled","mode","checkCompatEnabled","enabled","warnDeprecation","val","err","onWarn","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","delimiters","getNamespace","getTextMode","isVoidTag","isPreTag","isCustomElement","decodeEntities","rawText","_","p1","onError","comments","baseParse","createParserContext","getCursor","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","ancestors","parent","last","ns","nodes","isEnd","startsWith","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","isSpecialTemplateDirective","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","prev","next","filter","Boolean","match","exec","prevIndex","nestedIndex","indexOf","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","inlineTemplateProp","find","startsWithEndTagOpen","toLowerCase","advanceSpaces","cursor","currentSource","parseAttributes","hasIf","hasFor","isBuiltInComponent","isNativeTag","attributeNames","attr","parseAttribute","nameSet","add","pattern","m","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","endsWith","isQuoted","valueLoc","modifiers","split","includes","splice","quote","endIndex","parseTextData","unexpectedChars","open","close","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endOffset","endTokens","xs","searchString","hoistStatic","root","walk","isSingleElementRoot","child","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","flag","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","scopes","vSlot","transformHoist","constantCache","get","returnType","generatedPropsType","set","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","parseInt","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","scopeId","slotted","ssrCssVars","bindingMetadata","inline","isTS","nameMatch","selfName","Map","identifiers","create","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","helperString","replaceNode","removeNode","list","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","cache","filters","transform","traverseNode","createRootCodegen","patchFlagText","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","fn","matches","n","PURE_ANNOTATION","aliasHelper","createCodegenContext","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","map","indent","deindent","withoutNewLine","repeat","generate","onContextCreated","hasHelpers","useWithBlock","preambleContext","genFunctionPreamble","functionName","signature","join","genAssets","genNode","preamble","toJSON","VueBinding","staticHelpers","genHoists","assets","resolver","id","maybeSelfReference","JSON","stringify","isText$1","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","exhaustiveCheck","genExpressionAsPropertyKey","text","callHelper","genNullableArgs","isNonScopedSlot","needNewline","needsParens","isNested","walkIdentifiers","onIdentifier","includeAll","parentStack","knownIds","isReferencedIdentifier","isInDestructureAssignment","walkFunctionParams","onIdent","extractIdentifiers","walkBlockDeclarations","block","stmt","declare","declarations","decl","param","object","argument","isFunctionType","isStaticProperty","computed","isStaticPropertyKey","prohibitedKeywordRE","RegExp","stripStringRE","validateBrowserExpression","asParams","asRawStatements","Function","e","keywordMatch","transformExpression","processExpression","dir","localVars","stringifyExpression","transformIf","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","userKey","isSameKey","isTemplateIf","keyIndex","createChildrenCodegenNode","keyProperty","firstChild","needFragmentWrapper","vnodeCall","a","branchExp","transformFor","processFor","forNode","renderExp","isTemplate","memo","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","slotOutlet","loop","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","trackVForSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","conditionalBranchIndex","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","j","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","slotFlag","hasForwardedSlots","slots","directiveImportMap","WeakMap","transformElement","postTransformElement","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","flagNames","Number","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","pushMergeArg","dedupeProperties","analyzePatchFlag","isEventHandler","isVBind","isVOn","hasOverridableKeys","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","modifier","propsNamesString","l","freeze","cacheStringFunction","str","hit","camelizeRE","toUpperCase","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","fnExpRE","transformOn","augmentor","eventName","rawName","eventString","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","currentContainer","hasText","callArgs","seen","WeakSet","transformOnce","cur","transformModel","createTransformProps","rawExp","expString","bindingType","maybeRef","propName","assignmentExp","eventArg","modifiersKey","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","expression","pushFilter","wrapFilter","seen$1","transformMemo","getBaseTransformPreset","on","bind","model","baseCompile","template","isModuleMode","noopDirectiveTransform"],"sources":["/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js"],"sourcesContent":["import { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\n    throw error;\n}\nfunction defaultOnWarn(msg) {\n    (process.env.NODE_ENV !== 'production') && console.warn(`[Vue warn] ${msg.message}`);\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n    const msg = (process.env.NODE_ENV !== 'production') || !true\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\n        : code;\n    const error = new SyntaxError(String(msg));\n    error.code = code;\n    error.loc = loc;\n    return error;\n}\nconst errorMessages = {\n    // parse errors\n    [0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\n    [1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\n    [2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\n    [3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\n    [4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\n    [5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\n    [6 /* ErrorCodes.EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\n    [7 /* ErrorCodes.EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\n    [8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\n    [9 /* ErrorCodes.EOF_IN_TAG */]: 'Unexpected EOF in tag.',\n    [10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\n    [11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\n    [12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n    [13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\n    [14 /* ErrorCodes.MISSING_END_TAG_NAME */]: 'End tag name was expected.',\n    [15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\n    [16 /* ErrorCodes.NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\n    [17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n    [18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n    [19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\n    [21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\n    [20 /* ErrorCodes.UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\n    [22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\n    // Vue-specific parse errors\n    [23 /* ErrorCodes.X_INVALID_END_TAG */]: 'Invalid end tag.',\n    [24 /* ErrorCodes.X_MISSING_END_TAG */]: 'Element is missing end tag.',\n    [25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\n    [27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\n        'Note that dynamic directive argument cannot contain spaces.',\n    [26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\n    // transform errors\n    [28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\n    [29 /* ErrorCodes.X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\n    [30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n    [31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\n    [32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\n    [33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\n    [34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\n    [35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\n    [36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\n    [37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\n        `When there are multiple named slots, all slots should use <template> ` +\n        `syntax to avoid scope ambiguity.`,\n    [38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\n    [39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\n        `default slot. These children will be ignored.`,\n    [40 /* ErrorCodes.X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\n    [41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\n    [42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\n    [43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n    [44 /* ErrorCodes.X_V_MODEL_ON_PROPS */]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n    [45 /* ErrorCodes.X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\n    [46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\n    // generic errors\n    [47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n    [48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\n    [49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n    [50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\n    // just to fulfill types\n    [51 /* ErrorCodes.__EXTEND_POINT__ */]: ``\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\nconst CREATE_ELEMENT_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createElementBlock` : ``);\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\nconst CREATE_ELEMENT_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createElementVNode` : ``);\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\nconst RESOLVE_FILTER = Symbol((process.env.NODE_ENV !== 'production') ? `resolveFilter` : ``);\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\nconst NORMALIZE_CLASS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeClass` : ``);\nconst NORMALIZE_STYLE = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeStyle` : ``);\nconst NORMALIZE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeProps` : ``);\nconst GUARD_REACTIVE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `guardReactiveProps` : ``);\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\nconst WITH_MEMO = Symbol((process.env.NODE_ENV !== 'production') ? `withMemo` : ``);\nconst IS_MEMO_SAME = Symbol((process.env.NODE_ENV !== 'production') ? `isMemoSame` : ``);\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\nconst helperNameMap = {\n    [FRAGMENT]: `Fragment`,\n    [TELEPORT]: `Teleport`,\n    [SUSPENSE]: `Suspense`,\n    [KEEP_ALIVE]: `KeepAlive`,\n    [BASE_TRANSITION]: `BaseTransition`,\n    [OPEN_BLOCK]: `openBlock`,\n    [CREATE_BLOCK]: `createBlock`,\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n    [CREATE_VNODE]: `createVNode`,\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n    [CREATE_COMMENT]: `createCommentVNode`,\n    [CREATE_TEXT]: `createTextVNode`,\n    [CREATE_STATIC]: `createStaticVNode`,\n    [RESOLVE_COMPONENT]: `resolveComponent`,\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\n    [RESOLVE_FILTER]: `resolveFilter`,\n    [WITH_DIRECTIVES]: `withDirectives`,\n    [RENDER_LIST]: `renderList`,\n    [RENDER_SLOT]: `renderSlot`,\n    [CREATE_SLOTS]: `createSlots`,\n    [TO_DISPLAY_STRING]: `toDisplayString`,\n    [MERGE_PROPS]: `mergeProps`,\n    [NORMALIZE_CLASS]: `normalizeClass`,\n    [NORMALIZE_STYLE]: `normalizeStyle`,\n    [NORMALIZE_PROPS]: `normalizeProps`,\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n    [TO_HANDLERS]: `toHandlers`,\n    [CAMELIZE]: `camelize`,\n    [CAPITALIZE]: `capitalize`,\n    [TO_HANDLER_KEY]: `toHandlerKey`,\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\n    [PUSH_SCOPE_ID]: `pushScopeId`,\n    [POP_SCOPE_ID]: `popScopeId`,\n    [WITH_CTX]: `withCtx`,\n    [UNREF]: `unref`,\n    [IS_REF]: `isRef`,\n    [WITH_MEMO]: `withMemo`,\n    [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\n        helperNameMap[s] = helpers[s];\n    });\n}\n\n// AST Utilities ---------------------------------------------------------------\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nconst locStub = {\n    source: '',\n    start: { line: 1, column: 1, offset: 0 },\n    end: { line: 1, column: 1, offset: 0 }\n};\nfunction createRoot(children, loc = locStub) {\n    return {\n        type: 0 /* NodeTypes.ROOT */,\n        children,\n        helpers: [],\n        components: [],\n        directives: [],\n        hoists: [],\n        imports: [],\n        cached: 0,\n        temps: 0,\n        codegenNode: undefined,\n        loc\n    };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n    if (context) {\n        if (isBlock) {\n            context.helper(OPEN_BLOCK);\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n        }\n        else {\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\n        }\n        if (directives) {\n            context.helper(WITH_DIRECTIVES);\n        }\n    }\n    return {\n        type: 13 /* NodeTypes.VNODE_CALL */,\n        tag,\n        props,\n        children,\n        patchFlag,\n        dynamicProps,\n        directives,\n        isBlock,\n        disableTracking,\n        isComponent,\n        loc\n    };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n    return {\n        type: 17 /* NodeTypes.JS_ARRAY_EXPRESSION */,\n        loc,\n        elements\n    };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n    return {\n        type: 15 /* NodeTypes.JS_OBJECT_EXPRESSION */,\n        loc,\n        properties\n    };\n}\nfunction createObjectProperty(key, value) {\n    return {\n        type: 16 /* NodeTypes.JS_PROPERTY */,\n        loc: locStub,\n        key: isString(key) ? createSimpleExpression(key, true) : key,\n        value\n    };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* ConstantTypes.NOT_CONSTANT */) {\n    return {\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n        loc,\n        content,\n        isStatic,\n        constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : constType\n    };\n}\nfunction createInterpolation(content, loc) {\n    return {\n        type: 5 /* NodeTypes.INTERPOLATION */,\n        loc,\n        content: isString(content)\n            ? createSimpleExpression(content, false, loc)\n            : content\n    };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n    return {\n        type: 8 /* NodeTypes.COMPOUND_EXPRESSION */,\n        loc,\n        children\n    };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n    return {\n        type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\n        loc,\n        callee,\n        arguments: args\n    };\n}\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\n    return {\n        type: 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */,\n        params,\n        returns,\n        newline,\n        isSlot,\n        loc\n    };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n    return {\n        type: 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */,\n        test,\n        consequent,\n        alternate,\n        newline,\n        loc: locStub\n    };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n    return {\n        type: 20 /* NodeTypes.JS_CACHE_EXPRESSION */,\n        index,\n        value,\n        isVNode,\n        loc: locStub\n    };\n}\nfunction createBlockStatement(body) {\n    return {\n        type: 21 /* NodeTypes.JS_BLOCK_STATEMENT */,\n        body,\n        loc: locStub\n    };\n}\nfunction createTemplateLiteral(elements) {\n    return {\n        type: 22 /* NodeTypes.JS_TEMPLATE_LITERAL */,\n        elements,\n        loc: locStub\n    };\n}\nfunction createIfStatement(test, consequent, alternate) {\n    return {\n        type: 23 /* NodeTypes.JS_IF_STATEMENT */,\n        test,\n        consequent,\n        alternate,\n        loc: locStub\n    };\n}\nfunction createAssignmentExpression(left, right) {\n    return {\n        type: 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */,\n        left,\n        right,\n        loc: locStub\n    };\n}\nfunction createSequenceExpression(expressions) {\n    return {\n        type: 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */,\n        expressions,\n        loc: locStub\n    };\n}\nfunction createReturnStatement(returns) {\n    return {\n        type: 26 /* NodeTypes.JS_RETURN_STATEMENT */,\n        returns,\n        loc: locStub\n    };\n}\n\nconst isStaticExp = (p) => p.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.isStatic;\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\nfunction isCoreComponent(tag) {\n    if (isBuiltInType(tag, 'Teleport')) {\n        return TELEPORT;\n    }\n    else if (isBuiltInType(tag, 'Suspense')) {\n        return SUSPENSE;\n    }\n    else if (isBuiltInType(tag, 'KeepAlive')) {\n        return KEEP_ALIVE;\n    }\n    else if (isBuiltInType(tag, 'BaseTransition')) {\n        return BASE_TRANSITION;\n    }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\n/**\n * Simple lexer to check if an expression is a member expression. This is\n * lax and only checks validity at the root level (i.e. does not validate exps\n * inside square brackets), but it's ok since these are only used on template\n * expressions and false positives are invalid expressions in the first place.\n */\nconst isMemberExpressionBrowser = (path) => {\n    // remove whitespaces around . or [ first\n    path = path.trim().replace(whitespaceRE, s => s.trim());\n    let state = 0 /* MemberExpLexState.inMemberExp */;\n    let stateStack = [];\n    let currentOpenBracketCount = 0;\n    let currentOpenParensCount = 0;\n    let currentStringType = null;\n    for (let i = 0; i < path.length; i++) {\n        const char = path.charAt(i);\n        switch (state) {\n            case 0 /* MemberExpLexState.inMemberExp */:\n                if (char === '[') {\n                    stateStack.push(state);\n                    state = 1 /* MemberExpLexState.inBrackets */;\n                    currentOpenBracketCount++;\n                }\n                else if (char === '(') {\n                    stateStack.push(state);\n                    state = 2 /* MemberExpLexState.inParens */;\n                    currentOpenParensCount++;\n                }\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n                    return false;\n                }\n                break;\n            case 1 /* MemberExpLexState.inBrackets */:\n                if (char === `'` || char === `\"` || char === '`') {\n                    stateStack.push(state);\n                    state = 3 /* MemberExpLexState.inString */;\n                    currentStringType = char;\n                }\n                else if (char === `[`) {\n                    currentOpenBracketCount++;\n                }\n                else if (char === `]`) {\n                    if (!--currentOpenBracketCount) {\n                        state = stateStack.pop();\n                    }\n                }\n                break;\n            case 2 /* MemberExpLexState.inParens */:\n                if (char === `'` || char === `\"` || char === '`') {\n                    stateStack.push(state);\n                    state = 3 /* MemberExpLexState.inString */;\n                    currentStringType = char;\n                }\n                else if (char === `(`) {\n                    currentOpenParensCount++;\n                }\n                else if (char === `)`) {\n                    // if the exp ends as a call then it should not be considered valid\n                    if (i === path.length - 1) {\n                        return false;\n                    }\n                    if (!--currentOpenParensCount) {\n                        state = stateStack.pop();\n                    }\n                }\n                break;\n            case 3 /* MemberExpLexState.inString */:\n                if (char === currentStringType) {\n                    state = stateStack.pop();\n                    currentStringType = null;\n                }\n                break;\n        }\n    }\n    return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = NOOP\n    ;\nconst isMemberExpression = isMemberExpressionBrowser\n    ;\nfunction getInnerRange(loc, offset, length) {\n    const source = loc.source.slice(offset, offset + length);\n    const newLoc = {\n        source,\n        start: advancePositionWithClone(loc.start, loc.source, offset),\n        end: loc.end\n    };\n    if (length != null) {\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\n    }\n    return newLoc;\n}\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\n}\n// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n    let linesCount = 0;\n    let lastNewLinePos = -1;\n    for (let i = 0; i < numberOfCharacters; i++) {\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\n            linesCount++;\n            lastNewLinePos = i;\n        }\n    }\n    pos.offset += numberOfCharacters;\n    pos.line += linesCount;\n    pos.column =\n        lastNewLinePos === -1\n            ? pos.column + numberOfCharacters\n            : numberOfCharacters - lastNewLinePos;\n    return pos;\n}\nfunction assert(condition, msg) {\n    /* istanbul ignore if */\n    if (!condition) {\n        throw new Error(msg || `unexpected compiler condition`);\n    }\n}\nfunction findDir(node, name, allowEmpty = false) {\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n            (allowEmpty || p.exp) &&\n            (isString(name) ? p.name === name : name.test(p.name))) {\n            return p;\n        }\n    }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n            if (dynamicOnly)\n                continue;\n            if (p.name === name && (p.value || allowEmpty)) {\n                return p;\n            }\n        }\n        else if (p.name === 'bind' &&\n            (p.exp || allowEmpty) &&\n            isStaticArgOf(p.arg, name)) {\n            return p;\n        }\n    }\n}\nfunction isStaticArgOf(arg, name) {\n    return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n    return node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n        p.name === 'bind' &&\n        (!p.arg || // v-bind=\"obj\"\n            p.arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\n            !p.arg.isStatic) // v-bind:[foo]\n    );\n}\nfunction isText(node) {\n    return node.type === 5 /* NodeTypes.INTERPOLATION */ || node.type === 2 /* NodeTypes.TEXT */;\n}\nfunction isVSlot(p) {\n    return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'slot';\n}\nfunction isTemplateNode(node) {\n    return (node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 3 /* ElementTypes.TEMPLATE */);\n}\nfunction isSlotOutlet(node) {\n    return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 2 /* ElementTypes.SLOT */;\n}\nfunction getVNodeHelper(ssr, isComponent) {\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n    if (props &&\n        !isString(props) &&\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n        const callee = props.callee;\n        if (!isString(callee) && propsHelperSet.has(callee)) {\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\n        }\n    }\n    return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n    let propsWithInjection;\n    /**\n     * 1. mergeProps(...)\n     * 2. toHandlers(...)\n     * 3. normalizeProps(...)\n     * 4. normalizeProps(guardReactiveProps(...))\n     *\n     * we need to get the real props before normalization\n     */\n    let props = node.type === 13 /* NodeTypes.VNODE_CALL */ ? node.props : node.arguments[2];\n    let callPath = [];\n    let parentCall;\n    if (props &&\n        !isString(props) &&\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n        const ret = getUnnormalizedProps(props);\n        props = ret[0];\n        callPath = ret[1];\n        parentCall = callPath[callPath.length - 1];\n    }\n    if (props == null || isString(props)) {\n        propsWithInjection = createObjectExpression([prop]);\n    }\n    else if (props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n        // merged props... add ours\n        // only inject key to object literal if it's the first argument so that\n        // if doesn't override user provided keys\n        const first = props.arguments[0];\n        if (!isString(first) && first.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n            // #6631\n            if (!hasProp(prop, first)) {\n                first.properties.unshift(prop);\n            }\n        }\n        else {\n            if (props.callee === TO_HANDLERS) {\n                // #2366\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n                    createObjectExpression([prop]),\n                    props\n                ]);\n            }\n            else {\n                props.arguments.unshift(createObjectExpression([prop]));\n            }\n        }\n        !propsWithInjection && (propsWithInjection = props);\n    }\n    else if (props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n        if (!hasProp(prop, props)) {\n            props.properties.unshift(prop);\n        }\n        propsWithInjection = props;\n    }\n    else {\n        // single v-bind with expression, return a merged replacement\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n            createObjectExpression([prop]),\n            props\n        ]);\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n        // the `guardReactiveProps` will no longer be needed\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n            parentCall = callPath[callPath.length - 2];\n        }\n    }\n    if (node.type === 13 /* NodeTypes.VNODE_CALL */) {\n        if (parentCall) {\n            parentCall.arguments[0] = propsWithInjection;\n        }\n        else {\n            node.props = propsWithInjection;\n        }\n    }\n    else {\n        if (parentCall) {\n            parentCall.arguments[0] = propsWithInjection;\n        }\n        else {\n            node.arguments[2] = propsWithInjection;\n        }\n    }\n}\n// check existing key to avoid overriding user provided keys\nfunction hasProp(prop, props) {\n    let result = false;\n    if (prop.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        const propKeyName = prop.key.content;\n        result = props.properties.some(p => p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\n            p.key.content === propKeyName);\n    }\n    return result;\n}\nfunction toValidAssetId(name, type) {\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\n    })}`;\n}\n// Check if a node contains expressions that reference current context scope ids\nfunction hasScopeRef(node, ids) {\n    if (!node || Object.keys(ids).length === 0) {\n        return false;\n    }\n    switch (node.type) {\n        case 1 /* NodeTypes.ELEMENT */:\n            for (let i = 0; i < node.props.length; i++) {\n                const p = node.props[i];\n                if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n                    return true;\n                }\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 11 /* NodeTypes.FOR */:\n            if (hasScopeRef(node.source, ids)) {\n                return true;\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 9 /* NodeTypes.IF */:\n            return node.branches.some(b => hasScopeRef(b, ids));\n        case 10 /* NodeTypes.IF_BRANCH */:\n            if (hasScopeRef(node.condition, ids)) {\n                return true;\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n            return (!node.isStatic &&\n                isSimpleIdentifier(node.content) &&\n                !!ids[node.content]);\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\n        case 5 /* NodeTypes.INTERPOLATION */:\n        case 12 /* NodeTypes.TEXT_CALL */:\n            return hasScopeRef(node.content, ids);\n        case 2 /* NodeTypes.TEXT */:\n        case 3 /* NodeTypes.COMMENT */:\n            return false;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) ;\n            return false;\n    }\n}\nfunction getMemoedVNodeCall(node) {\n    if (node.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\n        return node.arguments[1].returns;\n    }\n    else {\n        return node;\n    }\n}\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\n    if (!node.isBlock) {\n        node.isBlock = true;\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\n        helper(OPEN_BLOCK);\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\n    }\n}\n\nconst deprecationData = {\n    [\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */]: {\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\n            `prefixed with \"vue:\".`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n    },\n    [\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */]: {\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\n            `\\`v-model:${key}\\`.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n    },\n    [\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */]: {\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\n    },\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */]: {\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\n            `that appears before v-bind in the case of conflict. ` +\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\n            `You can also suppress this warning if the usage is intended.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n    },\n    [\"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */]: {\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n    },\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\n        message: `v-if / v-for precedence when used on the same element has changed ` +\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\n            `with <template> tags or use a computed property that filters v-for ` +\n            `data source.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n    },\n    [\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */]: {\n        message: `<template> with no special directives will render as a native template ` +\n            `element instead of its inner content in Vue 3.`\n    },\n    [\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */]: {\n        message: `\"inline-template\" has been removed in Vue 3.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n    },\n    [\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */]: {\n        message: `filters have been removed in Vue 3. ` +\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\n            `Use method calls or computed properties instead.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n    }\n};\nfunction getCompatValue(key, context) {\n    const config = context.options\n        ? context.options.compatConfig\n        : context.compatConfig;\n    const value = config && config[key];\n    if (key === 'MODE') {\n        return value || 3; // compiler defaults to v3 behavior\n    }\n    else {\n        return value;\n    }\n}\nfunction isCompatEnabled(key, context) {\n    const mode = getCompatValue('MODE', context);\n    const value = getCompatValue(key, context);\n    // in v3 mode, only enable if explicitly set to true\n    // otherwise enable for any non-false value\n    return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n    const enabled = isCompatEnabled(key, context);\n    if ((process.env.NODE_ENV !== 'production') && enabled) {\n        warnDeprecation(key, context, loc, ...args);\n    }\n    return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n    const val = getCompatValue(key, context);\n    if (val === 'suppress-warning') {\n        return;\n    }\n    const { message, link } = deprecationData[key];\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\n    const err = new SyntaxError(msg);\n    err.code = key;\n    if (loc)\n        err.loc = loc;\n    context.onWarn(err);\n}\n\n// The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\nconst decodeMap = {\n    gt: '>',\n    lt: '<',\n    amp: '&',\n    apos: \"'\",\n    quot: '\"'\n};\nconst defaultParserOptions = {\n    delimiters: [`{{`, `}}`],\n    getNamespace: () => 0 /* Namespaces.HTML */,\n    getTextMode: () => 0 /* TextModes.DATA */,\n    isVoidTag: NO,\n    isPreTag: NO,\n    isCustomElement: NO,\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\n    onError: defaultOnError,\n    onWarn: defaultOnWarn,\n    comments: (process.env.NODE_ENV !== 'production')\n};\nfunction baseParse(content, options = {}) {\n    const context = createParserContext(content, options);\n    const start = getCursor(context);\n    return createRoot(parseChildren(context, 0 /* TextModes.DATA */, []), getSelection(context, start));\n}\nfunction createParserContext(content, rawOptions) {\n    const options = extend({}, defaultParserOptions);\n    let key;\n    for (key in rawOptions) {\n        // @ts-ignore\n        options[key] =\n            rawOptions[key] === undefined\n                ? defaultParserOptions[key]\n                : rawOptions[key];\n    }\n    return {\n        options,\n        column: 1,\n        line: 1,\n        offset: 0,\n        originalSource: content,\n        source: content,\n        inPre: false,\n        inVPre: false,\n        onWarn: options.onWarn\n    };\n}\nfunction parseChildren(context, mode, ancestors) {\n    const parent = last(ancestors);\n    const ns = parent ? parent.ns : 0 /* Namespaces.HTML */;\n    const nodes = [];\n    while (!isEnd(context, mode, ancestors)) {\n        const s = context.source;\n        let node = undefined;\n        if (mode === 0 /* TextModes.DATA */ || mode === 1 /* TextModes.RCDATA */) {\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n                // '{{'\n                node = parseInterpolation(context, mode);\n            }\n            else if (mode === 0 /* TextModes.DATA */ && s[0] === '<') {\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n                if (s.length === 1) {\n                    emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 1);\n                }\n                else if (s[1] === '!') {\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n                    if (startsWith(s, '<!--')) {\n                        node = parseComment(context);\n                    }\n                    else if (startsWith(s, '<!DOCTYPE')) {\n                        // Ignore DOCTYPE by a limitation.\n                        node = parseBogusComment(context);\n                    }\n                    else if (startsWith(s, '<![CDATA[')) {\n                        if (ns !== 0 /* Namespaces.HTML */) {\n                            node = parseCDATA(context, ancestors);\n                        }\n                        else {\n                            emitError(context, 1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */);\n                            node = parseBogusComment(context);\n                        }\n                    }\n                    else {\n                        emitError(context, 11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */);\n                        node = parseBogusComment(context);\n                    }\n                }\n                else if (s[1] === '/') {\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n                    if (s.length === 2) {\n                        emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 2);\n                    }\n                    else if (s[2] === '>') {\n                        emitError(context, 14 /* ErrorCodes.MISSING_END_TAG_NAME */, 2);\n                        advanceBy(context, 3);\n                        continue;\n                    }\n                    else if (/[a-z]/i.test(s[2])) {\n                        emitError(context, 23 /* ErrorCodes.X_INVALID_END_TAG */);\n                        parseTag(context, 1 /* TagType.End */, parent);\n                        continue;\n                    }\n                    else {\n                        emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\n                        node = parseBogusComment(context);\n                    }\n                }\n                else if (/[a-z]/i.test(s[1])) {\n                    node = parseElement(context, ancestors);\n                    // 2.x <template> with no directive compat\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context) &&\n                        node &&\n                        node.tag === 'template' &&\n                        !node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n                            isSpecialTemplateDirective(p.name))) {\n                        (process.env.NODE_ENV !== 'production') &&\n                            warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context, node.loc);\n                        node = node.children;\n                    }\n                }\n                else if (s[1] === '?') {\n                    emitError(context, 21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\n                    node = parseBogusComment(context);\n                }\n                else {\n                    emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\n                }\n            }\n        }\n        if (!node) {\n            node = parseText(context, mode);\n        }\n        if (isArray(node)) {\n            for (let i = 0; i < node.length; i++) {\n                pushNode(nodes, node[i]);\n            }\n        }\n        else {\n            pushNode(nodes, node);\n        }\n    }\n    // Whitespace handling strategy like v2\n    let removedWhitespace = false;\n    if (mode !== 2 /* TextModes.RAWTEXT */ && mode !== 1 /* TextModes.RCDATA */) {\n        const shouldCondense = context.options.whitespace !== 'preserve';\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (node.type === 2 /* NodeTypes.TEXT */) {\n                if (!context.inPre) {\n                    if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n                        const prev = nodes[i - 1];\n                        const next = nodes[i + 1];\n                        // Remove if:\n                        // - the whitespace is the first or last node, or:\n                        // - (condense mode) the whitespace is between twos comments, or:\n                        // - (condense mode) the whitespace is between comment and element, or:\n                        // - (condense mode) the whitespace is between two elements AND contains newline\n                        if (!prev ||\n                            !next ||\n                            (shouldCondense &&\n                                ((prev.type === 3 /* NodeTypes.COMMENT */ &&\n                                    next.type === 3 /* NodeTypes.COMMENT */) ||\n                                    (prev.type === 3 /* NodeTypes.COMMENT */ &&\n                                        next.type === 1 /* NodeTypes.ELEMENT */) ||\n                                    (prev.type === 1 /* NodeTypes.ELEMENT */ &&\n                                        next.type === 3 /* NodeTypes.COMMENT */) ||\n                                    (prev.type === 1 /* NodeTypes.ELEMENT */ &&\n                                        next.type === 1 /* NodeTypes.ELEMENT */ &&\n                                        /[\\r\\n]/.test(node.content))))) {\n                            removedWhitespace = true;\n                            nodes[i] = null;\n                        }\n                        else {\n                            // Otherwise, the whitespace is condensed into a single space\n                            node.content = ' ';\n                        }\n                    }\n                    else if (shouldCondense) {\n                        // in condense mode, consecutive whitespaces in text are condensed\n                        // down to a single space.\n                        node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\n                    }\n                }\n                else {\n                    // #6410 normalize windows newlines in <pre>:\n                    // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\n                    // in the DOM\n                    node.content = node.content.replace(/\\r\\n/g, '\\n');\n                }\n            }\n            // Remove comment nodes if desired by configuration.\n            else if (node.type === 3 /* NodeTypes.COMMENT */ && !context.options.comments) {\n                removedWhitespace = true;\n                nodes[i] = null;\n            }\n        }\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n            // remove leading newline per html spec\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n            const first = nodes[0];\n            if (first && first.type === 2 /* NodeTypes.TEXT */) {\n                first.content = first.content.replace(/^\\r?\\n/, '');\n            }\n        }\n    }\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction pushNode(nodes, node) {\n    if (node.type === 2 /* NodeTypes.TEXT */) {\n        const prev = last(nodes);\n        // Merge if both this and the previous node are text and those are\n        // consecutive. This happens for cases like \"a < b\".\n        if (prev &&\n            prev.type === 2 /* NodeTypes.TEXT */ &&\n            prev.loc.end.offset === node.loc.start.offset) {\n            prev.content += node.content;\n            prev.loc.end = node.loc.end;\n            prev.loc.source += node.loc.source;\n            return;\n        }\n    }\n    nodes.push(node);\n}\nfunction parseCDATA(context, ancestors) {\n    advanceBy(context, 9);\n    const nodes = parseChildren(context, 3 /* TextModes.CDATA */, ancestors);\n    if (context.source.length === 0) {\n        emitError(context, 6 /* ErrorCodes.EOF_IN_CDATA */);\n    }\n    else {\n        advanceBy(context, 3);\n    }\n    return nodes;\n}\nfunction parseComment(context) {\n    const start = getCursor(context);\n    let content;\n    // Regular comment.\n    const match = /--(\\!)?>/.exec(context.source);\n    if (!match) {\n        content = context.source.slice(4);\n        advanceBy(context, context.source.length);\n        emitError(context, 7 /* ErrorCodes.EOF_IN_COMMENT */);\n    }\n    else {\n        if (match.index <= 3) {\n            emitError(context, 0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\n        }\n        if (match[1]) {\n            emitError(context, 10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */);\n        }\n        content = context.source.slice(4, match.index);\n        // Advancing with reporting nested comments.\n        const s = context.source.slice(0, match.index);\n        let prevIndex = 1, nestedIndex = 0;\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\n            advanceBy(context, nestedIndex - prevIndex + 1);\n            if (nestedIndex + 4 < s.length) {\n                emitError(context, 16 /* ErrorCodes.NESTED_COMMENT */);\n            }\n            prevIndex = nestedIndex + 1;\n        }\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\n    }\n    return {\n        type: 3 /* NodeTypes.COMMENT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\nfunction parseBogusComment(context) {\n    const start = getCursor(context);\n    const contentStart = context.source[1] === '?' ? 1 : 2;\n    let content;\n    const closeIndex = context.source.indexOf('>');\n    if (closeIndex === -1) {\n        content = context.source.slice(contentStart);\n        advanceBy(context, context.source.length);\n    }\n    else {\n        content = context.source.slice(contentStart, closeIndex);\n        advanceBy(context, closeIndex + 1);\n    }\n    return {\n        type: 3 /* NodeTypes.COMMENT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\nfunction parseElement(context, ancestors) {\n    // Start tag.\n    const wasInPre = context.inPre;\n    const wasInVPre = context.inVPre;\n    const parent = last(ancestors);\n    const element = parseTag(context, 0 /* TagType.Start */, parent);\n    const isPreBoundary = context.inPre && !wasInPre;\n    const isVPreBoundary = context.inVPre && !wasInVPre;\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n        // #4030 self-closing <pre> tag\n        if (isPreBoundary) {\n            context.inPre = false;\n        }\n        if (isVPreBoundary) {\n            context.inVPre = false;\n        }\n        return element;\n    }\n    // Children.\n    ancestors.push(element);\n    const mode = context.options.getTextMode(element, parent);\n    const children = parseChildren(context, mode, ancestors);\n    ancestors.pop();\n    // 2.x inline-template compat\n    {\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'inline-template');\n        if (inlineTemplateProp &&\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\n            const loc = getSelection(context, element.loc.end);\n            inlineTemplateProp.value = {\n                type: 2 /* NodeTypes.TEXT */,\n                content: loc.source,\n                loc\n            };\n        }\n    }\n    element.children = children;\n    // End tag.\n    if (startsWithEndTagOpen(context.source, element.tag)) {\n        parseTag(context, 1 /* TagType.End */, parent);\n    }\n    else {\n        emitError(context, 24 /* ErrorCodes.X_MISSING_END_TAG */, 0, element.loc.start);\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n            const first = children[0];\n            if (first && startsWith(first.loc.source, '<!--')) {\n                emitError(context, 8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\n            }\n        }\n    }\n    element.loc = getSelection(context, element.loc.start);\n    if (isPreBoundary) {\n        context.inPre = false;\n    }\n    if (isVPreBoundary) {\n        context.inVPre = false;\n    }\n    return element;\n}\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\nfunction parseTag(context, type, parent) {\n    // Tag open.\n    const start = getCursor(context);\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\n    const tag = match[1];\n    const ns = context.options.getNamespace(tag, parent);\n    advanceBy(context, match[0].length);\n    advanceSpaces(context);\n    // save current state in case we need to re-parse attributes with v-pre\n    const cursor = getCursor(context);\n    const currentSource = context.source;\n    // check <pre> tag\n    if (context.options.isPreTag(tag)) {\n        context.inPre = true;\n    }\n    // Attributes.\n    let props = parseAttributes(context, type);\n    // check v-pre\n    if (type === 0 /* TagType.Start */ &&\n        !context.inVPre &&\n        props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'pre')) {\n        context.inVPre = true;\n        // reset context\n        extend(context, cursor);\n        context.source = currentSource;\n        // re-parse attrs and filter out v-pre itself\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\n    }\n    // Tag close.\n    let isSelfClosing = false;\n    if (context.source.length === 0) {\n        emitError(context, 9 /* ErrorCodes.EOF_IN_TAG */);\n    }\n    else {\n        isSelfClosing = startsWith(context.source, '/>');\n        if (type === 1 /* TagType.End */ && isSelfClosing) {\n            emitError(context, 4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */);\n        }\n        advanceBy(context, isSelfClosing ? 2 : 1);\n    }\n    if (type === 1 /* TagType.End */) {\n        return;\n    }\n    // 2.x deprecation checks\n    if ((process.env.NODE_ENV !== 'production') &&\n        isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\n        let hasIf = false;\n        let hasFor = false;\n        for (let i = 0; i < props.length; i++) {\n            const p = props[i];\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\n                if (p.name === 'if') {\n                    hasIf = true;\n                }\n                else if (p.name === 'for') {\n                    hasFor = true;\n                }\n            }\n            if (hasIf && hasFor) {\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\n                break;\n            }\n        }\n    }\n    let tagType = 0 /* ElementTypes.ELEMENT */;\n    if (!context.inVPre) {\n        if (tag === 'slot') {\n            tagType = 2 /* ElementTypes.SLOT */;\n        }\n        else if (tag === 'template') {\n            if (props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\n                tagType = 3 /* ElementTypes.TEMPLATE */;\n            }\n        }\n        else if (isComponent(tag, props, context)) {\n            tagType = 1 /* ElementTypes.COMPONENT */;\n        }\n    }\n    return {\n        type: 1 /* NodeTypes.ELEMENT */,\n        ns,\n        tag,\n        tagType,\n        props,\n        isSelfClosing,\n        children: [],\n        loc: getSelection(context, start),\n        codegenNode: undefined // to be created during transform phase\n    };\n}\nfunction isComponent(tag, props, context) {\n    const options = context.options;\n    if (options.isCustomElement(tag)) {\n        return false;\n    }\n    if (tag === 'component' ||\n        /^[A-Z]/.test(tag) ||\n        isCoreComponent(tag) ||\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\n        (options.isNativeTag && !options.isNativeTag(tag))) {\n        return true;\n    }\n    // at this point the tag should be a native tag, but check for potential \"is\"\n    // casting\n    for (let i = 0; i < props.length; i++) {\n        const p = props[i];\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n            if (p.name === 'is' && p.value) {\n                if (p.value.content.startsWith('vue:')) {\n                    return true;\n                }\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            // directive\n            // v-is (TODO Deprecate)\n            if (p.name === 'is') {\n                return true;\n            }\n            else if (\n            // :is on plain element - only treat as component in compat mode\n            p.name === 'bind' &&\n                isStaticArgOf(p.arg, 'is') &&\n                true &&\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n                return true;\n            }\n        }\n    }\n}\nfunction parseAttributes(context, type) {\n    const props = [];\n    const attributeNames = new Set();\n    while (context.source.length > 0 &&\n        !startsWith(context.source, '>') &&\n        !startsWith(context.source, '/>')) {\n        if (startsWith(context.source, '/')) {\n            emitError(context, 22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */);\n            advanceBy(context, 1);\n            advanceSpaces(context);\n            continue;\n        }\n        if (type === 1 /* TagType.End */) {\n            emitError(context, 3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */);\n        }\n        const attr = parseAttribute(context, attributeNames);\n        // Trim whitespace between class\n        // https://github.com/vuejs/core/issues/4251\n        if (attr.type === 6 /* NodeTypes.ATTRIBUTE */ &&\n            attr.value &&\n            attr.name === 'class') {\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\n        }\n        if (type === 0 /* TagType.Start */) {\n            props.push(attr);\n        }\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n            emitError(context, 15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\n        }\n        advanceSpaces(context);\n    }\n    return props;\n}\nfunction parseAttribute(context, nameSet) {\n    // Name.\n    const start = getCursor(context);\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n    const name = match[0];\n    if (nameSet.has(name)) {\n        emitError(context, 2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */);\n    }\n    nameSet.add(name);\n    if (name[0] === '=') {\n        emitError(context, 19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\n    }\n    {\n        const pattern = /[\"'<]/g;\n        let m;\n        while ((m = pattern.exec(name))) {\n            emitError(context, 17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\n        }\n    }\n    advanceBy(context, name.length);\n    // Value\n    let value = undefined;\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n        advanceSpaces(context);\n        advanceBy(context, 1);\n        advanceSpaces(context);\n        value = parseAttributeValue(context);\n        if (!value) {\n            emitError(context, 13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */);\n        }\n    }\n    const loc = getSelection(context, start);\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\n        let isPropShorthand = startsWith(name, '.');\n        let dirName = match[1] ||\n            (isPropShorthand || startsWith(name, ':')\n                ? 'bind'\n                : startsWith(name, '@')\n                    ? 'on'\n                    : 'slot');\n        let arg;\n        if (match[2]) {\n            const isSlot = dirName === 'slot';\n            const startOffset = name.lastIndexOf(match[2]);\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\n            let content = match[2];\n            let isStatic = true;\n            if (content.startsWith('[')) {\n                isStatic = false;\n                if (!content.endsWith(']')) {\n                    emitError(context, 27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\n                    content = content.slice(1);\n                }\n                else {\n                    content = content.slice(1, content.length - 1);\n                }\n            }\n            else if (isSlot) {\n                // #1241 special case for v-slot: vuetify relies extensively on slot\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n                // supports such usage so we are keeping it consistent with 2.x.\n                content += match[3] || '';\n            }\n            arg = {\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n                content,\n                isStatic,\n                constType: isStatic\n                    ? 3 /* ConstantTypes.CAN_STRINGIFY */\n                    : 0 /* ConstantTypes.NOT_CONSTANT */,\n                loc\n            };\n        }\n        if (value && value.isQuoted) {\n            const valueLoc = value.loc;\n            valueLoc.start.offset++;\n            valueLoc.start.column++;\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\n            valueLoc.source = valueLoc.source.slice(1, -1);\n        }\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\n        if (isPropShorthand)\n            modifiers.push('prop');\n        // 2.x compat v-bind:foo.sync -> v-model:foo\n        if (dirName === 'bind' && arg) {\n            if (modifiers.includes('sync') &&\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\n                dirName = 'model';\n                modifiers.splice(modifiers.indexOf('sync'), 1);\n            }\n            if ((process.env.NODE_ENV !== 'production') && modifiers.includes('prop')) {\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */, context, loc);\n            }\n        }\n        return {\n            type: 7 /* NodeTypes.DIRECTIVE */,\n            name: dirName,\n            exp: value && {\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n                content: value.content,\n                isStatic: false,\n                // Treat as non-constant by default. This can be potentially set to\n                // other values by `transformExpression` to make it eligible for hoisting.\n                constType: 0 /* ConstantTypes.NOT_CONSTANT */,\n                loc: value.loc\n            },\n            arg,\n            modifiers,\n            loc\n        };\n    }\n    // missing directive name or illegal directive name\n    if (!context.inVPre && startsWith(name, 'v-')) {\n        emitError(context, 26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */);\n    }\n    return {\n        type: 6 /* NodeTypes.ATTRIBUTE */,\n        name,\n        value: value && {\n            type: 2 /* NodeTypes.TEXT */,\n            content: value.content,\n            loc: value.loc\n        },\n        loc\n    };\n}\nfunction parseAttributeValue(context) {\n    const start = getCursor(context);\n    let content;\n    const quote = context.source[0];\n    const isQuoted = quote === `\"` || quote === `'`;\n    if (isQuoted) {\n        // Quoted value.\n        advanceBy(context, 1);\n        const endIndex = context.source.indexOf(quote);\n        if (endIndex === -1) {\n            content = parseTextData(context, context.source.length, 4 /* TextModes.ATTRIBUTE_VALUE */);\n        }\n        else {\n            content = parseTextData(context, endIndex, 4 /* TextModes.ATTRIBUTE_VALUE */);\n            advanceBy(context, 1);\n        }\n    }\n    else {\n        // Unquoted\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\n        if (!match) {\n            return undefined;\n        }\n        const unexpectedChars = /[\"'<=`]/g;\n        let m;\n        while ((m = unexpectedChars.exec(match[0]))) {\n            emitError(context, 18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\n        }\n        content = parseTextData(context, match[0].length, 4 /* TextModes.ATTRIBUTE_VALUE */);\n    }\n    return { content, isQuoted, loc: getSelection(context, start) };\n}\nfunction parseInterpolation(context, mode) {\n    const [open, close] = context.options.delimiters;\n    const closeIndex = context.source.indexOf(close, open.length);\n    if (closeIndex === -1) {\n        emitError(context, 25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */);\n        return undefined;\n    }\n    const start = getCursor(context);\n    advanceBy(context, open.length);\n    const innerStart = getCursor(context);\n    const innerEnd = getCursor(context);\n    const rawContentLength = closeIndex - open.length;\n    const rawContent = context.source.slice(0, rawContentLength);\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\n    const content = preTrimContent.trim();\n    const startOffset = preTrimContent.indexOf(content);\n    if (startOffset > 0) {\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\n    }\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\n    advanceBy(context, close.length);\n    return {\n        type: 5 /* NodeTypes.INTERPOLATION */,\n        content: {\n            type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n            isStatic: false,\n            // Set `isConstant` to false by default and will decide in transformExpression\n            constType: 0 /* ConstantTypes.NOT_CONSTANT */,\n            content,\n            loc: getSelection(context, innerStart, innerEnd)\n        },\n        loc: getSelection(context, start)\n    };\n}\nfunction parseText(context, mode) {\n    const endTokens = mode === 3 /* TextModes.CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\n    let endIndex = context.source.length;\n    for (let i = 0; i < endTokens.length; i++) {\n        const index = context.source.indexOf(endTokens[i], 1);\n        if (index !== -1 && endIndex > index) {\n            endIndex = index;\n        }\n    }\n    const start = getCursor(context);\n    const content = parseTextData(context, endIndex, mode);\n    return {\n        type: 2 /* NodeTypes.TEXT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\n/**\n * Get text data with a given length from the current location.\n * This translates HTML entities in the text data.\n */\nfunction parseTextData(context, length, mode) {\n    const rawText = context.source.slice(0, length);\n    advanceBy(context, length);\n    if (mode === 2 /* TextModes.RAWTEXT */ ||\n        mode === 3 /* TextModes.CDATA */ ||\n        !rawText.includes('&')) {\n        return rawText;\n    }\n    else {\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\n        return context.options.decodeEntities(rawText, mode === 4 /* TextModes.ATTRIBUTE_VALUE */);\n    }\n}\nfunction getCursor(context) {\n    const { column, line, offset } = context;\n    return { column, line, offset };\n}\nfunction getSelection(context, start, end) {\n    end = end || getCursor(context);\n    return {\n        start,\n        end,\n        source: context.originalSource.slice(start.offset, end.offset)\n    };\n}\nfunction last(xs) {\n    return xs[xs.length - 1];\n}\nfunction startsWith(source, searchString) {\n    return source.startsWith(searchString);\n}\nfunction advanceBy(context, numberOfCharacters) {\n    const { source } = context;\n    advancePositionWithMutation(context, source, numberOfCharacters);\n    context.source = source.slice(numberOfCharacters);\n}\nfunction advanceSpaces(context) {\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\n    if (match) {\n        advanceBy(context, match[0].length);\n    }\n}\nfunction getNewPosition(context, start, numberOfCharacters) {\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\n}\nfunction emitError(context, code, offset, loc = getCursor(context)) {\n    if (offset) {\n        loc.offset += offset;\n        loc.column += offset;\n    }\n    context.options.onError(createCompilerError(code, {\n        start: loc,\n        end: loc,\n        source: ''\n    }));\n}\nfunction isEnd(context, mode, ancestors) {\n    const s = context.source;\n    switch (mode) {\n        case 0 /* TextModes.DATA */:\n            if (startsWith(s, '</')) {\n                // TODO: probably bad performance\n                for (let i = ancestors.length - 1; i >= 0; --i) {\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n                        return true;\n                    }\n                }\n            }\n            break;\n        case 1 /* TextModes.RCDATA */:\n        case 2 /* TextModes.RAWTEXT */: {\n            const parent = last(ancestors);\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\n                return true;\n            }\n            break;\n        }\n        case 3 /* TextModes.CDATA */:\n            if (startsWith(s, ']]>')) {\n                return true;\n            }\n            break;\n    }\n    return !s;\n}\nfunction startsWithEndTagOpen(source, tag) {\n    return (startsWith(source, '</') &&\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\n}\n\nfunction hoistStatic(root, context) {\n    walk(root, context, \n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0]));\n}\nfunction isSingleElementRoot(root, child) {\n    const { children } = root;\n    return (children.length === 1 &&\n        child.type === 1 /* NodeTypes.ELEMENT */ &&\n        !isSlotOutlet(child));\n}\nfunction walk(node, context, doNotHoistNode = false) {\n    const { children } = node;\n    const originalCount = children.length;\n    let hoistedCount = 0;\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        // only plain elements & text calls are eligible for hoisting.\n        if (child.type === 1 /* NodeTypes.ELEMENT */ &&\n            child.tagType === 0 /* ElementTypes.ELEMENT */) {\n            const constantType = doNotHoistNode\n                ? 0 /* ConstantTypes.NOT_CONSTANT */\n                : getConstantType(child, context);\n            if (constantType > 0 /* ConstantTypes.NOT_CONSTANT */) {\n                if (constantType >= 2 /* ConstantTypes.CAN_HOIST */) {\n                    child.codegenNode.patchFlag =\n                        -1 /* PatchFlags.HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\n                    child.codegenNode = context.hoist(child.codegenNode);\n                    hoistedCount++;\n                    continue;\n                }\n            }\n            else {\n                // node may contain dynamic children, but its props may be eligible for\n                // hoisting.\n                const codegenNode = child.codegenNode;\n                if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n                    const flag = getPatchFlag(codegenNode);\n                    if ((!flag ||\n                        flag === 512 /* PatchFlags.NEED_PATCH */ ||\n                        flag === 1 /* PatchFlags.TEXT */) &&\n                        getGeneratedPropsConstantType(child, context) >=\n                            2 /* ConstantTypes.CAN_HOIST */) {\n                        const props = getNodeProps(child);\n                        if (props) {\n                            codegenNode.props = context.hoist(props);\n                        }\n                    }\n                    if (codegenNode.dynamicProps) {\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n                    }\n                }\n            }\n        }\n        // walk further\n        if (child.type === 1 /* NodeTypes.ELEMENT */) {\n            const isComponent = child.tagType === 1 /* ElementTypes.COMPONENT */;\n            if (isComponent) {\n                context.scopes.vSlot++;\n            }\n            walk(child, context);\n            if (isComponent) {\n                context.scopes.vSlot--;\n            }\n        }\n        else if (child.type === 11 /* NodeTypes.FOR */) {\n            // Do not hoist v-for single child because it has to be a block\n            walk(child, context, child.children.length === 1);\n        }\n        else if (child.type === 9 /* NodeTypes.IF */) {\n            for (let i = 0; i < child.branches.length; i++) {\n                // Do not hoist v-if single child because it has to be a block\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\n            }\n        }\n    }\n    if (hoistedCount && context.transformHoist) {\n        context.transformHoist(children, context, node);\n    }\n    // all children were hoisted - the entire children array is hoistable.\n    if (hoistedCount &&\n        hoistedCount === originalCount &&\n        node.type === 1 /* NodeTypes.ELEMENT */ &&\n        node.tagType === 0 /* ElementTypes.ELEMENT */ &&\n        node.codegenNode &&\n        node.codegenNode.type === 13 /* NodeTypes.VNODE_CALL */ &&\n        isArray(node.codegenNode.children)) {\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\n    }\n}\nfunction getConstantType(node, context) {\n    const { constantCache } = context;\n    switch (node.type) {\n        case 1 /* NodeTypes.ELEMENT */:\n            if (node.tagType !== 0 /* ElementTypes.ELEMENT */) {\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n            const cached = constantCache.get(node);\n            if (cached !== undefined) {\n                return cached;\n            }\n            const codegenNode = node.codegenNode;\n            if (codegenNode.type !== 13 /* NodeTypes.VNODE_CALL */) {\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n            if (codegenNode.isBlock &&\n                node.tag !== 'svg' &&\n                node.tag !== 'foreignObject') {\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n            const flag = getPatchFlag(codegenNode);\n            if (!flag) {\n                let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n                // Element itself has no patch flag. However we still need to check:\n                // 1. Even for a node with no patch flag, it is possible for it to contain\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\n                // injected keys or cached event handlers. Therefore we need to always\n                // check the codegenNode's props to be sure.\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\n                if (generatedPropsType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                    constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\n                }\n                if (generatedPropsType < returnType) {\n                    returnType = generatedPropsType;\n                }\n                // 2. its children.\n                for (let i = 0; i < node.children.length; i++) {\n                    const childType = getConstantType(node.children[i], context);\n                    if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                        constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                        return 0 /* ConstantTypes.NOT_CONSTANT */;\n                    }\n                    if (childType < returnType) {\n                        returnType = childType;\n                    }\n                }\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n                // type, check if any of the props can cause the type to be lowered\n                // we can skip can_patch because it's guaranteed by the absence of a\n                // patchFlag.\n                if (returnType > 1 /* ConstantTypes.CAN_SKIP_PATCH */) {\n                    for (let i = 0; i < node.props.length; i++) {\n                        const p = node.props[i];\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && p.exp) {\n                            const expType = getConstantType(p.exp, context);\n                            if (expType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                                return 0 /* ConstantTypes.NOT_CONSTANT */;\n                            }\n                            if (expType < returnType) {\n                                returnType = expType;\n                            }\n                        }\n                    }\n                }\n                // only svg/foreignObject could be block here, however if they are\n                // static then they don't need to be blocks since there will be no\n                // nested updates.\n                if (codegenNode.isBlock) {\n                    // except set custom directives.\n                    for (let i = 0; i < node.props.length; i++) {\n                        const p = node.props[i];\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\n                            constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                            return 0 /* ConstantTypes.NOT_CONSTANT */;\n                        }\n                    }\n                    context.removeHelper(OPEN_BLOCK);\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\n                    codegenNode.isBlock = false;\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n                }\n                constantCache.set(node, returnType);\n                return returnType;\n            }\n            else {\n                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n        case 2 /* NodeTypes.TEXT */:\n        case 3 /* NodeTypes.COMMENT */:\n            return 3 /* ConstantTypes.CAN_STRINGIFY */;\n        case 9 /* NodeTypes.IF */:\n        case 11 /* NodeTypes.FOR */:\n        case 10 /* NodeTypes.IF_BRANCH */:\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\n        case 5 /* NodeTypes.INTERPOLATION */:\n        case 12 /* NodeTypes.TEXT_CALL */:\n            return getConstantType(node.content, context);\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n            return node.constType;\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n            let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (isString(child) || isSymbol(child)) {\n                    continue;\n                }\n                const childType = getConstantType(child, context);\n                if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\n                }\n                else if (childType < returnType) {\n                    returnType = childType;\n                }\n            }\n            return returnType;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) ;\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\n    }\n}\nconst allowHoistedHelperSet = new Set([\n    NORMALIZE_CLASS,\n    NORMALIZE_STYLE,\n    NORMALIZE_PROPS,\n    GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n    if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ &&\n        !isString(value.callee) &&\n        allowHoistedHelperSet.has(value.callee)) {\n        const arg = value.arguments[0];\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n            return getConstantType(arg, context);\n        }\n        else if (arg.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n            return getConstantTypeOfHelperCall(arg, context);\n        }\n    }\n    return 0 /* ConstantTypes.NOT_CONSTANT */;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n    let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n    const props = getNodeProps(node);\n    if (props && props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n        const { properties } = props;\n        for (let i = 0; i < properties.length; i++) {\n            const { key, value } = properties[i];\n            const keyType = getConstantType(key, context);\n            if (keyType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                return keyType;\n            }\n            if (keyType < returnType) {\n                returnType = keyType;\n            }\n            let valueType;\n            if (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n                valueType = getConstantType(value, context);\n            }\n            else if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n                // some helper calls can be hoisted,\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n                // in this case we need to respect the ConstantType of the helper's arguments\n                valueType = getConstantTypeOfHelperCall(value, context);\n            }\n            else {\n                valueType = 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n            if (valueType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                return valueType;\n            }\n            if (valueType < returnType) {\n                returnType = valueType;\n            }\n        }\n    }\n    return returnType;\n}\nfunction getNodeProps(node) {\n    const codegenNode = node.codegenNode;\n    if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n        return codegenNode.props;\n    }\n}\nfunction getPatchFlag(node) {\n    const flag = node.patchFlag;\n    return flag ? parseInt(flag, 10) : undefined;\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\n    const context = {\n        // options\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\n        prefixIdentifiers,\n        hoistStatic,\n        cacheHandlers,\n        nodeTransforms,\n        directiveTransforms,\n        transformHoist,\n        isBuiltInComponent,\n        isCustomElement,\n        expressionPlugins,\n        scopeId,\n        slotted,\n        ssr,\n        inSSR,\n        ssrCssVars,\n        bindingMetadata,\n        inline,\n        isTS,\n        onError,\n        onWarn,\n        compatConfig,\n        // state\n        root,\n        helpers: new Map(),\n        components: new Set(),\n        directives: new Set(),\n        hoists: [],\n        imports: [],\n        constantCache: new Map(),\n        temps: 0,\n        cached: 0,\n        identifiers: Object.create(null),\n        scopes: {\n            vFor: 0,\n            vSlot: 0,\n            vPre: 0,\n            vOnce: 0\n        },\n        parent: null,\n        currentNode: root,\n        childIndex: 0,\n        inVOnce: false,\n        // methods\n        helper(name) {\n            const count = context.helpers.get(name) || 0;\n            context.helpers.set(name, count + 1);\n            return name;\n        },\n        removeHelper(name) {\n            const count = context.helpers.get(name);\n            if (count) {\n                const currentCount = count - 1;\n                if (!currentCount) {\n                    context.helpers.delete(name);\n                }\n                else {\n                    context.helpers.set(name, currentCount);\n                }\n            }\n        },\n        helperString(name) {\n            return `_${helperNameMap[context.helper(name)]}`;\n        },\n        replaceNode(node) {\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (!context.currentNode) {\n                    throw new Error(`Node being replaced is already removed.`);\n                }\n                if (!context.parent) {\n                    throw new Error(`Cannot replace root node.`);\n                }\n            }\n            context.parent.children[context.childIndex] = context.currentNode = node;\n        },\n        removeNode(node) {\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\n                throw new Error(`Cannot remove root node.`);\n            }\n            const list = context.parent.children;\n            const removalIndex = node\n                ? list.indexOf(node)\n                : context.currentNode\n                    ? context.childIndex\n                    : -1;\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\n                throw new Error(`node being removed is not a child of current parent`);\n            }\n            if (!node || node === context.currentNode) {\n                // current node removed\n                context.currentNode = null;\n                context.onNodeRemoved();\n            }\n            else {\n                // sibling node removed\n                if (context.childIndex > removalIndex) {\n                    context.childIndex--;\n                    context.onNodeRemoved();\n                }\n            }\n            context.parent.children.splice(removalIndex, 1);\n        },\n        onNodeRemoved: () => { },\n        addIdentifiers(exp) {\n        },\n        removeIdentifiers(exp) {\n        },\n        hoist(exp) {\n            if (isString(exp))\n                exp = createSimpleExpression(exp);\n            context.hoists.push(exp);\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* ConstantTypes.CAN_HOIST */);\n            identifier.hoisted = exp;\n            return identifier;\n        },\n        cache(exp, isVNode = false) {\n            return createCacheExpression(context.cached++, exp, isVNode);\n        }\n    };\n    {\n        context.filters = new Set();\n    }\n    return context;\n}\nfunction transform(root, options) {\n    const context = createTransformContext(root, options);\n    traverseNode(root, context);\n    if (options.hoistStatic) {\n        hoistStatic(root, context);\n    }\n    if (!options.ssr) {\n        createRootCodegen(root, context);\n    }\n    // finalize meta information\n    root.helpers = [...context.helpers.keys()];\n    root.components = [...context.components];\n    root.directives = [...context.directives];\n    root.imports = context.imports;\n    root.hoists = context.hoists;\n    root.temps = context.temps;\n    root.cached = context.cached;\n    {\n        root.filters = [...context.filters];\n    }\n}\nfunction createRootCodegen(root, context) {\n    const { helper } = context;\n    const { children } = root;\n    if (children.length === 1) {\n        const child = children[0];\n        // if the single child is an element, turn it into a block.\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\n            // single element root is never hoisted so codegenNode will never be\n            // SimpleExpressionNode\n            const codegenNode = child.codegenNode;\n            if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n                makeBlock(codegenNode, context);\n            }\n            root.codegenNode = codegenNode;\n        }\n        else {\n            // - single <slot/>, IfNode, ForNode: already blocks.\n            // - single text node: always patched.\n            // root codegen falls through via genNode()\n            root.codegenNode = child;\n        }\n    }\n    else if (children.length > 1) {\n        // root has multiple nodes - return a fragment block.\n        let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\n        let patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\n        // check if the fragment actually contains a single valid child with\n        // the rest being comments\n        if ((process.env.NODE_ENV !== 'production') &&\n            children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\n            patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\n            patchFlagText += `, ${PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\n        }\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\n    }\n    else ;\n}\nfunction traverseChildren(parent, context) {\n    let i = 0;\n    const nodeRemoved = () => {\n        i--;\n    };\n    for (; i < parent.children.length; i++) {\n        const child = parent.children[i];\n        if (isString(child))\n            continue;\n        context.parent = parent;\n        context.childIndex = i;\n        context.onNodeRemoved = nodeRemoved;\n        traverseNode(child, context);\n    }\n}\nfunction traverseNode(node, context) {\n    context.currentNode = node;\n    // apply transform plugins\n    const { nodeTransforms } = context;\n    const exitFns = [];\n    for (let i = 0; i < nodeTransforms.length; i++) {\n        const onExit = nodeTransforms[i](node, context);\n        if (onExit) {\n            if (isArray(onExit)) {\n                exitFns.push(...onExit);\n            }\n            else {\n                exitFns.push(onExit);\n            }\n        }\n        if (!context.currentNode) {\n            // node was removed\n            return;\n        }\n        else {\n            // node may have been replaced\n            node = context.currentNode;\n        }\n    }\n    switch (node.type) {\n        case 3 /* NodeTypes.COMMENT */:\n            if (!context.ssr) {\n                // inject import for the Comment symbol, which is needed for creating\n                // comment nodes with `createVNode`\n                context.helper(CREATE_COMMENT);\n            }\n            break;\n        case 5 /* NodeTypes.INTERPOLATION */:\n            // no need to traverse, but we need to inject toString helper\n            if (!context.ssr) {\n                context.helper(TO_DISPLAY_STRING);\n            }\n            break;\n        // for container types, further traverse downwards\n        case 9 /* NodeTypes.IF */:\n            for (let i = 0; i < node.branches.length; i++) {\n                traverseNode(node.branches[i], context);\n            }\n            break;\n        case 10 /* NodeTypes.IF_BRANCH */:\n        case 11 /* NodeTypes.FOR */:\n        case 1 /* NodeTypes.ELEMENT */:\n        case 0 /* NodeTypes.ROOT */:\n            traverseChildren(node, context);\n            break;\n    }\n    // exit transforms\n    context.currentNode = node;\n    let i = exitFns.length;\n    while (i--) {\n        exitFns[i]();\n    }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n    const matches = isString(name)\n        ? (n) => n === name\n        : (n) => name.test(n);\n    return (node, context) => {\n        if (node.type === 1 /* NodeTypes.ELEMENT */) {\n            const { props } = node;\n            // structural directive transforms are not concerned with slots\n            // as they are handled separately in vSlot.ts\n            if (node.tagType === 3 /* ElementTypes.TEMPLATE */ && props.some(isVSlot)) {\n                return;\n            }\n            const exitFns = [];\n            for (let i = 0; i < props.length; i++) {\n                const prop = props[i];\n                if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && matches(prop.name)) {\n                    // structural directives are removed to avoid infinite recursion\n                    // also we remove them *before* applying so that it can further\n                    // traverse itself in case it moves the node around\n                    props.splice(i, 1);\n                    i--;\n                    const onExit = fn(node, prop, context);\n                    if (onExit)\n                        exitFns.push(onExit);\n                }\n            }\n            return exitFns;\n        }\n    };\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\n    const context = {\n        mode,\n        prefixIdentifiers,\n        sourceMap,\n        filename,\n        scopeId,\n        optimizeImports,\n        runtimeGlobalName,\n        runtimeModuleName,\n        ssrRuntimeModuleName,\n        ssr,\n        isTS,\n        inSSR,\n        source: ast.loc.source,\n        code: ``,\n        column: 1,\n        line: 1,\n        offset: 0,\n        indentLevel: 0,\n        pure: false,\n        map: undefined,\n        helper(key) {\n            return `_${helperNameMap[key]}`;\n        },\n        push(code, node) {\n            context.code += code;\n        },\n        indent() {\n            newline(++context.indentLevel);\n        },\n        deindent(withoutNewLine = false) {\n            if (withoutNewLine) {\n                --context.indentLevel;\n            }\n            else {\n                newline(--context.indentLevel);\n            }\n        },\n        newline() {\n            newline(context.indentLevel);\n        }\n    };\n    function newline(n) {\n        context.push('\\n' + `  `.repeat(n));\n    }\n    return context;\n}\nfunction generate(ast, options = {}) {\n    const context = createCodegenContext(ast, options);\n    if (options.onContextCreated)\n        options.onContextCreated(context);\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\n    const hasHelpers = ast.helpers.length > 0;\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\n    // preambles\n    // in setup() inline mode, the preamble is generated in a sub context\n    // and returned separately.\n    const preambleContext = context;\n    {\n        genFunctionPreamble(ast, preambleContext);\n    }\n    // enter render function\n    const functionName = ssr ? `ssrRender` : `render`;\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\n    const signature = args.join(', ');\n    {\n        push(`function ${functionName}(${signature}) {`);\n    }\n    indent();\n    if (useWithBlock) {\n        push(`with (_ctx) {`);\n        indent();\n        // function mode const declarations should be inside with block\n        // also they should be renamed to avoid collision with user properties\n        if (hasHelpers) {\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = _Vue`);\n            push(`\\n`);\n            newline();\n        }\n    }\n    // generate asset resolution statements\n    if (ast.components.length) {\n        genAssets(ast.components, 'component', context);\n        if (ast.directives.length || ast.temps > 0) {\n            newline();\n        }\n    }\n    if (ast.directives.length) {\n        genAssets(ast.directives, 'directive', context);\n        if (ast.temps > 0) {\n            newline();\n        }\n    }\n    if (ast.filters && ast.filters.length) {\n        newline();\n        genAssets(ast.filters, 'filter', context);\n        newline();\n    }\n    if (ast.temps > 0) {\n        push(`let `);\n        for (let i = 0; i < ast.temps; i++) {\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\n        }\n    }\n    if (ast.components.length || ast.directives.length || ast.temps) {\n        push(`\\n`);\n        newline();\n    }\n    // generate the VNode tree expression\n    if (!ssr) {\n        push(`return `);\n    }\n    if (ast.codegenNode) {\n        genNode(ast.codegenNode, context);\n    }\n    else {\n        push(`null`);\n    }\n    if (useWithBlock) {\n        deindent();\n        push(`}`);\n    }\n    deindent();\n    push(`}`);\n    return {\n        ast,\n        code: context.code,\n        preamble: ``,\n        // SourceMapGenerator does have toJSON() method but it's not in the types\n        map: context.map ? context.map.toJSON() : undefined\n    };\n}\nfunction genFunctionPreamble(ast, context) {\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\n    const VueBinding = runtimeGlobalName;\n    // Generate const declaration for helpers\n    // In prefix mode, we place the const declaration at top so it's done\n    // only once; But if we not prefixing, we place the declaration inside the\n    // with block so it doesn't incur the `in` check cost for every helper access.\n    if (ast.helpers.length > 0) {\n        {\n            // \"with\" mode.\n            // save Vue in a separate variable to avoid collision\n            push(`const _Vue = ${VueBinding}\\n`);\n            // in \"with\" mode, helpers are declared inside the with block to avoid\n            // has check cost, but hoists are lifted out of the function - we need\n            // to provide the helper here.\n            if (ast.hoists.length) {\n                const staticHelpers = [\n                    CREATE_VNODE,\n                    CREATE_ELEMENT_VNODE,\n                    CREATE_COMMENT,\n                    CREATE_TEXT,\n                    CREATE_STATIC\n                ]\n                    .filter(helper => ast.helpers.includes(helper))\n                    .map(aliasHelper)\n                    .join(', ');\n                push(`const { ${staticHelpers} } = _Vue\\n`);\n            }\n        }\n    }\n    genHoists(ast.hoists, context);\n    newline();\n    push(`return `);\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n    const resolver = helper(type === 'filter'\n        ? RESOLVE_FILTER\n        : type === 'component'\n            ? RESOLVE_COMPONENT\n            : RESOLVE_DIRECTIVE);\n    for (let i = 0; i < assets.length; i++) {\n        let id = assets[i];\n        // potential component implicit self-reference inferred from SFC filename\n        const maybeSelfReference = id.endsWith('__self');\n        if (maybeSelfReference) {\n            id = id.slice(0, -6);\n        }\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\n        if (i < assets.length - 1) {\n            newline();\n        }\n    }\n}\nfunction genHoists(hoists, context) {\n    if (!hoists.length) {\n        return;\n    }\n    context.pure = true;\n    const { push, newline, helper, scopeId, mode } = context;\n    newline();\n    for (let i = 0; i < hoists.length; i++) {\n        const exp = hoists[i];\n        if (exp) {\n            push(`const _hoisted_${i + 1} = ${``}`);\n            genNode(exp, context);\n            newline();\n        }\n    }\n    context.pure = false;\n}\nfunction isText$1(n) {\n    return (isString(n) ||\n        n.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n        n.type === 2 /* NodeTypes.TEXT */ ||\n        n.type === 5 /* NodeTypes.INTERPOLATION */ ||\n        n.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */);\n}\nfunction genNodeListAsArray(nodes, context) {\n    const multilines = nodes.length > 3 ||\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\n    context.push(`[`);\n    multilines && context.indent();\n    genNodeList(nodes, context, multilines);\n    multilines && context.deindent();\n    context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n    const { push, newline } = context;\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (isString(node)) {\n            push(node);\n        }\n        else if (isArray(node)) {\n            genNodeListAsArray(node, context);\n        }\n        else {\n            genNode(node, context);\n        }\n        if (i < nodes.length - 1) {\n            if (multilines) {\n                comma && push(',');\n                newline();\n            }\n            else {\n                comma && push(', ');\n            }\n        }\n    }\n}\nfunction genNode(node, context) {\n    if (isString(node)) {\n        context.push(node);\n        return;\n    }\n    if (isSymbol(node)) {\n        context.push(context.helper(node));\n        return;\n    }\n    switch (node.type) {\n        case 1 /* NodeTypes.ELEMENT */:\n        case 9 /* NodeTypes.IF */:\n        case 11 /* NodeTypes.FOR */:\n            (process.env.NODE_ENV !== 'production') &&\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\n                    `Apply appropriate transforms first.`);\n            genNode(node.codegenNode, context);\n            break;\n        case 2 /* NodeTypes.TEXT */:\n            genText(node, context);\n            break;\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n            genExpression(node, context);\n            break;\n        case 5 /* NodeTypes.INTERPOLATION */:\n            genInterpolation(node, context);\n            break;\n        case 12 /* NodeTypes.TEXT_CALL */:\n            genNode(node.codegenNode, context);\n            break;\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n            genCompoundExpression(node, context);\n            break;\n        case 3 /* NodeTypes.COMMENT */:\n            genComment(node, context);\n            break;\n        case 13 /* NodeTypes.VNODE_CALL */:\n            genVNodeCall(node, context);\n            break;\n        case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\n            genCallExpression(node, context);\n            break;\n        case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\n            genObjectExpression(node, context);\n            break;\n        case 17 /* NodeTypes.JS_ARRAY_EXPRESSION */:\n            genArrayExpression(node, context);\n            break;\n        case 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */:\n            genFunctionExpression(node, context);\n            break;\n        case 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */:\n            genConditionalExpression(node, context);\n            break;\n        case 20 /* NodeTypes.JS_CACHE_EXPRESSION */:\n            genCacheExpression(node, context);\n            break;\n        case 21 /* NodeTypes.JS_BLOCK_STATEMENT */:\n            genNodeList(node.body, context, true, false);\n            break;\n        // SSR only types\n        case 22 /* NodeTypes.JS_TEMPLATE_LITERAL */:\n            break;\n        case 23 /* NodeTypes.JS_IF_STATEMENT */:\n            break;\n        case 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */:\n            break;\n        case 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */:\n            break;\n        case 26 /* NodeTypes.JS_RETURN_STATEMENT */:\n            break;\n        /* istanbul ignore next */\n        case 10 /* NodeTypes.IF_BRANCH */:\n            // noop\n            break;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                assert(false, `unhandled codegen node type: ${node.type}`);\n                // make sure we exhaust all possible types\n                const exhaustiveCheck = node;\n                return exhaustiveCheck;\n            }\n    }\n}\nfunction genText(node, context) {\n    context.push(JSON.stringify(node.content), node);\n}\nfunction genExpression(node, context) {\n    const { content, isStatic } = node;\n    context.push(isStatic ? JSON.stringify(content) : content, node);\n}\nfunction genInterpolation(node, context) {\n    const { push, helper, pure } = context;\n    if (pure)\n        push(PURE_ANNOTATION);\n    push(`${helper(TO_DISPLAY_STRING)}(`);\n    genNode(node.content, context);\n    push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n    for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (isString(child)) {\n            context.push(child);\n        }\n        else {\n            genNode(child, context);\n        }\n    }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n    const { push } = context;\n    if (node.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n        push(`[`);\n        genCompoundExpression(node, context);\n        push(`]`);\n    }\n    else if (node.isStatic) {\n        // only quote keys if necessary\n        const text = isSimpleIdentifier(node.content)\n            ? node.content\n            : JSON.stringify(node.content);\n        push(text, node);\n    }\n    else {\n        push(`[${node.content}]`, node);\n    }\n}\nfunction genComment(node, context) {\n    const { push, helper, pure } = context;\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\n}\nfunction genVNodeCall(node, context) {\n    const { push, helper, pure } = context;\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\n    if (directives) {\n        push(helper(WITH_DIRECTIVES) + `(`);\n    }\n    if (isBlock) {\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n    }\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    const callHelper = isBlock\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\n        : getVNodeHelper(context.inSSR, isComponent);\n    push(helper(callHelper) + `(`, node);\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\n    push(`)`);\n    if (isBlock) {\n        push(`)`);\n    }\n    if (directives) {\n        push(`, `);\n        genNode(directives, context);\n        push(`)`);\n    }\n}\nfunction genNullableArgs(args) {\n    let i = args.length;\n    while (i--) {\n        if (args[i] != null)\n            break;\n    }\n    return args.slice(0, i + 1).map(arg => arg || `null`);\n}\n// JavaScript\nfunction genCallExpression(node, context) {\n    const { push, helper, pure } = context;\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    push(callee + `(`, node);\n    genNodeList(node.arguments, context);\n    push(`)`);\n}\nfunction genObjectExpression(node, context) {\n    const { push, indent, deindent, newline } = context;\n    const { properties } = node;\n    if (!properties.length) {\n        push(`{}`, node);\n        return;\n    }\n    const multilines = properties.length > 1 ||\n        (((process.env.NODE_ENV !== 'production')) &&\n            properties.some(p => p.value.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */));\n    push(multilines ? `{` : `{ `);\n    multilines && indent();\n    for (let i = 0; i < properties.length; i++) {\n        const { key, value } = properties[i];\n        // key\n        genExpressionAsPropertyKey(key, context);\n        push(`: `);\n        // value\n        genNode(value, context);\n        if (i < properties.length - 1) {\n            // will only reach this if it's multilines\n            push(`,`);\n            newline();\n        }\n    }\n    multilines && deindent();\n    push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n    genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n    const { push, indent, deindent } = context;\n    const { params, returns, body, newline, isSlot } = node;\n    if (isSlot) {\n        // wrap slot functions with owner context\n        push(`_${helperNameMap[WITH_CTX]}(`);\n    }\n    push(`(`, node);\n    if (isArray(params)) {\n        genNodeList(params, context);\n    }\n    else if (params) {\n        genNode(params, context);\n    }\n    push(`) => `);\n    if (newline || body) {\n        push(`{`);\n        indent();\n    }\n    if (returns) {\n        if (newline) {\n            push(`return `);\n        }\n        if (isArray(returns)) {\n            genNodeListAsArray(returns, context);\n        }\n        else {\n            genNode(returns, context);\n        }\n    }\n    else if (body) {\n        genNode(body, context);\n    }\n    if (newline || body) {\n        deindent();\n        push(`}`);\n    }\n    if (isSlot) {\n        if (node.isNonScopedSlot) {\n            push(`, undefined, true`);\n        }\n        push(`)`);\n    }\n}\nfunction genConditionalExpression(node, context) {\n    const { test, consequent, alternate, newline: needNewline } = node;\n    const { push, indent, deindent, newline } = context;\n    if (test.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        const needsParens = !isSimpleIdentifier(test.content);\n        needsParens && push(`(`);\n        genExpression(test, context);\n        needsParens && push(`)`);\n    }\n    else {\n        push(`(`);\n        genNode(test, context);\n        push(`)`);\n    }\n    needNewline && indent();\n    context.indentLevel++;\n    needNewline || push(` `);\n    push(`? `);\n    genNode(consequent, context);\n    context.indentLevel--;\n    needNewline && newline();\n    needNewline || push(` `);\n    push(`: `);\n    const isNested = alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */;\n    if (!isNested) {\n        context.indentLevel++;\n    }\n    genNode(alternate, context);\n    if (!isNested) {\n        context.indentLevel--;\n    }\n    needNewline && deindent(true /* without newline */);\n}\nfunction genCacheExpression(node, context) {\n    const { push, helper, indent, deindent, newline } = context;\n    push(`_cache[${node.index}] || (`);\n    if (node.isVNode) {\n        indent();\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n        newline();\n    }\n    push(`_cache[${node.index}] = `);\n    genNode(node.value, context);\n    if (node.isVNode) {\n        push(`,`);\n        newline();\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n        newline();\n        push(`_cache[${node.index}]`);\n        deindent();\n    }\n    push(`)`);\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\n    {\n        return;\n    }\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n    {\n        return false;\n    }\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n    if (parent &&\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\n        let i = parentStack.length;\n        while (i--) {\n            const p = parentStack[i];\n            if (p.type === 'AssignmentExpression') {\n                return true;\n            }\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n                break;\n            }\n        }\n    }\n    return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n    for (const p of node.params) {\n        for (const id of extractIdentifiers(p)) {\n            onIdent(id);\n        }\n    }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n    for (const stmt of block.body) {\n        if (stmt.type === 'VariableDeclaration') {\n            if (stmt.declare)\n                continue;\n            for (const decl of stmt.declarations) {\n                for (const id of extractIdentifiers(decl.id)) {\n                    onIdent(id);\n                }\n            }\n        }\n        else if (stmt.type === 'FunctionDeclaration' ||\n            stmt.type === 'ClassDeclaration') {\n            if (stmt.declare || !stmt.id)\n                continue;\n            onIdent(stmt.id);\n        }\n    }\n}\nfunction extractIdentifiers(param, nodes = []) {\n    switch (param.type) {\n        case 'Identifier':\n            nodes.push(param);\n            break;\n        case 'MemberExpression':\n            let object = param;\n            while (object.type === 'MemberExpression') {\n                object = object.object;\n            }\n            nodes.push(object);\n            break;\n        case 'ObjectPattern':\n            for (const prop of param.properties) {\n                if (prop.type === 'RestElement') {\n                    extractIdentifiers(prop.argument, nodes);\n                }\n                else {\n                    extractIdentifiers(prop.value, nodes);\n                }\n            }\n            break;\n        case 'ArrayPattern':\n            param.elements.forEach(element => {\n                if (element)\n                    extractIdentifiers(element, nodes);\n            });\n            break;\n        case 'RestElement':\n            extractIdentifiers(param.argument, nodes);\n            break;\n        case 'AssignmentPattern':\n            extractIdentifiers(param.left, nodes);\n            break;\n    }\n    return nodes;\n}\nconst isFunctionType = (node) => {\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node &&\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\n    !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\n        .split(',')\n        .join('\\\\b|\\\\b') +\n    '\\\\b');\n// strip strings in expressions\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n/**\n * Validate a non-prefixed expression.\n * This is only called when using the in-browser runtime compiler since it\n * doesn't prefix expressions.\n */\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\n    const exp = node.content;\n    // empty expressions are validated per-directive since some directives\n    // do allow empty expressions.\n    if (!exp.trim()) {\n        return;\n    }\n    try {\n        new Function(asRawStatements\n            ? ` ${exp} `\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\n    }\n    catch (e) {\n        let message = e.message;\n        const keywordMatch = exp\n            .replace(stripStringRE, '')\n            .match(prohibitedKeywordRE);\n        if (keywordMatch) {\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\n        }\n        context.onError(createCompilerError(45 /* ErrorCodes.X_INVALID_EXPRESSION */, node.loc, undefined, message));\n    }\n}\n\nconst transformExpression = (node, context) => {\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\n        node.content = processExpression(node.content, context);\n    }\n    else if (node.type === 1 /* NodeTypes.ELEMENT */) {\n        // handle directives on element\n        for (let i = 0; i < node.props.length; i++) {\n            const dir = node.props[i];\n            // do not process for v-on & v-for since they are special handled\n            if (dir.type === 7 /* NodeTypes.DIRECTIVE */ && dir.name !== 'for') {\n                const exp = dir.exp;\n                const arg = dir.arg;\n                // do not process exp if this is v-on:arg - we need special handling\n                // for wrapping inline statements.\n                if (exp &&\n                    exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\n                    !(dir.name === 'on' && arg)) {\n                    dir.exp = processExpression(exp, context, \n                    // slot args must be processed as function params\n                    dir.name === 'slot');\n                }\n                if (arg && arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !arg.isStatic) {\n                    dir.arg = processExpression(arg, context);\n                }\n            }\n        }\n    }\n};\n// Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !true check so that it can be\n// tree-shaken from the browser build.\nfunction processExpression(node, context, \n// some expressions like v-slot props & v-for aliases should be parsed as\n// function params\nasParams = false, \n// v-on handler values may contain multiple statements\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\n    {\n        if ((process.env.NODE_ENV !== 'production')) {\n            // simple in-browser validation (same logic in 2.x)\n            validateBrowserExpression(node, context, asParams, asRawStatements);\n        }\n        return node;\n    }\n}\nfunction stringifyExpression(exp) {\n    if (isString(exp)) {\n        return exp;\n    }\n    else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        return exp.content;\n    }\n    else {\n        return exp.children\n            .map(stringifyExpression)\n            .join('');\n    }\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n        // #1587: We need to dynamically increment the key based on the current\n        // node's sibling nodes, since chained v-if/else branches are\n        // rendered at the same depth\n        const siblings = context.parent.children;\n        let i = siblings.indexOf(ifNode);\n        let key = 0;\n        while (i-- >= 0) {\n            const sibling = siblings[i];\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\n                key += sibling.branches.length;\n            }\n        }\n        // Exit callback. Complete the codegenNode when all children have been\n        // transformed.\n        return () => {\n            if (isRoot) {\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\n            }\n            else {\n                // attach this branch's codegen node to the v-if root.\n                const parentCondition = getParentCondition(ifNode.codegenNode);\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\n            }\n        };\n    });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processIf(node, dir, context, processCodegen) {\n    if (dir.name !== 'else' &&\n        (!dir.exp || !dir.exp.content.trim())) {\n        const loc = dir.exp ? dir.exp.loc : node.loc;\n        context.onError(createCompilerError(28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */, dir.loc));\n        dir.exp = createSimpleExpression(`true`, false, loc);\n    }\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\n        validateBrowserExpression(dir.exp, context);\n    }\n    if (dir.name === 'if') {\n        const branch = createIfBranch(node, dir);\n        const ifNode = {\n            type: 9 /* NodeTypes.IF */,\n            loc: node.loc,\n            branches: [branch]\n        };\n        context.replaceNode(ifNode);\n        if (processCodegen) {\n            return processCodegen(ifNode, branch, true);\n        }\n    }\n    else {\n        // locate the adjacent v-if\n        const siblings = context.parent.children;\n        const comments = [];\n        let i = siblings.indexOf(node);\n        while (i-- >= -1) {\n            const sibling = siblings[i];\n            if (sibling && sibling.type === 3 /* NodeTypes.COMMENT */) {\n                context.removeNode(sibling);\n                (process.env.NODE_ENV !== 'production') && comments.unshift(sibling);\n                continue;\n            }\n            if (sibling &&\n                sibling.type === 2 /* NodeTypes.TEXT */ &&\n                !sibling.content.trim().length) {\n                context.removeNode(sibling);\n                continue;\n            }\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\n                // Check if v-else was followed by v-else-if\n                if (dir.name === 'else-if' &&\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\n                    context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n                }\n                // move the node to the if node's branches\n                context.removeNode();\n                const branch = createIfBranch(node, dir);\n                if ((process.env.NODE_ENV !== 'production') &&\n                    comments.length &&\n                    // #3619 ignore comments if the v-if is direct child of <transition>\n                    !(context.parent &&\n                        context.parent.type === 1 /* NodeTypes.ELEMENT */ &&\n                        isBuiltInType(context.parent.tag, 'transition'))) {\n                    branch.children = [...comments, ...branch.children];\n                }\n                // check if user is forcing same key on different branches\n                if ((process.env.NODE_ENV !== 'production') || !true) {\n                    const key = branch.userKey;\n                    if (key) {\n                        sibling.branches.forEach(({ userKey }) => {\n                            if (isSameKey(userKey, key)) {\n                                context.onError(createCompilerError(29 /* ErrorCodes.X_V_IF_SAME_KEY */, branch.userKey.loc));\n                            }\n                        });\n                    }\n                }\n                sibling.branches.push(branch);\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\n                // since the branch was removed, it will not be traversed.\n                // make sure to traverse here.\n                traverseNode(branch, context);\n                // call on exit\n                if (onExit)\n                    onExit();\n                // make sure to reset currentNode after traversal to indicate this\n                // node has been removed.\n                context.currentNode = null;\n            }\n            else {\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n            }\n            break;\n        }\n    }\n}\nfunction createIfBranch(node, dir) {\n    const isTemplateIf = node.tagType === 3 /* ElementTypes.TEMPLATE */;\n    return {\n        type: 10 /* NodeTypes.IF_BRANCH */,\n        loc: node.loc,\n        condition: dir.name === 'else' ? undefined : dir.exp,\n        children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\n        userKey: findProp(node, `key`),\n        isTemplateIf\n    };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n    if (branch.condition) {\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \n        // make sure to pass in asBlock: true so that the comment node call\n        // closes the current block.\n        createCallExpression(context.helper(CREATE_COMMENT), [\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\n            'true'\n        ]));\n    }\n    else {\n        return createChildrenCodegenNode(branch, keyIndex, context);\n    }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n    const { helper } = context;\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* ConstantTypes.CAN_HOIST */));\n    const { children } = branch;\n    const firstChild = children[0];\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* NodeTypes.ELEMENT */;\n    if (needFragmentWrapper) {\n        if (children.length === 1 && firstChild.type === 11 /* NodeTypes.FOR */) {\n            // optimize away nested fragments when child is a ForNode\n            const vnodeCall = firstChild.codegenNode;\n            injectProp(vnodeCall, keyProperty, context);\n            return vnodeCall;\n        }\n        else {\n            let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\n            let patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\n            // check if the fragment actually contains a single valid child with\n            // the rest being comments\n            if ((process.env.NODE_ENV !== 'production') &&\n                !branch.isTemplateIf &&\n                children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\n                patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\n                patchFlagText += `, ${PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\n            }\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\n        }\n    }\n    else {\n        const ret = firstChild.codegenNode;\n        const vnodeCall = getMemoedVNodeCall(ret);\n        // Change createVNode to createBlock.\n        if (vnodeCall.type === 13 /* NodeTypes.VNODE_CALL */) {\n            makeBlock(vnodeCall, context);\n        }\n        // inject branch key\n        injectProp(vnodeCall, keyProperty, context);\n        return ret;\n    }\n}\nfunction isSameKey(a, b) {\n    if (!a || a.type !== b.type) {\n        return false;\n    }\n    if (a.type === 6 /* NodeTypes.ATTRIBUTE */) {\n        if (a.value.content !== b.value.content) {\n            return false;\n        }\n    }\n    else {\n        // directive\n        const exp = a.exp;\n        const branchExp = b.exp;\n        if (exp.type !== branchExp.type) {\n            return false;\n        }\n        if (exp.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n            exp.isStatic !== branchExp.isStatic ||\n            exp.content !== branchExp.content) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getParentCondition(node) {\n    while (true) {\n        if (node.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n            if (node.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n                node = node.alternate;\n            }\n            else {\n                return node;\n            }\n        }\n        else if (node.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */) {\n            node = node.value;\n        }\n    }\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, forNode => {\n        // create the loop render function expression now, and add the\n        // iterator on exit after all children have been traversed\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\n            forNode.source\n        ]);\n        const isTemplate = isTemplateNode(node);\n        const memo = findDir(node, 'memo');\n        const keyProp = findProp(node, `key`);\n        const keyExp = keyProp &&\n            (keyProp.type === 6 /* NodeTypes.ATTRIBUTE */\n                ? createSimpleExpression(keyProp.value.content, true)\n                : keyProp.exp);\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n        const isStableFragment = forNode.source.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\n            forNode.source.constType > 0 /* ConstantTypes.NOT_CONSTANT */;\n        const fragmentFlag = isStableFragment\n            ? 64 /* PatchFlags.STABLE_FRAGMENT */\n            : keyProp\n                ? 128 /* PatchFlags.KEYED_FRAGMENT */\n                : 256 /* PatchFlags.UNKEYED_FRAGMENT */;\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\n        return () => {\n            // finish the codegen now that all children have been traversed\n            let childBlock;\n            const { children } = forNode;\n            // check <template v-for> key placement\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\n                node.children.some(c => {\n                    if (c.type === 1 /* NodeTypes.ELEMENT */) {\n                        const key = findProp(c, 'key');\n                        if (key) {\n                            context.onError(createCompilerError(33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\n                            return true;\n                        }\n                    }\n                });\n            }\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* NodeTypes.ELEMENT */;\n            const slotOutlet = isSlotOutlet(node)\n                ? node\n                : isTemplate &&\n                    node.children.length === 1 &&\n                    isSlotOutlet(node.children[0])\n                    ? node.children[0] // api-extractor somehow fails to infer this\n                    : null;\n            if (slotOutlet) {\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n                childBlock = slotOutlet.codegenNode;\n                if (isTemplate && keyProperty) {\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\n                    // we need to inject the key to the renderSlot() call.\n                    // the props for renderSlot is passed as the 3rd argument.\n                    injectProp(childBlock, keyProperty, context);\n                }\n            }\n            else if (needFragmentWrapper) {\n                // <template v-for=\"...\"> with text or multi-elements\n                // should generate a fragment block for each loop\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* PatchFlags.STABLE_FRAGMENT */ +\n                    ((process.env.NODE_ENV !== 'production')\n                        ? ` /* ${PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */]} */`\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\n            }\n            else {\n                // Normal element v-for. Directly use the child's codegenNode\n                // but mark it as a block.\n                childBlock = children[0]\n                    .codegenNode;\n                if (isTemplate && keyProperty) {\n                    injectProp(childBlock, keyProperty, context);\n                }\n                if (childBlock.isBlock !== !isStableFragment) {\n                    if (childBlock.isBlock) {\n                        // switch from block to vnode\n                        removeHelper(OPEN_BLOCK);\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n                    }\n                    else {\n                        // switch from vnode to block\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n                    }\n                }\n                childBlock.isBlock = !isStableFragment;\n                if (childBlock.isBlock) {\n                    helper(OPEN_BLOCK);\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n                }\n                else {\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n                }\n            }\n            if (memo) {\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\n                    createSimpleExpression(`_cached`)\n                ]));\n                loop.body = createBlockStatement([\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n                    createCompoundExpression([\n                        `if (_cached`,\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\n                    ]),\n                    createCompoundExpression([`const _item = `, childBlock]),\n                    createSimpleExpression(`_item.memo = _memo`),\n                    createSimpleExpression(`return _item`)\n                ]);\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\n            }\n            else {\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\n            }\n        };\n    });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processFor(node, dir, context, processCodegen) {\n    if (!dir.exp) {\n        context.onError(createCompilerError(31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */, dir.loc));\n        return;\n    }\n    const parseResult = parseForExpression(\n    // can only be simple expression because vFor transform is applied\n    // before expression transform.\n    dir.exp, context);\n    if (!parseResult) {\n        context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\n        return;\n    }\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\n    const { source, value, key, index } = parseResult;\n    const forNode = {\n        type: 11 /* NodeTypes.FOR */,\n        loc: dir.loc,\n        source,\n        valueAlias: value,\n        keyAlias: key,\n        objectIndexAlias: index,\n        parseResult,\n        children: isTemplateNode(node) ? node.children : [node]\n    };\n    context.replaceNode(forNode);\n    // bookkeeping\n    scopes.vFor++;\n    const onExit = processCodegen && processCodegen(forNode);\n    return () => {\n        scopes.vFor--;\n        if (onExit)\n            onExit();\n    };\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input, context) {\n    const loc = input.loc;\n    const exp = input.content;\n    const inMatch = exp.match(forAliasRE);\n    if (!inMatch)\n        return;\n    const [, LHS, RHS] = inMatch;\n    const result = {\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\n        value: undefined,\n        key: undefined,\n        index: undefined\n    };\n    if ((process.env.NODE_ENV !== 'production') && true) {\n        validateBrowserExpression(result.source, context);\n    }\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\n    const trimmedOffset = LHS.indexOf(valueContent);\n    const iteratorMatch = valueContent.match(forIteratorRE);\n    if (iteratorMatch) {\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\n        const keyContent = iteratorMatch[1].trim();\n        let keyOffset;\n        if (keyContent) {\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\n            if ((process.env.NODE_ENV !== 'production') && true) {\n                validateBrowserExpression(result.key, context, true);\n            }\n        }\n        if (iteratorMatch[2]) {\n            const indexContent = iteratorMatch[2].trim();\n            if (indexContent) {\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\n                    ? keyOffset + keyContent.length\n                    : trimmedOffset + valueContent.length));\n                if ((process.env.NODE_ENV !== 'production') && true) {\n                    validateBrowserExpression(result.index, context, true);\n                }\n            }\n        }\n    }\n    if (valueContent) {\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\n        if ((process.env.NODE_ENV !== 'production') && true) {\n            validateBrowserExpression(result.value, context, true);\n        }\n    }\n    return result;\n}\nfunction createAliasExpression(range, content, offset) {\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n    return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n    let i = args.length;\n    while (i--) {\n        if (args[i])\n            break;\n    }\n    return args\n        .slice(0, i + 1)\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\n// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nconst trackSlotScopes = (node, context) => {\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\n        (node.tagType === 1 /* ElementTypes.COMPONENT */ ||\n            node.tagType === 3 /* ElementTypes.TEMPLATE */)) {\n        // We are only checking non-empty v-slot here\n        // since we only care about slots that introduce scope variables.\n        const vSlot = findDir(node, 'slot');\n        if (vSlot) {\n            vSlot.exp;\n            context.scopes.vSlot++;\n            return () => {\n                context.scopes.vSlot--;\n            };\n        }\n    }\n};\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\nconst trackVForSlotScopes = (node, context) => {\n    let vFor;\n    if (isTemplateNode(node) &&\n        node.props.some(isVSlot) &&\n        (vFor = findDir(node, 'for'))) {\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\n        if (result) {\n            const { value, key, index } = result;\n            const { addIdentifiers, removeIdentifiers } = context;\n            value && addIdentifiers(value);\n            key && addIdentifiers(key);\n            index && addIdentifiers(index);\n            return () => {\n                value && removeIdentifiers(value);\n                key && removeIdentifiers(key);\n                index && removeIdentifiers(index);\n            };\n        }\n    }\n};\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\n// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n    context.helper(WITH_CTX);\n    const { children, loc } = node;\n    const slotsProperties = [];\n    const dynamicSlots = [];\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\n    // since it likely uses a scope variable.\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n    // 1. Check for slot with slotProps on component itself.\n    //    <Comp v-slot=\"{ prop }\"/>\n    const onComponentSlot = findDir(node, 'slot', true);\n    if (onComponentSlot) {\n        const { arg, exp } = onComponentSlot;\n        if (arg && !isStaticExp(arg)) {\n            hasDynamicSlots = true;\n        }\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\n    }\n    // 2. Iterate through children and check for template slots\n    //    <template v-slot:foo=\"{ prop }\">\n    let hasTemplateSlots = false;\n    let hasNamedDefaultSlot = false;\n    const implicitDefaultChildren = [];\n    const seenSlotNames = new Set();\n    let conditionalBranchIndex = 0;\n    for (let i = 0; i < children.length; i++) {\n        const slotElement = children[i];\n        let slotDir;\n        if (!isTemplateNode(slotElement) ||\n            !(slotDir = findDir(slotElement, 'slot', true))) {\n            // not a <template v-slot>, skip.\n            if (slotElement.type !== 3 /* NodeTypes.COMMENT */) {\n                implicitDefaultChildren.push(slotElement);\n            }\n            continue;\n        }\n        if (onComponentSlot) {\n            // already has on-component slot - this is incorrect usage.\n            context.onError(createCompilerError(37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\n            break;\n        }\n        hasTemplateSlots = true;\n        const { children: slotChildren, loc: slotLoc } = slotElement;\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\n        // check if name is dynamic.\n        let staticSlotName;\n        if (isStaticExp(slotName)) {\n            staticSlotName = slotName ? slotName.content : `default`;\n        }\n        else {\n            hasDynamicSlots = true;\n        }\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\n        // check if this slot is conditional (v-if/v-for)\n        let vIf;\n        let vElse;\n        let vFor;\n        if ((vIf = findDir(slotElement, 'if'))) {\n            hasDynamicSlots = true;\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));\n        }\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\n            // find adjacent v-if\n            let j = i;\n            let prev;\n            while (j--) {\n                prev = children[j];\n                if (prev.type !== 3 /* NodeTypes.COMMENT */) {\n                    break;\n                }\n            }\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n                // remove node\n                children.splice(i, 1);\n                i--;\n                // attach this slot to previous conditional\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\n                while (conditional.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n                    conditional = conditional.alternate;\n                }\n                conditional.alternate = vElse.exp\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback)\n                    : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n            }\n            else {\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\n            }\n        }\n        else if ((vFor = findDir(slotElement, 'for'))) {\n            hasDynamicSlots = true;\n            const parseResult = vFor.parseResult ||\n                parseForExpression(vFor.exp, context);\n            if (parseResult) {\n                // Render the dynamic slots as an array and add it to the createSlot()\n                // args. The runtime knows how to handle it appropriately.\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\n                    parseResult.source,\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\n                ]));\n            }\n            else {\n                context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\n            }\n        }\n        else {\n            // check duplicate static names\n            if (staticSlotName) {\n                if (seenSlotNames.has(staticSlotName)) {\n                    context.onError(createCompilerError(38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\n                    continue;\n                }\n                seenSlotNames.add(staticSlotName);\n                if (staticSlotName === 'default') {\n                    hasNamedDefaultSlot = true;\n                }\n            }\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\n        }\n    }\n    if (!onComponentSlot) {\n        const buildDefaultSlotProperty = (props, children) => {\n            const fn = buildSlotFn(props, children, loc);\n            if (context.compatConfig) {\n                fn.isNonScopedSlot = true;\n            }\n            return createObjectProperty(`default`, fn);\n        };\n        if (!hasTemplateSlots) {\n            // implicit default slot (on component)\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\n        }\n        else if (implicitDefaultChildren.length &&\n            // #3766\n            // with whitespace: 'preserve', whitespaces between slots will end up in\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\n            // implicit default slot (mixed with named slots)\n            if (hasNamedDefaultSlot) {\n                context.onError(createCompilerError(39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\n            }\n            else {\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\n            }\n        }\n    }\n    const slotFlag = hasDynamicSlots\n        ? 2 /* SlotFlags.DYNAMIC */\n        : hasForwardedSlots(node.children)\n            ? 3 /* SlotFlags.FORWARDED */\n            : 1 /* SlotFlags.STABLE */;\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \n    // 2 = compiled but dynamic = can skip normalization, but must run diff\n    // 1 = compiled and static = can skip normalization AND diff as optimized\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\n    if (dynamicSlots.length) {\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\n            slots,\n            createArrayExpression(dynamicSlots)\n        ]);\n    }\n    return {\n        slots,\n        hasDynamicSlots\n    };\n}\nfunction buildDynamicSlot(name, fn, index) {\n    const props = [\n        createObjectProperty(`name`, name),\n        createObjectProperty(`fn`, fn)\n    ];\n    if (index != null) {\n        props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));\n    }\n    return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        switch (child.type) {\n            case 1 /* NodeTypes.ELEMENT */:\n                if (child.tagType === 2 /* ElementTypes.SLOT */ ||\n                    hasForwardedSlots(child.children)) {\n                    return true;\n                }\n                break;\n            case 9 /* NodeTypes.IF */:\n                if (hasForwardedSlots(child.branches))\n                    return true;\n                break;\n            case 10 /* NodeTypes.IF_BRANCH */:\n            case 11 /* NodeTypes.FOR */:\n                if (hasForwardedSlots(child.children))\n                    return true;\n                break;\n        }\n    }\n    return false;\n}\nfunction isNonWhitespaceContent(node) {\n    if (node.type !== 2 /* NodeTypes.TEXT */ && node.type !== 12 /* NodeTypes.TEXT_CALL */)\n        return true;\n    return node.type === 2 /* NodeTypes.TEXT */\n        ? !!node.content.trim()\n        : isNonWhitespaceContent(node.content);\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nconst directiveImportMap = new WeakMap();\n// generate a JavaScript AST for this element's codegen\nconst transformElement = (node, context) => {\n    // perform the work on exit, after all child expressions have been\n    // processed and merged.\n    return function postTransformElement() {\n        node = context.currentNode;\n        if (!(node.type === 1 /* NodeTypes.ELEMENT */ &&\n            (node.tagType === 0 /* ElementTypes.ELEMENT */ ||\n                node.tagType === 1 /* ElementTypes.COMPONENT */))) {\n            return;\n        }\n        const { tag, props } = node;\n        const isComponent = node.tagType === 1 /* ElementTypes.COMPONENT */;\n        // The goal of the transform is to create a codegenNode implementing the\n        // VNodeCall interface.\n        let vnodeTag = isComponent\n            ? resolveComponentType(node, context)\n            : `\"${tag}\"`;\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n        let vnodeProps;\n        let vnodeChildren;\n        let vnodePatchFlag;\n        let patchFlag = 0;\n        let vnodeDynamicProps;\n        let dynamicPropNames;\n        let vnodeDirectives;\n        let shouldUseBlock = \n        // dynamic component may resolve to plain elements\n        isDynamicComponent ||\n            vnodeTag === TELEPORT ||\n            vnodeTag === SUSPENSE ||\n            (!isComponent &&\n                // <svg> and <foreignObject> must be forced into blocks so that block\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\n                // This is technically web-specific, but splitting the logic out of core\n                // leads to too much unnecessary complexity.\n                (tag === 'svg' || tag === 'foreignObject'));\n        // props\n        if (props.length > 0) {\n            const propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\n            vnodeProps = propsBuildResult.props;\n            patchFlag = propsBuildResult.patchFlag;\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\n            const directives = propsBuildResult.directives;\n            vnodeDirectives =\n                directives && directives.length\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\n                    : undefined;\n            if (propsBuildResult.shouldUseBlock) {\n                shouldUseBlock = true;\n            }\n        }\n        // children\n        if (node.children.length > 0) {\n            if (vnodeTag === KEEP_ALIVE) {\n                // Although a built-in component, we compile KeepAlive with raw children\n                // instead of slot functions so that it can be used inside Transition\n                // or other Transition-wrapping HOCs.\n                // To ensure correct updates with block optimizations, we need to:\n                // 1. Force keep-alive into a block. This avoids its children being\n                //    collected by a parent block.\n                shouldUseBlock = true;\n                // 2. Force keep-alive to always be updated, since it uses raw children.\n                patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\n                    context.onError(createCompilerError(46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */, {\n                        start: node.children[0].loc.start,\n                        end: node.children[node.children.length - 1].loc.end,\n                        source: ''\n                    }));\n                }\n            }\n            const shouldBuildAsSlots = isComponent &&\n                // Teleport is not a real component and has dedicated runtime handling\n                vnodeTag !== TELEPORT &&\n                // explained above.\n                vnodeTag !== KEEP_ALIVE;\n            if (shouldBuildAsSlots) {\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\n                vnodeChildren = slots;\n                if (hasDynamicSlots) {\n                    patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n                }\n            }\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n                const child = node.children[0];\n                const type = child.type;\n                // check for dynamic text children\n                const hasDynamicTextChild = type === 5 /* NodeTypes.INTERPOLATION */ ||\n                    type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\n                if (hasDynamicTextChild &&\n                    getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                    patchFlag |= 1 /* PatchFlags.TEXT */;\n                }\n                // pass directly if the only child is a text node\n                // (plain / interpolation / expression)\n                if (hasDynamicTextChild || type === 2 /* NodeTypes.TEXT */) {\n                    vnodeChildren = child;\n                }\n                else {\n                    vnodeChildren = node.children;\n                }\n            }\n            else {\n                vnodeChildren = node.children;\n            }\n        }\n        // patchFlag & dynamicPropNames\n        if (patchFlag !== 0) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (patchFlag < 0) {\n                    // special flags (negative and mutually exclusive)\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\n                }\n                else {\n                    // bitwise flags\n                    const flagNames = Object.keys(PatchFlagNames)\n                        .map(Number)\n                        .filter(n => n > 0 && patchFlag & n)\n                        .map(n => PatchFlagNames[n])\n                        .join(`, `);\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\n                }\n            }\n            else {\n                vnodePatchFlag = String(patchFlag);\n            }\n            if (dynamicPropNames && dynamicPropNames.length) {\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n            }\n        }\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\n    };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n    let { tag } = node;\n    // 1. dynamic component\n    const isExplicitDynamic = isComponentTag(tag);\n    const isProp = findProp(node, 'is');\n    if (isProp) {\n        if (isExplicitDynamic ||\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))) {\n            const exp = isProp.type === 6 /* NodeTypes.ATTRIBUTE */\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\n                : isProp.exp;\n            if (exp) {\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n                    exp\n                ]);\n            }\n        }\n        else if (isProp.type === 6 /* NodeTypes.ATTRIBUTE */ &&\n            isProp.value.content.startsWith('vue:')) {\n            // <button is=\"vue:xxx\">\n            // if not <component>, only is value that starts with \"vue:\" will be\n            // treated as component by the parse phase and reach here, unless it's\n            // compat mode where all is values are considered components\n            tag = isProp.value.content.slice(4);\n        }\n    }\n    // 1.5 v-is (TODO: Deprecate)\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\n    if (isDir && isDir.exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n            isDir.exp\n        ]);\n    }\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n    if (builtIn) {\n        // built-ins are simply fallthroughs / have special handling during ssr\n        // so we don't need to import their runtime equivalents\n        if (!ssr)\n            context.helper(builtIn);\n        return builtIn;\n    }\n    // 5. user component (resolve)\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag);\n    return toValidAssetId(tag, `component`);\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n    const { tag, loc: elementLoc, children } = node;\n    let properties = [];\n    const mergeArgs = [];\n    const runtimeDirectives = [];\n    const hasChildren = children.length > 0;\n    let shouldUseBlock = false;\n    // patchFlag analysis\n    let patchFlag = 0;\n    let hasRef = false;\n    let hasClassBinding = false;\n    let hasStyleBinding = false;\n    let hasHydrationEventBinding = false;\n    let hasDynamicKeys = false;\n    let hasVnodeHook = false;\n    const dynamicPropNames = [];\n    const pushMergeArg = (arg) => {\n        if (properties.length) {\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n            properties = [];\n        }\n        if (arg)\n            mergeArgs.push(arg);\n    };\n    const analyzePatchFlag = ({ key, value }) => {\n        if (isStaticExp(key)) {\n            const name = key.content;\n            const isEventHandler = isOn(name);\n            if (isEventHandler &&\n                (!isComponent || isDynamicComponent) &&\n                // omit the flag for click handlers because hydration gives click\n                // dedicated fast path.\n                name.toLowerCase() !== 'onclick' &&\n                // omit v-model handlers\n                name !== 'onUpdate:modelValue' &&\n                // omit onVnodeXXX hooks\n                !isReservedProp(name)) {\n                hasHydrationEventBinding = true;\n            }\n            if (isEventHandler && isReservedProp(name)) {\n                hasVnodeHook = true;\n            }\n            if (value.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */ ||\n                ((value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n                    value.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) &&\n                    getConstantType(value, context) > 0)) {\n                // skip if the prop is a cached handler or has constant value\n                return;\n            }\n            if (name === 'ref') {\n                hasRef = true;\n            }\n            else if (name === 'class') {\n                hasClassBinding = true;\n            }\n            else if (name === 'style') {\n                hasStyleBinding = true;\n            }\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n                dynamicPropNames.push(name);\n            }\n            // treat the dynamic class and style binding of the component as dynamic props\n            if (isComponent &&\n                (name === 'class' || name === 'style') &&\n                !dynamicPropNames.includes(name)) {\n                dynamicPropNames.push(name);\n            }\n        }\n        else {\n            hasDynamicKeys = true;\n        }\n    };\n    for (let i = 0; i < props.length; i++) {\n        // static attribute\n        const prop = props[i];\n        if (prop.type === 6 /* NodeTypes.ATTRIBUTE */) {\n            const { loc, name, value } = prop;\n            let isStatic = true;\n            if (name === 'ref') {\n                hasRef = true;\n                if (context.scopes.vFor > 0) {\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n                }\n            }\n            // skip is on <component>, or is=\"vue:xxx\"\n            if (name === 'is' &&\n                (isComponentTag(tag) ||\n                    (value && value.content.startsWith('vue:')) ||\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context)))) {\n                continue;\n            }\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\n        }\n        else {\n            // directives\n            const { name, arg, exp, loc } = prop;\n            const isVBind = name === 'bind';\n            const isVOn = name === 'on';\n            // skip v-slot - it is handled by its dedicated transform.\n            if (name === 'slot') {\n                if (!isComponent) {\n                    context.onError(createCompilerError(40 /* ErrorCodes.X_V_SLOT_MISPLACED */, loc));\n                }\n                continue;\n            }\n            // skip v-once/v-memo - they are handled by dedicated transforms.\n            if (name === 'once' || name === 'memo') {\n                continue;\n            }\n            // skip v-is and :is on <component>\n            if (name === 'is' ||\n                (isVBind &&\n                    isStaticArgOf(arg, 'is') &&\n                    (isComponentTag(tag) ||\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))))) {\n                continue;\n            }\n            // skip v-on in SSR compilation\n            if (isVOn && ssr) {\n                continue;\n            }\n            if (\n            // #938: elements with dynamic keys should be forced into blocks\n            (isVBind && isStaticArgOf(arg, 'key')) ||\n                // inline before-update hooks need to force block so that it is invoked\n                // before children\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\n                shouldUseBlock = true;\n            }\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n            }\n            // special case for v-bind and v-on with no argument\n            if (!arg && (isVBind || isVOn)) {\n                hasDynamicKeys = true;\n                if (exp) {\n                    if (isVBind) {\n                        // have to merge early for compat build check\n                        pushMergeArg();\n                        {\n                            // 2.x v-bind object order compat\n                            if ((process.env.NODE_ENV !== 'production')) {\n                                const hasOverridableKeys = mergeArgs.some(arg => {\n                                    if (arg.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n                                        return arg.properties.some(({ key }) => {\n                                            if (key.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n                                                !key.isStatic) {\n                                                return true;\n                                            }\n                                            return (key.content !== 'class' &&\n                                                key.content !== 'style' &&\n                                                !isOn(key.content));\n                                        });\n                                    }\n                                    else {\n                                        // dynamic expression\n                                        return true;\n                                    }\n                                });\n                                if (hasOverridableKeys) {\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\n                                }\n                            }\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context)) {\n                                mergeArgs.unshift(exp);\n                                continue;\n                            }\n                        }\n                        mergeArgs.push(exp);\n                    }\n                    else {\n                        // v-on=\"obj\" -> toHandlers(obj)\n                        pushMergeArg({\n                            type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\n                            loc,\n                            callee: context.helper(TO_HANDLERS),\n                            arguments: isComponent ? [exp] : [exp, `true`]\n                        });\n                    }\n                }\n                else {\n                    context.onError(createCompilerError(isVBind\n                        ? 34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */\n                        : 35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\n                }\n                continue;\n            }\n            const directiveTransform = context.directiveTransforms[name];\n            if (directiveTransform) {\n                // has built-in directive transform.\n                const { props, needRuntime } = directiveTransform(prop, node, context);\n                !ssr && props.forEach(analyzePatchFlag);\n                if (isVOn && arg && !isStaticExp(arg)) {\n                    pushMergeArg(createObjectExpression(props, elementLoc));\n                }\n                else {\n                    properties.push(...props);\n                }\n                if (needRuntime) {\n                    runtimeDirectives.push(prop);\n                    if (isSymbol(needRuntime)) {\n                        directiveImportMap.set(prop, needRuntime);\n                    }\n                }\n            }\n            else if (!isBuiltInDirective(name)) {\n                // no built-in transform, this is a user custom directive.\n                runtimeDirectives.push(prop);\n                // custom dirs may use beforeUpdate so they need to force blocks\n                // to ensure before-update gets called before children update\n                if (hasChildren) {\n                    shouldUseBlock = true;\n                }\n            }\n        }\n    }\n    let propsExpression = undefined;\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n    if (mergeArgs.length) {\n        // close up any not-yet-merged props\n        pushMergeArg();\n        if (mergeArgs.length > 1) {\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\n        }\n        else {\n            // single v-bind with nothing else - no need for a mergeProps call\n            propsExpression = mergeArgs[0];\n        }\n    }\n    else if (properties.length) {\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\n    }\n    // patchFlag analysis\n    if (hasDynamicKeys) {\n        patchFlag |= 16 /* PatchFlags.FULL_PROPS */;\n    }\n    else {\n        if (hasClassBinding && !isComponent) {\n            patchFlag |= 2 /* PatchFlags.CLASS */;\n        }\n        if (hasStyleBinding && !isComponent) {\n            patchFlag |= 4 /* PatchFlags.STYLE */;\n        }\n        if (dynamicPropNames.length) {\n            patchFlag |= 8 /* PatchFlags.PROPS */;\n        }\n        if (hasHydrationEventBinding) {\n            patchFlag |= 32 /* PatchFlags.HYDRATE_EVENTS */;\n        }\n    }\n    if (!shouldUseBlock &&\n        (patchFlag === 0 || patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) &&\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n        patchFlag |= 512 /* PatchFlags.NEED_PATCH */;\n    }\n    // pre-normalize props, SSR is skipped for now\n    if (!context.inSSR && propsExpression) {\n        switch (propsExpression.type) {\n            case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\n                // means that there is no v-bind,\n                // but still need to deal with dynamic key binding\n                let classKeyIndex = -1;\n                let styleKeyIndex = -1;\n                let hasDynamicKey = false;\n                for (let i = 0; i < propsExpression.properties.length; i++) {\n                    const key = propsExpression.properties[i].key;\n                    if (isStaticExp(key)) {\n                        if (key.content === 'class') {\n                            classKeyIndex = i;\n                        }\n                        else if (key.content === 'style') {\n                            styleKeyIndex = i;\n                        }\n                    }\n                    else if (!key.isHandlerKey) {\n                        hasDynamicKey = true;\n                    }\n                }\n                const classProp = propsExpression.properties[classKeyIndex];\n                const styleProp = propsExpression.properties[styleKeyIndex];\n                // no dynamic key\n                if (!hasDynamicKey) {\n                    if (classProp && !isStaticExp(classProp.value)) {\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\n                    }\n                    if (styleProp &&\n                        // the static style is compiled into an object,\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n                        (hasStyleBinding ||\n                            (styleProp.value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\n                                styleProp.value.content.trim()[0] === `[`) ||\n                            // v-bind:style and style both exist,\n                            // v-bind:style with static literal object\n                            styleProp.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */)) {\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\n                    }\n                }\n                else {\n                    // dynamic key binding, wrap with `normalizeProps`\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\n                }\n                break;\n            case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\n                // mergeProps call, do nothing\n                break;\n            default:\n                // single v-bind\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n                        propsExpression\n                    ])\n                ]);\n                break;\n        }\n    }\n    return {\n        props: propsExpression,\n        directives: runtimeDirectives,\n        patchFlag,\n        dynamicPropNames,\n        shouldUseBlock\n    };\n}\n// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties) {\n    const knownProps = new Map();\n    const deduped = [];\n    for (let i = 0; i < properties.length; i++) {\n        const prop = properties[i];\n        // dynamic keys are always allowed\n        if (prop.key.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\n            deduped.push(prop);\n            continue;\n        }\n        const name = prop.key.content;\n        const existing = knownProps.get(name);\n        if (existing) {\n            if (name === 'style' || name === 'class' || isOn(name)) {\n                mergeAsArray(existing, prop);\n            }\n            // unexpected duplicate, should have emitted error during parse\n        }\n        else {\n            knownProps.set(name, prop);\n            deduped.push(prop);\n        }\n    }\n    return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n    if (existing.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */) {\n        existing.value.elements.push(incoming.value);\n    }\n    else {\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\n    }\n}\nfunction buildDirectiveArgs(dir, context) {\n    const dirArgs = [];\n    const runtime = directiveImportMap.get(dir);\n    if (runtime) {\n        // built-in directive with runtime\n        dirArgs.push(context.helperString(runtime));\n    }\n    else {\n        {\n            // inject statement for resolving directive\n            context.helper(RESOLVE_DIRECTIVE);\n            context.directives.add(dir.name);\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\n        }\n    }\n    const { loc } = dir;\n    if (dir.exp)\n        dirArgs.push(dir.exp);\n    if (dir.arg) {\n        if (!dir.exp) {\n            dirArgs.push(`void 0`);\n        }\n        dirArgs.push(dir.arg);\n    }\n    if (Object.keys(dir.modifiers).length) {\n        if (!dir.arg) {\n            if (!dir.exp) {\n                dirArgs.push(`void 0`);\n            }\n            dirArgs.push(`void 0`);\n        }\n        const trueExpression = createSimpleExpression(`true`, false, loc);\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\n    }\n    return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n    let propsNamesString = `[`;\n    for (let i = 0, l = props.length; i < l; i++) {\n        propsNamesString += JSON.stringify(props[i]);\n        if (i < l - 1)\n            propsNamesString += ', ';\n    }\n    return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n    return tag === 'component' || tag === 'Component';\n}\n\n(process.env.NODE_ENV !== 'production')\n    ? Object.freeze({})\n    : {};\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\nconst cacheStringFunction = (fn) => {\n    const cache = Object.create(null);\n    return ((str) => {\n        const hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nconst camelizeRE = /-(\\w)/g;\n/**\n * @private\n */\nconst camelize = cacheStringFunction((str) => {\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\n});\n\nconst transformSlotOutlet = (node, context) => {\n    if (isSlotOutlet(node)) {\n        const { children, loc } = node;\n        const { slotName, slotProps } = processSlotOutlet(node, context);\n        const slotArgs = [\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n            slotName,\n            '{}',\n            'undefined',\n            'true'\n        ];\n        let expectedLen = 2;\n        if (slotProps) {\n            slotArgs[2] = slotProps;\n            expectedLen = 3;\n        }\n        if (children.length) {\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n            expectedLen = 4;\n        }\n        if (context.scopeId && !context.slotted) {\n            expectedLen = 5;\n        }\n        slotArgs.splice(expectedLen); // remove unused arguments\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\n    }\n};\nfunction processSlotOutlet(node, context) {\n    let slotName = `\"default\"`;\n    let slotProps = undefined;\n    const nonNameProps = [];\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n            if (p.value) {\n                if (p.name === 'name') {\n                    slotName = JSON.stringify(p.value.content);\n                }\n                else {\n                    p.name = camelize(p.name);\n                    nonNameProps.push(p);\n                }\n            }\n        }\n        else {\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n                if (p.exp)\n                    slotName = p.exp;\n            }\n            else {\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n                    p.arg.content = camelize(p.arg.content);\n                }\n                nonNameProps.push(p);\n            }\n        }\n    }\n    if (nonNameProps.length > 0) {\n        const { props, directives } = buildProps(node, context, nonNameProps, false, false);\n        slotProps = props;\n        if (directives.length) {\n            context.onError(createCompilerError(36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\n        }\n    }\n    return {\n        slotName,\n        slotProps\n    };\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn = (dir, node, context, augmentor) => {\n    const { loc, modifiers, arg } = dir;\n    if (!dir.exp && !modifiers.length) {\n        context.onError(createCompilerError(35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\n    }\n    let eventName;\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        if (arg.isStatic) {\n            let rawName = arg.content;\n            // TODO deprecate @vnodeXXX usage\n            if (rawName.startsWith('vue:')) {\n                rawName = `vnode-${rawName.slice(4)}`;\n            }\n            const eventString = node.tagType !== 0 /* ElementTypes.ELEMENT */ ||\n                rawName.startsWith('vnode') ||\n                !/[A-Z]/.test(rawName)\n                ? // for non-element and vnode lifecycle event listeners, auto convert\n                    // it to camelCase. See issue #2249\n                    toHandlerKey(camelize$1(rawName))\n                : // preserve case for plain element listeners that have uppercase\n                    // letters, as these may be custom elements' custom events\n                    `on:${rawName}`;\n            eventName = createSimpleExpression(eventString, true, arg.loc);\n        }\n        else {\n            // #2388\n            eventName = createCompoundExpression([\n                `${context.helperString(TO_HANDLER_KEY)}(`,\n                arg,\n                `)`\n            ]);\n        }\n    }\n    else {\n        // already a compound expression.\n        eventName = arg;\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n        eventName.children.push(`)`);\n    }\n    // handler processing\n    let exp = dir.exp;\n    if (exp && !exp.content.trim()) {\n        exp = undefined;\n    }\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n    if (exp) {\n        const isMemberExp = isMemberExpression(exp.content);\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n        const hasMultipleStatements = exp.content.includes(`;`);\n        if ((process.env.NODE_ENV !== 'production') && true) {\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\n        }\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\n            // wrap inline statement in a function expression\n            exp = createCompoundExpression([\n                `${isInlineStatement\n                    ? `$event`\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n                exp,\n                hasMultipleStatements ? `}` : `)`\n            ]);\n        }\n    }\n    let ret = {\n        props: [\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\n        ]\n    };\n    // apply extended compiler augmentor\n    if (augmentor) {\n        ret = augmentor(ret);\n    }\n    if (shouldCache) {\n        // cache handlers so that it's always the same handler being passed down.\n        // this avoids unnecessary re-renders when users use inline handlers on\n        // components.\n        ret.props[0].value = context.cache(ret.props[0].value);\n    }\n    // mark the key as handler for props normalization check\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\n    return ret;\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nconst transformBind = (dir, _node, context) => {\n    const { exp, modifiers, loc } = dir;\n    const arg = dir.arg;\n    if (arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        arg.children.unshift(`(`);\n        arg.children.push(`) || \"\"`);\n    }\n    else if (!arg.isStatic) {\n        arg.content = `${arg.content} || \"\"`;\n    }\n    // .sync is replaced by v-model:arg\n    if (modifiers.includes('camel')) {\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n            if (arg.isStatic) {\n                arg.content = camelize$1(arg.content);\n            }\n            else {\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n            }\n        }\n        else {\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n            arg.children.push(`)`);\n        }\n    }\n    if (!context.inSSR) {\n        if (modifiers.includes('prop')) {\n            injectPrefix(arg, '.');\n        }\n        if (modifiers.includes('attr')) {\n            injectPrefix(arg, '^');\n        }\n    }\n    if (!exp ||\n        (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !exp.content.trim())) {\n        context.onError(createCompilerError(34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */, loc));\n        return {\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\n        };\n    }\n    return {\n        props: [createObjectProperty(arg, exp)]\n    };\n};\nconst injectPrefix = (arg, prefix) => {\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        if (arg.isStatic) {\n            arg.content = prefix + arg.content;\n        }\n        else {\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n        }\n    }\n    else {\n        arg.children.unshift(`'${prefix}' + (`);\n        arg.children.push(`)`);\n    }\n};\n\n// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nconst transformText = (node, context) => {\n    if (node.type === 0 /* NodeTypes.ROOT */ ||\n        node.type === 1 /* NodeTypes.ELEMENT */ ||\n        node.type === 11 /* NodeTypes.FOR */ ||\n        node.type === 10 /* NodeTypes.IF_BRANCH */) {\n        // perform the transform on node exit so that all expressions have already\n        // been processed.\n        return () => {\n            const children = node.children;\n            let currentContainer = undefined;\n            let hasText = false;\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (isText(child)) {\n                    hasText = true;\n                    for (let j = i + 1; j < children.length; j++) {\n                        const next = children[j];\n                        if (isText(next)) {\n                            if (!currentContainer) {\n                                currentContainer = children[i] = createCompoundExpression([child], child.loc);\n                            }\n                            // merge adjacent text node into current\n                            currentContainer.children.push(` + `, next);\n                            children.splice(j, 1);\n                            j--;\n                        }\n                        else {\n                            currentContainer = undefined;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!hasText ||\n                // if this is a plain element with a single text child, leave it\n                // as-is since the runtime has dedicated fast path for this by directly\n                // setting textContent of the element.\n                // for component root it's always normalized anyway.\n                (children.length === 1 &&\n                    (node.type === 0 /* NodeTypes.ROOT */ ||\n                        (node.type === 1 /* NodeTypes.ELEMENT */ &&\n                            node.tagType === 0 /* ElementTypes.ELEMENT */ &&\n                            // #3756\n                            // custom directives can potentially add DOM elements arbitrarily,\n                            // we need to avoid setting textContent of the element at runtime\n                            // to avoid accidentally overwriting the DOM elements added\n                            // by the user through custom directives.\n                            !node.props.find(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n                                !context.directiveTransforms[p.name]) &&\n                            // in compat mode, <template> tags with no special directives\n                            // will be rendered as a fragment so its children must be\n                            // converted into vnodes.\n                            !(node.tag === 'template'))))) {\n                return;\n            }\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\n            // runtime normalization.\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (isText(child) || child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n                    const callArgs = [];\n                    // createTextVNode defaults to single whitespace, so if it is a\n                    // single space the code could be an empty call to save bytes.\n                    if (child.type !== 2 /* NodeTypes.TEXT */ || child.content !== ' ') {\n                        callArgs.push(child);\n                    }\n                    // mark dynamic text with flag so it gets patched inside a block\n                    if (!context.ssr &&\n                        getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                        callArgs.push(1 /* PatchFlags.TEXT */ +\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* PatchFlags.TEXT */]} */` : ``));\n                    }\n                    children[i] = {\n                        type: 12 /* NodeTypes.TEXT_CALL */,\n                        content: child,\n                        loc: child.loc,\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\n                    };\n                }\n            }\n        };\n    }\n};\n\nconst seen = new WeakSet();\nconst transformOnce = (node, context) => {\n    if (node.type === 1 /* NodeTypes.ELEMENT */ && findDir(node, 'once', true)) {\n        if (seen.has(node) || context.inVOnce) {\n            return;\n        }\n        seen.add(node);\n        context.inVOnce = true;\n        context.helper(SET_BLOCK_TRACKING);\n        return () => {\n            context.inVOnce = false;\n            const cur = context.currentNode;\n            if (cur.codegenNode) {\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\n            }\n        };\n    }\n};\n\nconst transformModel = (dir, node, context) => {\n    const { exp, arg } = dir;\n    if (!exp) {\n        context.onError(createCompilerError(41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */, dir.loc));\n        return createTransformProps();\n    }\n    const rawExp = exp.loc.source;\n    const expString = exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ? exp.content : rawExp;\n    // im SFC <script setup> inline mode, the exp may have been transformed into\n    // _unref(exp)\n    const bindingType = context.bindingMetadata[rawExp];\n    // check props\n    if (bindingType === \"props\" /* BindingTypes.PROPS */ ||\n        bindingType === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\n        context.onError(createCompilerError(44 /* ErrorCodes.X_V_MODEL_ON_PROPS */, exp.loc));\n        return createTransformProps();\n    }\n    const maybeRef = !true  ;\n    if (!expString.trim() ||\n        (!isMemberExpression(expString) && !maybeRef)) {\n        context.onError(createCompilerError(42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\n        return createTransformProps();\n    }\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\n    const eventName = arg\n        ? isStaticExp(arg)\n            ? `onUpdate:${arg.content}`\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\n        : `onUpdate:modelValue`;\n    let assignmentExp;\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\n    {\n        assignmentExp = createCompoundExpression([\n            `${eventArg} => ((`,\n            exp,\n            `) = $event)`\n        ]);\n    }\n    const props = [\n        // modelValue: foo\n        createObjectProperty(propName, dir.exp),\n        // \"onUpdate:modelValue\": $event => (foo = $event)\n        createObjectProperty(eventName, assignmentExp)\n    ];\n    // modelModifiers: { foo: true, \"bar-baz\": true }\n    if (dir.modifiers.length && node.tagType === 1 /* ElementTypes.COMPONENT */) {\n        const modifiers = dir.modifiers\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\n            .join(`, `);\n        const modifiersKey = arg\n            ? isStaticExp(arg)\n                ? `${arg.content}Modifiers`\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\n            : `modelModifiers`;\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* ConstantTypes.CAN_HOIST */)));\n    }\n    return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n    return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context)) {\n        return;\n    }\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\n        // filter rewrite is applied before expression transform so only\n        // simple expressions are possible at this stage\n        rewriteFilter(node.content, context);\n    }\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\n        node.props.forEach((prop) => {\n            if (prop.type === 7 /* NodeTypes.DIRECTIVE */ &&\n                prop.name !== 'for' &&\n                prop.exp) {\n                rewriteFilter(prop.exp, context);\n            }\n        });\n    }\n};\nfunction rewriteFilter(node, context) {\n    if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        parseFilter(node, context);\n    }\n    else {\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            if (typeof child !== 'object')\n                continue;\n            if (child.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n                parseFilter(child, context);\n            }\n            else if (child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n                rewriteFilter(node, context);\n            }\n            else if (child.type === 5 /* NodeTypes.INTERPOLATION */) {\n                rewriteFilter(child.content, context);\n            }\n        }\n    }\n}\nfunction parseFilter(node, context) {\n    const exp = node.content;\n    let inSingle = false;\n    let inDouble = false;\n    let inTemplateString = false;\n    let inRegex = false;\n    let curly = 0;\n    let square = 0;\n    let paren = 0;\n    let lastFilterIndex = 0;\n    let c, prev, i, expression, filters = [];\n    for (i = 0; i < exp.length; i++) {\n        prev = c;\n        c = exp.charCodeAt(i);\n        if (inSingle) {\n            if (c === 0x27 && prev !== 0x5c)\n                inSingle = false;\n        }\n        else if (inDouble) {\n            if (c === 0x22 && prev !== 0x5c)\n                inDouble = false;\n        }\n        else if (inTemplateString) {\n            if (c === 0x60 && prev !== 0x5c)\n                inTemplateString = false;\n        }\n        else if (inRegex) {\n            if (c === 0x2f && prev !== 0x5c)\n                inRegex = false;\n        }\n        else if (c === 0x7c && // pipe\n            exp.charCodeAt(i + 1) !== 0x7c &&\n            exp.charCodeAt(i - 1) !== 0x7c &&\n            !curly &&\n            !square &&\n            !paren) {\n            if (expression === undefined) {\n                // first filter, end of expression\n                lastFilterIndex = i + 1;\n                expression = exp.slice(0, i).trim();\n            }\n            else {\n                pushFilter();\n            }\n        }\n        else {\n            switch (c) {\n                case 0x22:\n                    inDouble = true;\n                    break; // \"\n                case 0x27:\n                    inSingle = true;\n                    break; // '\n                case 0x60:\n                    inTemplateString = true;\n                    break; // `\n                case 0x28:\n                    paren++;\n                    break; // (\n                case 0x29:\n                    paren--;\n                    break; // )\n                case 0x5b:\n                    square++;\n                    break; // [\n                case 0x5d:\n                    square--;\n                    break; // ]\n                case 0x7b:\n                    curly++;\n                    break; // {\n                case 0x7d:\n                    curly--;\n                    break; // }\n            }\n            if (c === 0x2f) {\n                // /\n                let j = i - 1;\n                let p;\n                // find first non-whitespace prev char\n                for (; j >= 0; j--) {\n                    p = exp.charAt(j);\n                    if (p !== ' ')\n                        break;\n                }\n                if (!p || !validDivisionCharRE.test(p)) {\n                    inRegex = true;\n                }\n            }\n        }\n    }\n    if (expression === undefined) {\n        expression = exp.slice(0, i).trim();\n    }\n    else if (lastFilterIndex !== 0) {\n        pushFilter();\n    }\n    function pushFilter() {\n        filters.push(exp.slice(lastFilterIndex, i).trim());\n        lastFilterIndex = i + 1;\n    }\n    if (filters.length) {\n        (process.env.NODE_ENV !== 'production') &&\n            warnDeprecation(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context, node.loc);\n        for (i = 0; i < filters.length; i++) {\n            expression = wrapFilter(expression, filters[i], context);\n        }\n        node.content = expression;\n    }\n}\nfunction wrapFilter(exp, filter, context) {\n    context.helper(RESOLVE_FILTER);\n    const i = filter.indexOf('(');\n    if (i < 0) {\n        context.filters.add(filter);\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\n    }\n    else {\n        const name = filter.slice(0, i);\n        const args = filter.slice(i + 1);\n        context.filters.add(name);\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\n    }\n}\n\nconst seen$1 = new WeakSet();\nconst transformMemo = (node, context) => {\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\n        const dir = findDir(node, 'memo');\n        if (!dir || seen$1.has(node)) {\n            return;\n        }\n        seen$1.add(node);\n        return () => {\n            const codegenNode = node.codegenNode ||\n                context.currentNode.codegenNode;\n            if (codegenNode && codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n                // non-component sub tree should be turned into a block\n                if (node.tagType !== 1 /* ElementTypes.COMPONENT */) {\n                    makeBlock(codegenNode, context);\n                }\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n                    dir.exp,\n                    createFunctionExpression(undefined, codegenNode),\n                    `_cache`,\n                    String(context.cached++)\n                ]);\n            }\n        };\n    }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n    return [\n        [\n            transformOnce,\n            transformIf,\n            transformMemo,\n            transformFor,\n            ...([transformFilter] ),\n            ...((process.env.NODE_ENV !== 'production')\n                    ? [transformExpression]\n                    : []),\n            transformSlotOutlet,\n            transformElement,\n            trackSlotScopes,\n            transformText\n        ],\n        {\n            on: transformOn,\n            bind: transformBind,\n            model: transformModel\n        }\n    ];\n}\n// we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\nfunction baseCompile(template, options = {}) {\n    const onError = options.onError || defaultOnError;\n    const isModuleMode = options.mode === 'module';\n    /* istanbul ignore if */\n    {\n        if (options.prefixIdentifiers === true) {\n            onError(createCompilerError(47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */));\n        }\n        else if (isModuleMode) {\n            onError(createCompilerError(48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */));\n        }\n    }\n    const prefixIdentifiers = !true ;\n    if (options.cacheHandlers) {\n        onError(createCompilerError(49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */));\n    }\n    if (options.scopeId && !isModuleMode) {\n        onError(createCompilerError(50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */));\n    }\n    const ast = isString(template) ? baseParse(template, options) : template;\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\n    transform(ast, extend({}, options, {\n        prefixIdentifiers,\n        nodeTransforms: [\n            ...nodeTransforms,\n            ...(options.nodeTransforms || []) // user transforms\n        ],\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\n        )\n    }));\n    return generate(ast, extend({}, options, {\n        prefixIdentifiers\n    }));\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getConstantType, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, stringifyExpression, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}