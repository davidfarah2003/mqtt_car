{"ast":null,"code":"import { ref } from \"vue\";\nimport mqtt from \"precompiled-mqtt\";\n\n/**\n * Asynchronous method that returns a promise, from which we can obtain the mqtt client if resolved.\n * We use the MQTT.js library to communicate with broker through websockets (Not TCP - that's why I used precompiled-mqtt)\n * @returns client\n */\nconst getMqttClient = async () => {\n  const mqtt = require('precompiled-mqtt');\n  const clientId = \"SSB_interface\";\n  const host = 'localhost:9001';\n  const options = {\n    keepalive: 60,\n    clientId: clientId,\n    protocolId: 'MQTT',\n    protocolVersion: 4,\n    clean: true,\n    reconnectPeriod: 1000,\n    connectTimeout: 30 * 1000,\n    will: {\n      topic: 'WillMsg',\n      payload: 'Connection Closed abnormally..!',\n      qos: 0,\n      retain: false\n    }\n  };\n  const client = await getClient(host, options);\n  client.value.on('error', err => {\n    console.log('Connection error: ', err);\n  });\n  client.value.on('reconnect', () => {\n    console.log('Reconnecting...');\n  });\n  client.value.on('connect', () => {\n    console.log('Connected to broker');\n  });\n  return client;\n};\nconst getClient = (host, options) => {\n  return new Promise((resolve, reject) => {\n    const client = ref(mqtt.connect(host, options));\n    if (client.value) {\n      resolve(client);\n    } else reject(\"Client couldn't be established\");\n  });\n};\nexport default getMqttClient;","map":{"version":3,"names":["ref","mqtt","getMqttClient","require","clientId","host","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","client","getClient","value","on","err","console","log","Promise","resolve","reject","connect"],"sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/composables/getMqttClient.js"],"sourcesContent":["import {ref} from \"vue\"\nimport mqtt from \"precompiled-mqtt\";\n\n/**\n * Asynchronous method that returns a promise, from which we can obtain the mqtt client if resolved.\n * We use the MQTT.js library to communicate with broker through websockets (Not TCP - that's why I used precompiled-mqtt)\n * @returns client\n */\nconst getMqttClient = async () => {\n    const mqtt = require('precompiled-mqtt')\n\n    const clientId = \"SSB_interface\"\n    const host = 'localhost:9001'\n\n    const options = {\n        keepalive: 60,\n        clientId: clientId,\n        protocolId: 'MQTT',\n        protocolVersion: 4,\n        clean: true,\n        reconnectPeriod: 1000,\n        connectTimeout: 30 * 1000,\n        will: {\n            topic: 'WillMsg',\n            payload: 'Connection Closed abnormally..!',\n            qos: 0,\n            retain: false\n        },\n    }\n\n    const client = await getClient(host, options)\n\n    client.value.on('error', (err) => {\n        console.log('Connection error: ', err)\n    })\n    client.value.on('reconnect', () => {\n        console.log('Reconnecting...')\n    })\n    client.value.on('connect', () => {\n        console.log('Connected to broker')\n    })\n\n    return client;\n}\n\nconst getClient = (host, options) => {\n    return new Promise((resolve, reject) => {\n        const client = ref(mqtt.connect(host, options))\n\n        if(client.value){resolve(client)}\n        else reject(\"Client couldn't be established\")\n    })\n}\n\nexport default getMqttClient"],"mappings":"AAAA,SAAQA,GAAG,QAAO,KAAK;AACvB,OAAOC,IAAI,MAAM,kBAAkB;;AAEnC;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,YAAY;EAC9B,MAAMD,IAAI,GAAGE,OAAO,CAAC,kBAAkB,CAAC;EAExC,MAAMC,QAAQ,GAAG,eAAe;EAChC,MAAMC,IAAI,GAAG,gBAAgB;EAE7B,MAAMC,OAAO,GAAG;IACZC,SAAS,EAAE,EAAE;IACbH,QAAQ,EAAEA,QAAQ;IAClBI,UAAU,EAAE,MAAM;IAClBC,eAAe,EAAE,CAAC;IAClBC,KAAK,EAAE,IAAI;IACXC,eAAe,EAAE,IAAI;IACrBC,cAAc,EAAE,EAAE,GAAG,IAAI;IACzBC,IAAI,EAAE;MACFC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE,iCAAiC;MAC1CC,GAAG,EAAE,CAAC;MACNC,MAAM,EAAE;IACZ;EACJ,CAAC;EAED,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACd,IAAI,EAAEC,OAAO,CAAC;EAE7CY,MAAM,CAACE,KAAK,CAACC,EAAE,CAAC,OAAO,EAAGC,GAAG,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,GAAG,CAAC;EAC1C,CAAC,CAAC;EACFJ,MAAM,CAACE,KAAK,CAACC,EAAE,CAAC,WAAW,EAAE,MAAM;IAC/BE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAClC,CAAC,CAAC;EACFN,MAAM,CAACE,KAAK,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;IAC7BE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC,CAAC,CAAC;EAEF,OAAON,MAAM;AACjB,CAAC;AAED,MAAMC,SAAS,GAAG,CAACd,IAAI,EAAEC,OAAO,KAAK;EACjC,OAAO,IAAImB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMT,MAAM,GAAGlB,GAAG,CAACC,IAAI,CAAC2B,OAAO,CAACvB,IAAI,EAAEC,OAAO,CAAC,CAAC;IAE/C,IAAGY,MAAM,CAACE,KAAK,EAAC;MAACM,OAAO,CAACR,MAAM,CAAC;IAAA,CAAC,MAC5BS,MAAM,CAAC,gCAAgC,CAAC;EACjD,CAAC,CAAC;AACN,CAAC;AAED,eAAezB,aAAa"},"metadata":{},"sourceType":"module"}