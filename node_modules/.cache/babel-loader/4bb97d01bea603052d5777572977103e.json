{"ast":null,"code":"import _slicedToArray from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classPrivateMethodInitSpec from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateMethodGet from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/classPrivateMethodGet.js\";\nimport _classPrivateFieldSet from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.weak-set.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport fs from \"fs\";\nimport yaml from \"js-yaml\";\nimport Path from \"path\";\nvar _configsPath = /*#__PURE__*/new WeakMap();\nvar _configObject = /*#__PURE__*/new WeakMap();\nvar _dataObject = /*#__PURE__*/new WeakMap();\nvar _buildDataObject = /*#__PURE__*/new WeakSet();\nvar _createNestedObject = /*#__PURE__*/new WeakSet();\nvar _printObject = /*#__PURE__*/new WeakSet();\nvar _buildConfigObject = /*#__PURE__*/new WeakSet();\nvar ConfigUtils = /*#__PURE__*/function () {\n  /**\n   * Constructor of the class\n   * @param configObject the configuration javascript object retrieved from the api\n   */\n  function ConfigUtils(_configObject2) {\n    _classCallCheck(this, ConfigUtils);\n    _classPrivateMethodInitSpec(this, _buildConfigObject);\n    _classPrivateMethodInitSpec(this, _printObject);\n    _classPrivateMethodInitSpec(this, _createNestedObject);\n    _classPrivateMethodInitSpec(this, _buildDataObject);\n    _classPrivateFieldInitSpec(this, _configsPath, {\n      writable: true,\n      value: Path.normalize(\"./src/config\")\n    });\n    _classPrivateFieldInitSpec(this, _configObject, {\n      writable: true,\n      value: null\n    });\n    _classPrivateFieldInitSpec(this, _dataObject, {\n      writable: true,\n      value: null\n    });\n    try {\n      _classPrivateFieldSet(this, _configObject, _configObject2);\n      _classPrivateMethodGet(this, _buildDataObject, _buildDataObject2).call(this);\n    } catch (e) {\n      console.log(e);\n      process.exit(1);\n    }\n  }\n\n  /**\n   * method that build the data object used to update values in the pages\n   * initialize values to null\n   */\n  _createClass(ConfigUtils, [{\n    key: \"getDataObject\",\n    value:\n    //---------------GETTERS----------------------\n\n    function getDataObject() {\n      return _classPrivateFieldGet(this, _dataObject);\n    }\n\n    /**\n     * Create a map {\"Path_of_the_field_in_config\": Field_object}\n     */\n  }], [{\n    key: \"readConfig\",\n    value:\n    /**\n     * Read yaml file and convert it to usable format\n     * @param {String} configFileName\n     */\n    function readConfig(configFileName) {\n      var rawConfig = yaml.load(fs.readFileSync(Path.join(_classPrivateFieldGet(this, _configsPath), configFileName), {\n        encoding: 'utf8'\n      }), {});\n      return _classPrivateMethodGet(this, _buildConfigObject, _buildConfigObject2).call(this, rawConfig);\n    }\n  }]);\n  return ConfigUtils;\n}();\nfunction _buildDataObject2() {\n  var _this = this;\n  _classPrivateFieldSet(this, _dataObject, {});\n  if (_classPrivateFieldGet(this, _configObject)) {\n    Object.entries(_classPrivateFieldGet(this, _configObject)).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        componentName = _ref2[0],\n        component = _ref2[1];\n      Object.entries(component).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          groupName = _ref4[0],\n          group = _ref4[1];\n        Object.entries(group).forEach(function (_ref5) {\n          var _ref6 = _slicedToArray(_ref5, 2),\n            fieldName = _ref6[0],\n            field = _ref6[1];\n          _classPrivateMethodGet(_this, _createNestedObject, _createNestedObject2).call(_this, _classPrivateFieldGet(_this, _dataObject), [componentName, groupName, fieldName], [null, field[\"unit\"]]);\n        });\n      });\n    });\n  }\n}\nfunction _createNestedObject2(base, names, value) {\n  // If a value is given, remove the last name and keep it for later:\n  var lastName = arguments.length === 3 ? names.pop() : false;\n\n  // Walk the hierarchy, creating new objects where needed.\n  // If the lastName was removed, then the last object is not set yet:\n  for (var i = 0; i < names.length; i++) {\n    base = base[names[i]] = base[names[i]] || {};\n  }\n\n  // If a value was given, set it to the last name:\n  if (lastName) base = base[lastName] = value;\n\n  // Return the last object in the hierarchy:\n  return base;\n}\nfunction _printObject2(obj) {\n  console.log(JSON.stringify(obj, null, 2));\n}\nfunction _buildConfigObject2(config) {\n  var _this2 = this;\n  var configObject = {};\n  config.forEach(function (component) {\n    component[\"subtopics\"].forEach(function (topic) {\n      _classPrivateMethodGet(_this2, _createNestedObject, _createNestedObject2).call(_this2, configObject, [component.name, topic.name], topic);\n    });\n  });\n}\nexport { ConfigUtils as default };","map":{"version":3,"names":["fs","yaml","Path","ConfigUtils","configObject","normalize","e","console","log","process","exit","configFileName","rawConfig","load","readFileSync","join","encoding","Object","entries","forEach","componentName","component","groupName","group","fieldName","field","base","names","value","lastName","arguments","length","pop","i","obj","JSON","stringify","config","topic","name"],"sources":["/home/davidf/Desktop/EPFL/mqtt_car/src/composables/configUtils.mjs"],"sourcesContent":["import fs from \"fs\";\nimport yaml from \"js-yaml\";\nimport Path from \"path\";\n\nexport default class ConfigUtils {\n    #configsPath = Path.normalize(\"./src/config\")\n    #configObject = null\n    #dataObject = null\n\n    /**\n     * Constructor of the class\n     * @param configObject the configuration javascript object retrieved from the api\n     */\n    constructor(configObject) {\n        try {\n            this.#configObject = configObject\n            this.#buildDataObject()\n        } catch (e) {\n            console.log(e);\n            process.exit(1)\n        }\n    }\n\n    /**\n     * method that build the data object used to update values in the pages\n     * initialize values to null\n     */\n    #buildDataObject() {\n        this.#dataObject = {}\n        if (this.#configObject) {\n            Object.entries(this.#configObject).forEach(([componentName, component]) => {\n                Object.entries(component).forEach(([groupName, group]) => {\n                    Object.entries(group).forEach(([fieldName, field]) => {\n                        this.#createNestedObject(\n                            this.#dataObject,\n                            [componentName, groupName, fieldName],\n                            [null, field[\"unit\"]]\n                            )\n                    })\n                })\n            })\n        }\n    }\n\n    /**\n     * Method that assigns a value to the path names in the base, or creates the element dynamically if required\n     * It updates the original base, so no need to reassign\n     * @param base\n     * @param names\n     * @param value\n     * @returns {*}\n     */\n    #createNestedObject(base, names, value) {\n        // If a value is given, remove the last name and keep it for later:\n        let lastName = arguments.length === 3 ? names.pop() : false;\n\n        // Walk the hierarchy, creating new objects where needed.\n        // If the lastName was removed, then the last object is not set yet:\n        for(let i = 0; i < names.length; i++ ) {\n            base = base[ names[i] ] = base[ names[i] ] || {};\n        }\n\n        // If a value was given, set it to the last name:\n        if( lastName ) base = base[ lastName ] = value;\n\n        // Return the last object in the hierarchy:\n        return base;\n    };\n\n\n    /**\n     * Pretty print javascript object\n     * @param obj\n     */\n    #printObject(obj) {\n        console.log(JSON.stringify(obj, null, 2))\n    }\n\n    //---------------GETTERS----------------------\n\n    getDataObject(){\n        return this.#dataObject\n    }\n\n    /**\n     * Create a map {\"Path_of_the_field_in_config\": Field_object}\n     */\n    #buildConfigObject(config){\n        let configObject = {}\n\n        config.forEach(\n            (component) => {\n                component[\"subtopics\"].forEach(\n                    (topic) => {\n                        this.#createNestedObject(configObject, [component.name, topic.name], topic)\n                    })\n            });\n    }\n\n    /**\n     * Read yaml file and convert it to usable format\n     * @param {String} configFileName\n     */\n    static readConfig(configFileName) {\n        let rawConfig = yaml.load(fs.readFileSync(Path.join(this.#configsPath, configFileName), {encoding:'utf8'}), {});\n        return this.#buildConfigObject(rawConfig)\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}