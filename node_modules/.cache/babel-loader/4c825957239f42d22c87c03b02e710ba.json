{"ast":null,"code":"import { ref } from \"vue\";\nimport VueSpeedometer from 'vue-speedometer';\nexport default {\n  name: \"Dashboard\",\n  props: ['canUpdate', 'connected'],\n  emits: ['subscribeToFields', 'updateData'],\n  components: {\n    VueSpeedometer\n  },\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    let dataObject = ref({});\n    let initialized = ref(false);\n\n    //fields to request update\n    let requiredFields = {\n      \"height\": \"fcu/height_sensor/height_measure\",\n      \"bridge_ahrs\": \"fcu/bridge_ahrs/*\"\n    };\n    emit(\"subscribeToFields\", requiredFields);\n\n    //update intervals for plugin\n    setInterval(() => {\n      if (props.canUpdate) {\n        emit(\"updateData\", requiredFields, dataObject);\n        if (!initialized.value) initialized.value = true;\n      }\n    }, 500);\n    return {\n      dataObject,\n      initialized\n    };\n  }\n};","map":{"version":3,"mappings":"AAkDA,SAAQA,GAAG,QAAO,KAAK;AACvB,OAAOC,cAAa,MAAO,iBAAgB;AAE3C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;EACjCC,KAAK,EAAE,CAAC,mBAAmB,EAAE,YAAY,CAAC;EAC1CC,UAAU,EAAE;IAACJ;EAAe,CAAC;EAE7BK,KAAK,CAACH,KAAK,QAAU;IAAA,IAAR;MAACI;IAAI,CAAC;IACjB,IAAIC,UAAS,GAAIR,GAAG,CAAC,CAAC,CAAC;IACvB,IAAIS,WAAU,GAAIT,GAAG,CAAC,KAAK;;IAE3B;IACA,IAAIU,cAAa,GAAI;MACnB,QAAO,EAAI,kCAAkC;MAC7C,aAAY,EAAI;IAElB;IACAH,IAAI,CAAC,mBAAmB,EAAEG,cAAc;;IAExC;IACAC,WAAW,CAAE,MAAI;MACf,IAAIR,KAAK,CAACS,SAAS,EAAE;QACnBL,IAAI,CAAC,YAAY,EAAEG,cAAc,EAAEF,UAAU;QAC7C,IAAG,CAACC,WAAW,CAACI,KAAK,EAAEJ,WAAW,CAACI,KAAI,GAAI,IAAG;MAChD;IACF,GAAI,GAAG;IAEP,OAAO;MAACL,UAAU;MAAEC;IAAW;EACjC;AACF","names":["ref","VueSpeedometer","name","props","emits","components","setup","emit","dataObject","initialized","requiredFields","setInterval","canUpdate","value"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/components/Home/Dashboard.vue"],"sourcesContent":["<template>\n  <span class=\"plugin\" v-if=\"initialized\">\n    <div class=\"speedometers\">\n      <vue-speedometer\n          :width=\"180\"\n          :height=\"150\"\n          :ringWidth=\"16\"\n          :needleHeightRatio=\"0.7\"\n          :maxSegmentLabels=\"0\"\n          :segments=\"4\"\n          :value = \"dataObject['bridge_ahrs']['velocity_x'][0]\"\n          :minValue=\"0\"\n          :maxValue=\"30\"\n          :currentValueText=\"'Velocity: ${value} ' + dataObject['bridge_ahrs']['velocity_x'][1]\"\n          startColor=\"#3ca358\"\n          endColor=\"#a1283a\"\n          needleColor=\"#D8DEE9\"\n          textColor=\"white\"\n          :labelFontSize=\"5\"\n      />\n\n      <vue-speedometer\n          :width=\"200\"\n          :height=\"150\"\n          :ringWidth=\"20\"\n          :needleHeightRatio=\"0.7\"\n          :maxSegmentLabels=\"0\"\n          :segments=\"5\"\n          :value = \"dataObject['height'][0]\"\n          :minValue=\"0\"\n          :maxValue=\"3\"\n          :currentValueText=\"'Height: ${value} ' + dataObject['height'][1]\"\n          needleColor=\"#D8DEE9\"\n          textColor=\"white\"\n          labelFontSize=\"15px\"\n          :customSegmentStops=\"[0, 0.5, 1, 2, 2.5, 3]\"\n          :segmentColors='[\"#a1283a\", \"#d08770\", \"#3ca358\", \"#d08770\", \"#a1283a\"]'\n      />\n    </div>\n\n    <ul>\n      <li>Yaw Rate: {{dataObject[\"bridge_ahrs\"][\"yaw_rate\"][0]}} {{dataObject[\"bridge_ahrs\"][\"yaw_rate\"][1]}}</li>\n      <li>Roll: {{dataObject[\"bridge_ahrs\"][\"roll\"][0]}} {{dataObject[\"bridge_ahrs\"][\"roll\"][1]}}</li>\n      <li>Pitch: {{dataObject[\"bridge_ahrs\"][\"pitch\"][0]}} {{dataObject[\"bridge_ahrs\"][\"pitch\"][1]}}</li>\n    </ul>\n\n  </span>\n</template>\n\n<script>\nimport {ref} from \"vue\";\nimport VueSpeedometer from 'vue-speedometer'\n\nexport default {\n  name: \"Dashboard\",\n  props: ['canUpdate', 'connected'],\n  emits: ['subscribeToFields', 'updateData'],\n  components: {VueSpeedometer,},\n\n  setup(props, {emit}) {\n    let dataObject = ref({})\n    let initialized = ref(false)\n\n    //fields to request update\n    let requiredFields = {\n      \"height\" : \"fcu/height_sensor/height_measure\",\n      \"bridge_ahrs\" : \"fcu/bridge_ahrs/*\",\n\n    }\n    emit(\"subscribeToFields\", requiredFields)\n\n    //update intervals for plugin\n    setInterval( ()=>{\n      if (props.canUpdate) {\n        emit(\"updateData\", requiredFields, dataObject)\n        if(!initialized.value) initialized.value = true\n      }\n    } , 500)\n\n    return {dataObject, initialized}\n  }\n}\n</script>\n\n<style scoped>\n.plugin {\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  justify-content: space-around;\n}\n\n.speedometers {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n}\n\nul {\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  padding: 0;\n}\nli {\n  text-align: center;\n  width: 33%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}