{"ast":null,"code":"import ConnectedView from \"@/views/ConnectedView\";\nimport { ref } from \"vue\";\nimport retrieveDataFromJSON from \"@/composables/responseUtils\";\nimport homeData from \"@/composables/dataObjects\";\nexport default {\n  name: \"Home\",\n  components: {\n    ConnectedView\n  },\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n    const sensorData = ref({});\n    let data = ref({\n      FCU: {\n        state_machine: {\n          global_state: -1,\n          flight_state: -1,\n          flight_mode: -1,\n          arming_state: -1\n        },\n        height_sensor: {\n          height_sensor_status: -1,\n          height_measure: NaN\n        },\n        event_flags: {\n          event_flags: -1\n        },\n        bridge_ahrs: {\n          palpeur_altitude_filtered: NaN,\n          vel_x: NaN,\n          yaw_rate: NaN,\n          roll: NaN,\n          pitch: NaN\n        },\n        bridge_motor: {\n          motor_1_ctrl_temp: NaN,\n          motor_1_current: NaN,\n          motor_1_rpm: NaN,\n          motor_2_ctrl_temp: NaN,\n          motor_2_current: NaN,\n          motor_2_rpm: NaN\n        },\n        heartBeat: NaN\n      },\n      main_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n      lat_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n      back_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n      battery: {\n        can_port_current_1: {\n          pack_current: NaN\n        },\n        pack_info: {\n          pack_voltage: NaN,\n          pack_soc: NaN,\n          status: NaN,\n          fan_duty: NaN\n        },\n        bms_status: {\n          max_cell_temp: NaN,\n          min_cell_voltage: NaN,\n          max_cell_voltage: NaN,\n          temp_BMS: NaN,\n          temp_ext_1: NaN,\n          temp_ext_2: NaN,\n          bms_status: NaN\n        },\n        mppt_current_1: {\n          mppt_1: NaN,\n          mppt_2: NaN,\n          mppt_3: NaN,\n          mppt_4: NaN\n        },\n        mppt_current_2: {\n          mppt_5: NaN,\n          mppt_6: NaN,\n          mppt_7: NaN,\n          mppt_8: NaN\n        },\n        mppt_current_3: {\n          mppt_9: NaN,\n          mppt_10: NaN\n        }\n      },\n      inertial_central: {\n        imu_delta_velocity: {\n          d_vel_x: NaN,\n          d_vel_y: NaN,\n          d_vel_z: NaN\n        },\n        ekf_euler_accuracy: {\n          roll_acc: NaN,\n          pitch_acc: NaN,\n          yaw_acc: NaN\n        },\n        ekf_position: {\n          latitude: NaN,\n          longitude: NaN\n        },\n        ekf_vel_body: {\n          velocity_x: NaN,\n          velocity_y: NaN,\n          velocity_z: NaN\n        },\n        air_data_info: {\n          air_time_stamp: NaN,\n          air_data_status: -1,\n          air_temperature: NaN\n        },\n        air_data_altitude: {\n          pressure: NaN,\n          pressure_altitude: NaN\n        },\n        imu_gyro: {\n          gyro_x: NaN,\n          gyro_y: NaN,\n          gyro_z: NaN\n        }\n      }\n    });\n    let dataCallBack = receivedData => {\n      retrieveDataFromJSON(receivedData, sensorData);\n      console.log(sensorData);\n    };\n    return {\n      subscribedTopics,\n      dataCallBack,\n      sensorData,\n      data\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ConnectedView","ref","retrieveDataFromJSON","homeData","name","components","setup","subscribedTopics","sensorData","data","FCU","state_machine","global_state","flight_state","flight_mode","arming_state","height_sensor","height_sensor_status","height_measure","NaN","event_flags","bridge_ahrs","palpeur_altitude_filtered","vel_x","yaw_rate","roll","pitch","bridge_motor","motor_1_ctrl_temp","motor_1_current","motor_1_rpm","motor_2_ctrl_temp","motor_2_current","motor_2_rpm","heartBeat","main_position_motor","TxPDO_1","modes_of_operation_display","statusword","error_code","TxPDO_2","position_demand_value","position_actual_value","TxPDO_3","velocity_demand_value","velocity_actual_value","TxPDO_4","current_demand_value","current_actual_value","lat_position_motor","back_position_motor","battery","can_port_current_1","pack_current","pack_info","pack_voltage","pack_soc","status","fan_duty","bms_status","max_cell_temp","min_cell_voltage","max_cell_voltage","temp_BMS","temp_ext_1","temp_ext_2","mppt_current_1","mppt_1","mppt_2","mppt_3","mppt_4","mppt_current_2","mppt_5","mppt_6","mppt_7","mppt_8","mppt_current_3","mppt_9","mppt_10","inertial_central","imu_delta_velocity","d_vel_x","d_vel_y","d_vel_z","ekf_euler_accuracy","roll_acc","pitch_acc","yaw_acc","ekf_position","latitude","longitude","ekf_vel_body","velocity_x","velocity_y","velocity_z","air_data_info","air_time_stamp","air_data_status","air_temperature","air_data_altitude","pressure","pressure_altitude","imu_gyro","gyro_x","gyro_y","gyro_z","dataCallBack","receivedData","console","log"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  <section class=\"app-main\">\n\n    <connected-view  v-slot=\"data\" :subscribedTopics=\"subscribedTopics\" :dataCallBack=\"dataCallBack\">\n      <h1> Home </h1>\n      <h1 v-if=\"data.connected\">Connected</h1>\n      <h1 v-else>Disconnected</h1>\n\n      <h3>Data: {{data.battery.pack_info.pack_voltage}}</h3>\n\n      <h4>Subscribed topics: {{data.subscribedTopics}}</h4>\n    </connected-view>\n\n  </section>\n</template>\n\n<script>\nimport ConnectedView from \"@/views/ConnectedView\";\nimport {ref} from \"vue\";\nimport retrieveDataFromJSON from \"@/composables/responseUtils\";\nimport homeData from \"@/composables/dataObjects\";\n\nexport default {\n  name: \"Home\",\n  components: {ConnectedView},\n\n\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n    const sensorData = ref({})\n\n    let data = ref({\n      FCU: {\n        state_machine: {\n          global_state: -1,\n          flight_state: -1,\n          flight_mode: -1,\n          arming_state: -1,\n        },\n        height_sensor: {\n          height_sensor_status : -1,\n          height_measure: NaN\n        },\n        event_flags: {\n          event_flags: -1,\n        },\n        bridge_ahrs: {\n          palpeur_altitude_filtered: NaN,\n          vel_x: NaN,\n          yaw_rate: NaN,\n          roll: NaN,\n          pitch: NaN,\n        },\n        bridge_motor:{\n          motor_1_ctrl_temp: NaN,\n          motor_1_current: NaN,\n          motor_1_rpm: NaN,\n          motor_2_ctrl_temp: NaN,\n          motor_2_current: NaN,\n          motor_2_rpm: NaN,\n        },\n        heartBeat: NaN,\n      },\n      main_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        },\n      },\n      lat_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        },\n      },\n      back_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n      battery: {\n        can_port_current_1: {\n          pack_current: NaN,\n        },\n        pack_info: {\n          pack_voltage: NaN,\n          pack_soc: NaN,\n          status: NaN,\n          fan_duty: NaN,\n        },\n        bms_status: {\n          max_cell_temp : NaN,\n          min_cell_voltage: NaN,\n          max_cell_voltage: NaN,\n          temp_BMS: NaN,\n          temp_ext_1: NaN,\n          temp_ext_2: NaN,\n          bms_status: NaN,\n        },\n        mppt_current_1: {\n          mppt_1: NaN,\n          mppt_2: NaN,\n          mppt_3: NaN,\n          mppt_4: NaN,\n        },\n        mppt_current_2: {\n          mppt_5: NaN,\n          mppt_6: NaN,\n          mppt_7: NaN,\n          mppt_8: NaN,\n        },\n        mppt_current_3: {\n          mppt_9: NaN,\n          mppt_10: NaN,\n        },\n\n      },\n      inertial_central: {\n        imu_delta_velocity: {\n          d_vel_x: NaN,\n          d_vel_y: NaN,\n          d_vel_z: NaN\n        },\n        ekf_euler_accuracy: {\n          roll_acc: NaN,\n          pitch_acc: NaN,\n          yaw_acc: NaN\n        },\n        ekf_position: {\n          latitude: NaN,\n          longitude: NaN,\n        },\n        ekf_vel_body:{\n          velocity_x: NaN,\n          velocity_y: NaN,\n          velocity_z: NaN,\n        },\n        air_data_info: {\n          air_time_stamp: NaN,\n          air_data_status: -1,\n          air_temperature: NaN\n        },\n        air_data_altitude: {\n          pressure: NaN,\n          pressure_altitude: NaN\n        },\n        imu_gyro: {\n          gyro_x: NaN,\n          gyro_y: NaN,\n          gyro_z: NaN,\n        }\n      }\n    })\n\n    let dataCallBack = (receivedData) => {\n      retrieveDataFromJSON(receivedData, sensorData)\n\n      console.log(sensorData)\n    }\n    return {subscribedTopics, dataCallBack, sensorData, data}\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}