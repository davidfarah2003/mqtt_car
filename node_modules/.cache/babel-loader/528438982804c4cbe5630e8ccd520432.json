{"ast":null,"code":"import { computed, ref, watch } from \"vue\";\nexport default {\n  name: \"Status_panel\",\n  props: ['canUpdate'],\n  emits: ['subscribeFields', 'updateData'],\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    let dataObject = ref({});\n    let initialized = ref(false);\n    let requiredFields = {\n      motor_1_current: \"fcu/bridge_motor/motor_1_current\",\n      motor_2_current: \"fcu/bridge_motor/motor_2_current\",\n      main_sts: \"main_position_motor/txpdo_1/statusword\",\n      back_sts: \"back_position_motor/txpdo_1/statusword\",\n      lat_sts: \"lat_position_motor/txpdo_1/statusword\",\n      fcu_sts: \"fcu/status_01/general_status\",\n      imu_sts: \"imu/status_01/general_status\",\n      battery_current: \"battery/pack_info/current\",\n      battery_status: \"battery/pack_info/status\",\n      height_sensor_sts: \"fcu/height_sensor/height_sensor_status\",\n      cockpit_speed_command: \"cockpit_arduino/pilot_command_01/speedcommand\"\n    };\n    emit(\"subscribeFields\", requiredFields);\n    setInterval(() => {\n      if (props.canUpdate) {\n        console.log(\"I can update\");\n        emit(\"updateData\", requiredFields, dataObject);\n        initialized.value = true;\n      }\n    }, 200);\n    let statuses = computed(() => {\n      if (dataObject.value) return dataObject;\n    });\n    return {\n      dataObject,\n      initialized\n    };\n  }\n};","map":{"version":3,"mappings":"AAMA,SAAQA,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAO,KAAK;AAExC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,CAAC,WAAW,CAAC;EACpBC,KAAK,EAAE,CAAC,iBAAiB,EAAE,YAAY,CAAC;EAExCC,KAAK,CAACF,KAAK,QAAU;IAAA,IAAR;MAACG;IAAI,CAAC;IACjB,IAAIC,UAAS,GAAIP,GAAG,CAAC,CAAC,CAAC;IACvB,IAAIQ,WAAU,GAAIR,GAAG,CAAC,KAAK;IAE3B,IAAIS,cAAa,GAAI;MACnBC,eAAe,EAAE,kCAAkC;MACnDC,eAAe,EAAE,kCAAkC;MACnDC,QAAQ,EAAE,wCAAwC;MAClDC,QAAQ,EAAE,wCAAwC;MAClDC,OAAO,EAAE,uCAAuC;MAChDC,OAAO,EAAE,8BAA8B;MACvCC,OAAO,EAAE,8BAA8B;MACvCC,eAAe,EAAE,2BAA2B;MAC5CC,cAAc,EAAE,0BAA0B;MAC1CC,iBAAiB,EAAE,wCAAwC;MAC3DC,qBAAqB,EAAE;IACzB;IAEAd,IAAI,CAAC,iBAAiB,EAAEG,cAAc;IAEtCY,WAAW,CAAE,MAAI;MACf,IAAIlB,KAAK,CAACmB,SAAS,EAAE;QACnBC,OAAO,CAACC,GAAG,CAAC,cAAc;QAC1BlB,IAAI,CAAC,YAAY,EAAEG,cAAc,EAAEF,UAAU;QAC7CC,WAAW,CAACiB,KAAI,GAAI,IAAG;MACzB;IACF,GAAI,GAAE,CAAE;IAGR,IAAIC,QAAO,GAAI3B,QAAQ,CAAC,MAAI;MAC1B,IAAIQ,UAAU,CAACkB,KAAK,EAAE,OAAOlB,UAAS;IACxC,CAAC;IAED,OAAO;MAACA,UAAU;MAAEC;IAAW;EACjC;AACF","names":["computed","ref","watch","name","props","emits","setup","emit","dataObject","initialized","requiredFields","motor_1_current","motor_2_current","main_sts","back_sts","lat_sts","fcu_sts","imu_sts","battery_current","battery_status","height_sensor_sts","cockpit_speed_command","setInterval","canUpdate","console","log","value","statuses"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/components/Home/Status_panel.vue"],"sourcesContent":["<template>\n  <h1 v-if=\"initialized\">{{dataObject[\"motor_1_current\"]}}</h1>\n  <BForm>sdds</BForm>\n</template>\n\n<script>\nimport {computed, ref, watch} from \"vue\";\n\nexport default {\n  name: \"Status_panel\",\n  props: ['canUpdate'],\n  emits: ['subscribeFields', 'updateData'],\n\n  setup(props, {emit}) {\n    let dataObject = ref({})\n    let initialized = ref(false)\n\n    let requiredFields = {\n      motor_1_current: \"fcu/bridge_motor/motor_1_current\",\n      motor_2_current: \"fcu/bridge_motor/motor_2_current\",\n      main_sts: \"main_position_motor/txpdo_1/statusword\",\n      back_sts: \"back_position_motor/txpdo_1/statusword\",\n      lat_sts: \"lat_position_motor/txpdo_1/statusword\",\n      fcu_sts: \"fcu/status_01/general_status\",\n      imu_sts: \"imu/status_01/general_status\",\n      battery_current: \"battery/pack_info/current\",\n      battery_status: \"battery/pack_info/status\",\n      height_sensor_sts: \"fcu/height_sensor/height_sensor_status\",\n      cockpit_speed_command: \"cockpit_arduino/pilot_command_01/speedcommand\",\n    }\n\n    emit(\"subscribeFields\", requiredFields)\n\n    setInterval( ()=>{\n      if (props.canUpdate) {\n        console.log(\"I can update\")\n        emit(\"updateData\", requiredFields, dataObject)\n        initialized.value = true\n      }\n    } , 200 )\n\n\n    let statuses = computed(()=>{\n      if (dataObject.value) return dataObject\n    })\n\n    return {dataObject, initialized}\n  }\n}\n</script>\n\n<style scoped>\n#online {\n  background: green;\n  border-radius: 50%;\n  width: 3px;\n  height: 3px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}