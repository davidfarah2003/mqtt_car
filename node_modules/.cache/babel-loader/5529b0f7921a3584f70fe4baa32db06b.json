{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/davidf/Desktop/EPFL/mqtt_car/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.number.parse-float.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine';\nimport Manipulator from '../dom/manipulator';\nimport { isElement } from './index';\n\n/**\n * Constants\n */\n\nvar SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nvar SELECTOR_STICKY_CONTENT = '.sticky-top';\nvar PROPERTY_PADDING = 'padding-right';\nvar PROPERTY_MARGIN = 'margin-right';\n\n/**\n * Class definition\n */\nvar ScrollBarHelper = /*#__PURE__*/function () {\n  function ScrollBarHelper() {\n    _classCallCheck(this, ScrollBarHelper);\n    this._element = document.body;\n  }\n\n  // Public\n  _createClass(ScrollBarHelper, [{\n    key: \"getWidth\",\n    value: function getWidth() {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n      var documentWidth = document.documentElement.clientWidth;\n      return Math.abs(window.innerWidth - documentWidth);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var width = this.getWidth();\n      this._disableOverFlow();\n      // give padding to element to balance the hidden scrollbar width\n      this._setElementAttributes(this._element, PROPERTY_PADDING, function (calculatedValue) {\n        return calculatedValue + width;\n      });\n      // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n      this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, function (calculatedValue) {\n        return calculatedValue + width;\n      });\n      this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, function (calculatedValue) {\n        return calculatedValue - width;\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElementAttributes(this._element, 'overflow');\n      this._resetElementAttributes(this._element, PROPERTY_PADDING);\n      this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING);\n      this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN);\n    }\n  }, {\n    key: \"isOverflowing\",\n    value: function isOverflowing() {\n      return this.getWidth() > 0;\n    }\n\n    // Private\n  }, {\n    key: \"_disableOverFlow\",\n    value: function _disableOverFlow() {\n      this._saveInitialAttribute(this._element, 'overflow');\n      this._element.style.overflow = 'hidden';\n    }\n  }, {\n    key: \"_setElementAttributes\",\n    value: function _setElementAttributes(selector, styleProperty, callback) {\n      var _this = this;\n      var scrollbarWidth = this.getWidth();\n      var manipulationCallBack = function manipulationCallBack(element) {\n        if (element !== _this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n          return;\n        }\n        _this._saveInitialAttribute(element, styleProperty);\n        var calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);\n        element.style.setProperty(styleProperty, \"\".concat(callback(Number.parseFloat(calculatedValue)), \"px\"));\n      };\n      this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n  }, {\n    key: \"_saveInitialAttribute\",\n    value: function _saveInitialAttribute(element, styleProperty) {\n      var actualValue = element.style.getPropertyValue(styleProperty);\n      if (actualValue) {\n        Manipulator.setDataAttribute(element, styleProperty, actualValue);\n      }\n    }\n  }, {\n    key: \"_resetElementAttributes\",\n    value: function _resetElementAttributes(selector, styleProperty) {\n      var manipulationCallBack = function manipulationCallBack(element) {\n        var value = Manipulator.getDataAttribute(element, styleProperty);\n        // We only want to remove the property if the value is `null`; the value can also be zero\n        if (value === null) {\n          element.style.removeProperty(styleProperty);\n          return;\n        }\n        Manipulator.removeDataAttribute(element, styleProperty);\n        element.style.setProperty(styleProperty, value);\n      };\n      this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n  }, {\n    key: \"_applyManipulationCallback\",\n    value: function _applyManipulationCallback(selector, callBack) {\n      if (isElement(selector)) {\n        callBack(selector);\n        return;\n      }\n      var _iterator = _createForOfIteratorHelper(SelectorEngine.find(selector, this._element)),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var sel = _step.value;\n          callBack(sel);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n  return ScrollBarHelper;\n}();\nexport default ScrollBarHelper;","map":{"version":3,"names":["SelectorEngine","Manipulator","isElement","SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","PROPERTY_PADDING","PROPERTY_MARGIN","ScrollBarHelper","_element","document","body","documentWidth","documentElement","clientWidth","Math","abs","window","innerWidth","width","getWidth","_disableOverFlow","_setElementAttributes","calculatedValue","_resetElementAttributes","_saveInitialAttribute","style","overflow","selector","styleProperty","callback","scrollbarWidth","manipulationCallBack","element","getComputedStyle","getPropertyValue","setProperty","Number","parseFloat","_applyManipulationCallback","actualValue","setDataAttribute","value","getDataAttribute","removeProperty","removeDataAttribute","callBack","find","sel"],"sources":["/home/davidf/Desktop/EPFL/mqtt_car/node_modules/bootstrap/js/src/util/scrollbar.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine'\nimport Manipulator from '../dom/manipulator'\nimport { isElement } from './index'\n\n/**\n * Constants\n */\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\nconst PROPERTY_PADDING = 'padding-right'\nconst PROPERTY_MARGIN = 'margin-right'\n\n/**\n * Class definition\n */\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  // Public\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN)\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n\n  // Private\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProperty, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProperty)\n      const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty)\n      element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _saveInitialAttribute(element, styleProperty) {\n    const actualValue = element.style.getPropertyValue(styleProperty)\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProperty, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProperty) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProperty)\n      // We only want to remove the property if the value is `null`; the value can also be zero\n      if (value === null) {\n        element.style.removeProperty(styleProperty)\n        return\n      }\n\n      Manipulator.removeDataAttribute(element, styleProperty)\n      element.style.setProperty(styleProperty, value)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector)\n      return\n    }\n\n    for (const sel of SelectorEngine.find(selector, this._element)) {\n      callBack(sel)\n    }\n  }\n}\n\nexport default ScrollBarHelper\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}