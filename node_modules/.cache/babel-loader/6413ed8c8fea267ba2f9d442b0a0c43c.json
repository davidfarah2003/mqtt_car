{"ast":null,"code":"import { inject, onMounted, onUnmounted, ref } from \"vue\";\nexport default {\n  name: \"Home\",\n  setup: function () {\n    let mqttClient = null;\n    onMounted(() => {\n      console.log(\"mounted\");\n      inject('mqttClient').then(client => {\n        mqttClient = client;\n        console.log(\"client connected\");\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    /**\n     * Execute when unmounted and the mqttClient is assigned\n     */\n    onUnmounted(() => {\n      if (mqttClient) {\n        console.log(\"unmounted\");\n      }\n    });\n    const test = client => {\n      client.subscribe('test');\n      client.publish('test', 'lol');\n    };\n  }\n};","map":{"version":3,"mappings":"AAMA,SAAQA,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,GAAG,QAAO,KAAK;AAEvD,eAAe;EACbC,IAAI,EAAE,MAAM;EAEZC,KAAK,EAAE,YAAY;IACjB,IAAIC,UAAS,GAAI,IAAG;IAEpBL,SAAS,CAAC,MAAM;MACdM,OAAO,CAACC,GAAG,CAAC,SAAS;MAErBR,MAAM,CAAC,YAAY,EACdS,IAAI,CAAEC,MAAM,IAAK;QAChBJ,UAAS,GAAII,MAAK;QAClBH,OAAO,CAACC,GAAG,CAAC,kBAAkB;MAChC,CAAC,EACAG,KAAK,CAAEC,GAAG,IAAK;QACdL,OAAO,CAACC,GAAG,CAACI,GAAG;MACjB,CAAC,CAAC;IACR,CAAC;;IAED;;;IAGAV,WAAW,CAAC,MAAK;MACf,IAAGI,UAAU,EAAC;QAEZC,OAAO,CAACC,GAAG,CAAC,WAAW;MACzB;IACF,CAAC;IAED,MAAMK,IAAG,GAAKH,MAAM,IAAK;MACvBA,MAAM,CAACI,SAAS,CAAC,MAAM;MACvBJ,MAAM,CAACK,OAAO,CAAC,MAAM,EAAE,KAAK;IAC9B;EAEF;AACF","names":["inject","onMounted","onUnmounted","ref","name","setup","mqttClient","console","log","then","client","catch","err","test","subscribe","publish"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  Home\n</template>\n\n<script>\n\nimport {inject, onMounted, onUnmounted, ref} from \"vue\";\n\nexport default {\n  name: \"Home\",\n\n  setup: function () {\n    let mqttClient = null\n\n    onMounted(() => {\n      console.log(\"mounted\")\n\n      inject('mqttClient')\n          .then((client) => {\n            mqttClient = client\n            console.log(\"client connected\")\n          })\n          .catch((err) => {\n            console.log(err)\n          });\n    })\n\n    /**\n     * Execute when unmounted and the mqttClient is assigned\n     */\n    onUnmounted(()=> {\n      if(mqttClient){\n        \n        console.log(\"unmounted\")\n      }\n    })\n\n    const test = (client) => {\n      client.subscribe('test')\n      client.publish('test', 'lol')\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}