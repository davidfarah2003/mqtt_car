{"ast":null,"code":"import { inject, onMounted, onUnmounted, ref } from \"vue\";\nexport default {\n  name: \"Home\",\n  setup: function () {\n    const subscribedTopics = ['hello', 'world', 'bitch'];\n    let mqttClient = null;\n    onMounted(() => {\n      inject('mqttClient').then(client => {\n        mqttClient = client;\n        setupClient();\n        updateVariables();\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    /**\n     * Execute when the component is unmounted\n     */\n    onUnmounted(() => {\n      cleanClient();\n    });\n    function setupClient() {\n      if (mqttClient) {\n        subscribedTopics.forEach(topic => {\n          mqttClient.subscribe(topic);\n          console.log(\"subscribed to \" + topic);\n        });\n      }\n    }\n    function cleanClient() {\n      if (mqttClient) {\n        subscribedTopics.forEach(topic => {\n          mqttClient.unsubscribe(topic);\n          console.log(\"unsubscribed from \" + topic);\n        });\n      }\n    }\n    function updateVariables() {}\n  }\n};","map":{"version":3,"mappings":"AAMA,SAAQA,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,GAAG,QAAO,KAAK;AAEvD,eAAe;EACbC,IAAI,EAAE,MAAM;EAEZC,KAAK,EAAE,YAAY;IACjB,MAAMC,gBAAe,GAAI,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO;IACnD,IAAIC,UAAS,GAAI,IAAG;IAEpBN,SAAS,CAAC,MAAM;MACdD,MAAM,CAAC,YAAY,EACdQ,IAAI,CAAEC,MAAM,IAAK;QAChBF,UAAS,GAAIE,MAAK;QAElBC,WAAW,EAAC;QACZC,eAAe,EAAC;MAClB,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG;MACjB,CAAC,CAAC;IACR,CAAC;;IAED;;;IAGAX,WAAW,CAAC,MAAK;MACfc,WAAW,EAAC;IACd,CAAC;IAED,SAASN,WAAW,GAAG;MACrB,IAAIH,UAAU,EAAE;QACdD,gBAAgB,CAACW,OAAO,CAAGC,KAAK,IAAI;UAClCX,UAAU,CAACY,SAAS,CAACD,KAAK;UAC1BJ,OAAO,CAACC,GAAG,CAAC,gBAAe,GAAIG,KAAK;QACtC,CAAC;MACH;IACF;IAEA,SAASF,WAAW,GAAG;MACrB,IAAGT,UAAU,EAAC;QACZD,gBAAgB,CAACW,OAAO,CAAGC,KAAK,IAAI;UAClCX,UAAU,CAACa,WAAW,CAACF,KAAK;UAC5BJ,OAAO,CAACC,GAAG,CAAC,oBAAmB,GAAIG,KAAK;QAC1C,CAAC;MACH;IACF;IAEA,SAASP,eAAe,GAAE,CAC1B;EACF;AACF","names":["inject","onMounted","onUnmounted","ref","name","setup","subscribedTopics","mqttClient","then","client","setupClient","updateVariables","catch","err","console","log","cleanClient","forEach","topic","subscribe","unsubscribe"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  Home\n</template>\n\n<script>\n\nimport {inject, onMounted, onUnmounted, ref} from \"vue\";\n\nexport default {\n  name: \"Home\",\n\n  setup: function () {\n    const subscribedTopics = ['hello', 'world', 'bitch']\n    let mqttClient = null\n\n    onMounted(() => {\n      inject('mqttClient')\n          .then((client) => {\n            mqttClient = client\n\n            setupClient()\n            updateVariables()\n          })\n          .catch((err) => {\n            console.log(err)\n          });\n    })\n\n    /**\n     * Execute when the component is unmounted\n     */\n    onUnmounted(()=> {\n      cleanClient()\n    })\n\n    function setupClient() {\n      if (mqttClient) {\n        subscribedTopics.forEach( (topic)=> {\n          mqttClient.subscribe(topic)\n          console.log(\"subscribed to \" + topic)\n        })\n      }\n    }\n\n    function cleanClient() {\n      if(mqttClient){\n        subscribedTopics.forEach( (topic)=> {\n          mqttClient.unsubscribe(topic)\n          console.log(\"unsubscribed from \" + topic)\n        })\n      }\n    }\n\n    function updateVariables(){\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}