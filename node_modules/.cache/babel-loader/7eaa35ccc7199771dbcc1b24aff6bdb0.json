{"ast":null,"code":"import _defineProperty from \"/home/davidf/Desktop/SSB/ssb-interface-v2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**\n * Class that is used to get data from the API\n * Written by: David Farah\n * Email: david.farah@epfl.ch\n */\nexport default class apiUtils {\n  //serverAddress = \"http://34.65.125.98:3000\"\n\n  /**\n   * Method called when object is built\n   * @param apiPath can be used to set a different api endpoint\n   */\n  constructor(apiPath) {\n    _defineProperty(this, \"serverAddress\", \"http://localhost:3000\");\n    _defineProperty(this, \"apiPath\", \"/api/configs/\");\n    if (apiPath) this.apiPath = apiPath;\n  }\n\n  /**\n   * Get raw configuration data from API\n   * @param configName Name of the config file\n   * @returns {Promise<any>} config json data promise (async)\n   */\n  async getConfig(configName) {\n    let response = await fetch(this.serverAddress + this.apiPath + configName);\n    return JSON.parse(await response.text());\n  }\n}","map":{"version":3,"names":["apiUtils","constructor","apiPath","getConfig","configName","response","fetch","serverAddress","JSON","parse","text"],"sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/composables/apiUtils.mjs"],"sourcesContent":["/**\n * Class that is used to get data from the API\n * Written by: David Farah\n * Email: david.farah@epfl.ch\n */\nexport default class apiUtils {\n    serverAddress = \"http://localhost:3000\"\n    //serverAddress = \"http://34.65.125.98:3000\"\n    apiPath = \"/api/configs/\"\n\n    /**\n     * Method called when object is built\n     * @param apiPath can be used to set a different api endpoint\n     */\n    constructor(apiPath) {\n        if (apiPath) this.apiPath = apiPath\n    }\n\n    /**\n     * Get raw configuration data from API\n     * @param configName Name of the config file\n     * @returns {Promise<any>} config json data promise (async)\n     */\n    async getConfig(configName) {\n        let response = await fetch(this.serverAddress + this.apiPath + configName)\n        return JSON.parse(await response.text())\n    }\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,QAAQ,CAAC;EAE1B;;EAGA;AACJ;AACA;AACA;EACIC,WAAW,CAACC,OAAO,EAAE;IAAA,uCARL,uBAAuB;IAAA,iCAE7B,eAAe;IAOrB,IAAIA,OAAO,EAAE,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvC;;EAEA;AACJ;AACA;AACA;AACA;EACI,MAAMC,SAAS,CAACC,UAAU,EAAE;IACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,IAAI,CAACC,aAAa,GAAG,IAAI,CAACL,OAAO,GAAGE,UAAU,CAAC;IAC1E,OAAOI,IAAI,CAACC,KAAK,CAAC,MAAMJ,QAAQ,CAACK,IAAI,EAAE,CAAC;EAC5C;AACJ"},"metadata":{},"sourceType":"module"}