{"ast":null,"code":"import { ref, watch } from \"vue\";\nexport default {\n  name: \"Status_panel\",\n  props: ['canUpdate', 'connected'],\n  emits: ['subscribeToFields', 'updateData'],\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    let dataObject = ref({});\n    let initialized = ref(false);\n    let requiredFields = {\n      \"Motor 1\": \"motor_controller_1/pwm/warnings\",\n      \"Motor 2\": \"motor_controller_2/pwm/warnings\",\n      \"Main foil\": \"main_position_motor/txpdo_1/statusword\",\n      \"Back foil\": \"back_position_motor/txpdo_1/statusword\",\n      \"Lat foil\": \"lat_position_motor/txpdo_1/statusword\",\n      \"FCU\": \"fcu/status_01/general_status\",\n      \"IMU\": \"imu/status_01/general_status\",\n      \"Battery\": \"battery/pack_info/status\",\n      \"Height Sensor\": \"fcu/height_sensor/height_sensor_status\"\n    };\n    let connected = ref(props.connected);\n    watch(() => props.connected, () => {\n      connected.value = props.connected;\n    });\n    emit(\"subscribeToFields\", requiredFields);\n    setInterval(() => {\n      if (props.canUpdate) {\n        emit(\"updateData\", requiredFields, dataObject);\n        if (!initialized.value) initialized.value = true;\n      }\n    }, 1000);\n    return {\n      dataObject,\n      initialized,\n      connected\n    };\n  }\n};","map":{"version":3,"mappings":"AAYA,SAAQA,GAAG,EAAEC,KAAK,QAAO,KAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;EACjCC,KAAK,EAAE,CAAC,mBAAmB,EAAE,YAAY,CAAC;EAE1CC,KAAK,CAACF,KAAK,QAAU;IAAA,IAAR;MAACG;IAAI,CAAC;IACjB,IAAIC,UAAS,GAAIP,GAAG,CAAC,CAAC,CAAC;IACvB,IAAIQ,WAAU,GAAIR,GAAG,CAAC,KAAK;IAE3B,IAAIS,cAAa,GAAI;MACnB,SAAS,EAAE,iCAAiC;MAC5C,SAAS,EAAE,iCAAiC;MAC5C,WAAW,EAAE,wCAAwC;MACrD,WAAW,EAAE,wCAAwC;MACrD,UAAU,EAAE,uCAAuC;MACnD,KAAK,EAAE,8BAA8B;MACrC,KAAK,EAAE,8BAA8B;MACrC,SAAS,EAAE,0BAA0B;MACrC,eAAe,EAAE;IACnB;IAEA,IAAIC,SAAQ,GAAIV,GAAG,CAACG,KAAK,CAACO,SAAS;IACnCT,KAAK,CAAC,MAAIE,KAAK,CAACO,SAAS,EAAE,MAAI;MAC7BA,SAAS,CAACC,KAAI,GAAIR,KAAK,CAACO,SAAQ;IAClC,CAAC;IAEDJ,IAAI,CAAC,mBAAmB,EAAEG,cAAc;IAExCG,WAAW,CAAE,MAAI;MACf,IAAIT,KAAK,CAACU,SAAS,EAAE;QACnBP,IAAI,CAAC,YAAY,EAAEG,cAAc,EAAEF,UAAU;QAC7C,IAAG,CAACC,WAAW,CAACG,KAAK,EAAEH,WAAW,CAACG,KAAI,GAAI,IAAG;MAChD;IACF,GAAI,IAAI;IAER,OAAO;MAACJ,UAAU;MAAEC,WAAW;MAAEE;IAAS;EAC5C;AACF","names":["ref","watch","name","props","emits","setup","emit","dataObject","initialized","requiredFields","connected","value","setInterval","canUpdate"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/components/Home/Status_panel.vue"],"sourcesContent":["<template>\n  <span class=\"plugin\">\n    <ul>\n      <li> <div>Broker connection:</div> <div :class=\"connected ? 'green': 'red'\"/> </li>\n      <li v-for=\"(values, fieldName) in dataObject\">\n        <div>{{fieldName}}:</div> <div :class=\"values[0]===0 ? 'green': 'red'\"/>\n      </li>\n    </ul>\n  </span>\n</template>\n\n<script>\nimport {ref, watch} from \"vue\";\n\nexport default {\n  name: \"Status_panel\",\n  props: ['canUpdate', 'connected'],\n  emits: ['subscribeToFields', 'updateData'],\n\n  setup(props, {emit}) {\n    let dataObject = ref({})\n    let initialized = ref(false)\n\n    let requiredFields = {\n      \"Motor 1\": \"motor_controller_1/pwm/warnings\",\n      \"Motor 2\": \"motor_controller_2/pwm/warnings\",\n      \"Main foil\": \"main_position_motor/txpdo_1/statusword\",\n      \"Back foil\": \"back_position_motor/txpdo_1/statusword\",\n      \"Lat foil\": \"lat_position_motor/txpdo_1/statusword\",\n      \"FCU\": \"fcu/status_01/general_status\",\n      \"IMU\": \"imu/status_01/general_status\",\n      \"Battery\": \"battery/pack_info/status\",\n      \"Height Sensor\": \"fcu/height_sensor/height_sensor_status\",\n    }\n\n    let connected = ref(props.connected)\n    watch(()=>props.connected, ()=>{\n      connected.value = props.connected\n    })\n\n    emit(\"subscribeToFields\", requiredFields)\n\n    setInterval( ()=>{\n      if (props.canUpdate) {\n        emit(\"updateData\", requiredFields, dataObject)\n        if(!initialized.value) initialized.value = true\n      }\n    } , 1000)\n\n    return {dataObject, initialized, connected}\n  }\n}\n</script>\n\n<style scoped>\n.green {\n  background: green;\n  border-radius: 50%;\n  width: 1rem;\n  height: 1rem;\n}\n\n.red {\n  background: red;\n  border-radius: 50%;\n  width: 1rem;\n  height: 1rem;\n}\n\nul{\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  column-gap: 0.5rem;\n  row-gap: ;\n}\n\nli {\n  display: grid;\n  grid-template-columns: 1.5fr 0.5fr;\n  gap: 0;\n  width: 48%;\n  text-align: center;\n}\n\nli div {\n  margin: auto;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}