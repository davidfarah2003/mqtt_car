{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-main\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Home \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_connected_view = _resolveComponent(\"connected-view\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createVNode(_component_connected_view, {\n    subscribedTopics: _ctx.subscribedTopics,\n    dataCallBack: _ctx.dataCallBack\n  }, {\n    default: _withCtx(data => [_hoisted_2, data.connected ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_3, \"Connected\")) : (_openBlock(), _createElementBlock(\"h1\", _hoisted_4, \"Disconnected\")), _createElementVNode(\"h3\", null, \"Data: \" + _toDisplayString(_ctx.sensorData[\"somseNamse/namez\"]), 1 /* TEXT */), _createElementVNode(\"h4\", null, \"Subscribed topics: \" + _toDisplayString(data.subscribedTopics), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"subscribedTopics\", \"dataCallBack\"])]);\n}","map":{"version":3,"mappings":";;EACWA,KAAK,EAAC;AAAU;gCAGrBC,oBAAe,YAAX,QAAM;;;;;;;;;uBAHdC,oBAWU,WAXVC,UAWU,GATRC,aAOiBC;IAPeC,gBAAgB,EAAEC,qBAAgB;IAAGC,YAAY,EAAED;;sBAA1DE,IAAI,KAC3BC,UAAe,EACLD,IAAI,CAACE,SAAS,kBAAxBT,oBAAwC,kBAAd,WAAS,oBACnCA,oBAA4B,kBAAjB,cAAY,IAEvBD,oBAAiD,YAA7C,QAAM,oBAAEM,eAAU,sCACtBN,oBAAqD,YAAjD,qBAAmB,oBAAEQ,IAAI,CAACH,gBAAgB","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_connected_view","subscribedTopics","_ctx","dataCallBack","data","_hoisted_2","connected"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  <section class=\"app-main\">\n\n    <connected-view  v-slot=\"data\" :subscribedTopics=\"subscribedTopics\" :dataCallBack=\"dataCallBack\">\n      <h1> Home </h1>\n      <h1 v-if=\"data.connected\">Connected</h1>\n      <h1 v-else>Disconnected</h1>\n\n      <h3>Data: {{sensorData[\"somseNamse/namez\"]}}</h3>\n      <h4>Subscribed topics: {{data.subscribedTopics}}</h4>\n    </connected-view>\n\n  </section>\n</template>\n\n<script>\nimport ConnectedView from \"@/views/ConnectedView\";\nimport {ref} from \"vue\";\nimport retrieveDataFromJSON from \"@/composables/responseUtils\";\n\nexport default {\n  name: \"Home\",\n  components: {ConnectedView},\n\n\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n    const sensorData = ref({})\n\n\n    let homeData = {\n      FCU: {\n        state_machine: {\n          global_state: -1,\n          flight_state: -1,\n          flight_mode: -1,\n          arming_state: -1,\n        },\n\n        height_sensor: {\n          height_sensor_status : -1,\n          height_mesure: NaN\n        }\n\n\n        height_filtered: NaN,\n        general_status: -1,\n        event_flags: -1,\n        lat_foil_angle: NaN,\n        main_foil_angle: NaN,\n        back_foil_angle: NaN,\n        speed_sp: NaN,\n        height_sp: NaN,\n        roll_sp: NaN,\n        roll_rate_sp: NaN,\n        height_rate_sp: NaN,\n        pitch_sp: NaN,\n        pitch_rate_sp: NaN,\n        palpeur_altitude_filtered: NaN,\n        heartBeat: NaN,\n      },\n\n      motor_controller_1: {\n        battery_tension: NaN,\n        battery_current: NaN,\n        speed: NaN,\n        ctrl_temp: NaN,\n        pwm_act: NaN,\n        pwm_req: NaN,\n      },\n\n      motor_controller_2: {\n        battery_tension: NaN,\n        battery_current: NaN,\n        speed: NaN,\n        ctrl_temp: NaN,\n        pwm_act: NaN,\n        pwm_req: NaN,\n      },\n\n      main_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN,\n      },\n\n      lat_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN,\n        position_controller_P_gain: NaN,\n        position_controller_I_gain: NaN,\n        position_controller_D_gain: NaN,\n      },\n\n      back_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN,\n      },\n\n      battery: {\n        pack_voltage: NaN,\n        pack_current: NaN,\n        pack_soc: NaN,\n        volt_cell_1: NaN,\n        volt_cell_2: NaN,\n        volt_cell_3: NaN,\n        volt_cell_4: NaN,\n        volt_cell_5: NaN,\n        volt_cell_6: NaN,\n        volt_cell_7: NaN,\n        volt_cell_8: NaN,\n        volt_cell_9: NaN,\n        volt_cell_10: NaN,\n        volt_cell_11: NaN,\n        volt_cell_12: NaN,\n        temp_sens_1: NaN,\n        temp_sens_2: NaN,\n        temp_sens_3: NaN,\n        temp_sens_4: NaN,\n        temp_sens_5: NaN,\n        temp_sens_6: NaN,\n        temp_sens_7: NaN,\n        temp_sens_8: NaN,\n        temp_sens_9: NaN,\n        temp_sens_10: NaN,\n        temp_sens_11: NaN,\n        temp_sens_12: NaN,\n        mppt_1: NaN,\n        mppt_2: NaN,\n        mppt_3: NaN,\n        mppt_4: NaN,\n        mppt_5: NaN,\n        mppt_6: NaN,\n        mppt_7: NaN,\n        mppt_8: NaN,\n        mppt_9: NaN,\n        mppt_10: NaN,\n        temp_BMS: NaN,\n        temp_ext_1: NaN,\n        temp_ext_2: NaN,\n        bms_status: NaN,\n        status: NaN,\n      },\n\n      cockpit_arduino: {\n        speedCommand: NaN,\n        rollCommand: NaN,\n        joystickCommand: NaN,\n        tuningCommand: NaN,\n      },\n\n      palpeur: { palpeur_altitude_1: NaN },\n\n      CUS_arduino: { waterCooling: NaN, heartBeat: NaN },\n\n      actuation: {\n        current_main: NaN,\n        current_back: NaN,\n        current_lat: NaN,\n        heartBeat: NaN,\n      },\n\n      arduino_mainbox: { heartBeat: NaN },\n      mesure_altitude: {\n        barometre_mainbox: NaN,\n        barometre_palpeur: NaN,\n        IR_mainbox: NaN,\n        IR_palpeur: NaN,\n      },\n    }\n\n    let dataCallBack = (receivedData) => {\n      retrieveDataFromJSON(receivedData, sensorData)\n\n      console.log(sensorData)\n    }\n    return {subscribedTopics, dataCallBack, sensorData}\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}