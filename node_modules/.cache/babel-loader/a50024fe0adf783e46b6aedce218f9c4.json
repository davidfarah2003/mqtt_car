{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ConnectedView from \"@/views/ConnectedView\";\nimport homeData from \"@/composables/dataObjects\";\nimport nav_overview from \"@/components/FCU/Nav_overview\";\nimport Status_panel from \"@/components/Home/Status_panel\";\nimport { computed, onActivated, onDeactivated, ref, watch } from \"vue\";\nimport mqttUtils from \"@/composables/mqttUtils.mjs\";\nexport default {\n  name: \"Home\",\n  components: {\n    Status_panel: Status_panel,\n    ConnectedView,\n    nav_overview\n  },\n  setup: function () {\n    let subscribedTopics = ref([]); //Array containing the subscribed topics for this component\n    let status_panel_fields = ref();\n    let dataObject = ref();\n    let isActive = false;\n    let dataIsAvailable = ref(false);\n    const updateDataObject = data => {\n      if (!dataIsAvailable.value) {\n        dataIsAvailable.value = true;\n      }\n      dataObject.value = data.value;\n    };\n    watch(dataObject, () => {\n      console.log(dataObject.value);\n    });\n    let updateChildModuleValues = (requiredValues, childData) => {\n      let fieldPathArray = [];\n      Object.entries(requiredValues).forEach(_ref => {\n        let [fieldName, fieldPath] = _ref;\n        fieldPathArray = fieldPath.split(\"/\");\n        childData.value[fieldName] = dataObject.value[fieldPathArray[0]][fieldPathArray[1]][fieldPathArray[2]];\n      });\n      console.log(\"module data\");\n      console.log(childData);\n    };\n    let subscribeToModuleFields = requiredValues => {\n      let fieldPathArray = [];\n      Object.entries(requiredValues).forEach(_ref2 => {\n        let [fieldName, fieldPath] = _ref2;\n        fieldPathArray = fieldPath.split(\"/\");\n        subscribedTopics.value.push(`${fieldPathArray[0]}/${fieldPathArray[1]}`);\n      });\n      console.log(\"subscribed:\");\n      console.log(subscribedTopics.value);\n    };\n    onActivated(() => {\n      isActive = true;\n    });\n    onDeactivated(() => {\n      isActive = false;\n    });\n    const canUpdateChildData = computed(() => {\n      return dataObject.value && isActive;\n    });\n    return {\n      subscribedTopics,\n      dataCallback: updateDataObject,\n      dataObject,\n      updateValues: updateChildModuleValues,\n      canUpdateChildData,\n      subscribeToModuleFields\n    };\n  }\n};","map":{"version":3,"mappings":";AAoBA,OAAOA,aAAY,MAAO,uBAAuB;AACjD,OAAOC,QAAO,MAAO,2BAA2B;AAChD,OAAOC,YAAW,MAAO,+BAA+B;AACxD,OAAOC,YAAW,MAAO,gCAAgC;AACzD,SAAQC,QAAQ,EAAEC,WAAW,EAAEC,aAAa,EAAEC,GAAG,EAAEC,KAAK,QAAO,KAAK;AACpE,OAAOC,SAAQ,MAAO,6BAA6B;AAEnD,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IAACR,YAAY,EAAEA,YAAY;IAAEH,aAAa;IAAEE;EAAY,CAAC;EAErEU,KAAK,EAAE,YAAY;IACjB,IAAIC,gBAAe,GAAIN,GAAG,CAAC,EAAE,CAAC,EAAE;IAChC,IAAIO,mBAAkB,GAAIP,GAAG,EAAE;IAC/B,IAAIQ,UAAS,GAAIR,GAAG,EAAC;IACrB,IAAIS,QAAO,GAAI,KAAK;IAEpB,IAAIC,eAAc,GAAIV,GAAG,CAAC,KAAK;IAE/B,MAAMW,gBAAe,GAAKC,IAAI,IAAK;MACjC,IAAG,CAACF,eAAe,CAACG,KAAK,EAAE;QACzBH,eAAe,CAACG,KAAI,GAAI,IAAG;MAC7B;MACAL,UAAU,CAACK,KAAI,GAAID,IAAI,CAACC,KAAI;IAC9B;IAEAZ,KAAK,CAACO,UAAU,EAAE,MAAI;MACpBM,OAAO,CAACC,GAAG,CAACP,UAAU,CAACK,KAAK;IAC9B,CAAC;IAED,IAAIG,uBAAsB,GAAI,CAACC,cAAc,EAAEC,SAAS,KAAK;MAC3D,IAAIC,cAAa,GAAI,EAAC;MAEtBC,MAAM,CAACC,OAAO,CAACJ,cAAc,CAAC,CAACK,OAAO,CAAC,QAA4B;QAAA,IAA3B,CAACC,SAAS,EAAEC,SAAS,CAAC;QAC5DL,cAAa,GAAIK,SAAS,CAACC,KAAK,CAAC,GAAG;QACpCP,SAAS,CAACL,KAAK,CAACU,SAAS,IAAIf,UAAU,CAACK,KAAK,CAACM,cAAc,CAAC,CAAC,CAAC,CAAC,CAACA,cAAc,CAAC,CAAC,CAAC,CAAC,CAACA,cAAc,CAAC,CAAC,CAAC;MACvG,CAAC;MAEDL,OAAO,CAACC,GAAG,CAAC,aAAa;MACzBD,OAAO,CAACC,GAAG,CAACG,SAAS;IACvB;IAEA,IAAIQ,uBAAsB,GAAKT,cAAc,IAAK;MAChD,IAAIE,cAAa,GAAI,EAAC;MACtBC,MAAM,CAACC,OAAO,CAACJ,cAAc,CAAC,CAACK,OAAO,CAAC,SAA0B;QAAA,IAAzB,CAACC,SAAS,EAAEC,SAAS,CAAC;QAC5DL,cAAa,GAAIK,SAAS,CAACC,KAAK,CAAC,GAAG;QACpCnB,gBAAgB,CAACO,KAAK,CAACc,IAAI,CAAE,GAAER,cAAc,CAAC,CAAC,CAAE,IAAGA,cAAc,CAAC,CAAC,CAAE,EAAC;MACzE,CAAC;MAEDL,OAAO,CAACC,GAAG,CAAC,aAAa;MACzBD,OAAO,CAACC,GAAG,CAACT,gBAAgB,CAACO,KAAK;IACpC;IAEAf,WAAW,CAAC,MAAK;MAACW,QAAO,GAAI,IAAI;IAAA,CAAC;IAClCV,aAAa,CAAC,MAAK;MAACU,QAAO,GAAI,KAAK;IAAA,CAAC;IAErC,MAAMmB,kBAAiB,GAAI/B,QAAQ,CAAC,MAAI;MAAC,OAAOW,UAAU,CAACK,KAAI,IAAKJ,QAAQ;IAAA,CAAC;IAE7E,OAAO;MAACH,gBAAgB;MAAEuB,YAAY,EAAElB,gBAAgB;MAAEH,UAAU;MAClEsB,YAAY,EAAEd,uBAAuB;MAAEY,kBAAkB;MAAEF;IAAuB;EACtF;AAGF","names":["ConnectedView","homeData","nav_overview","Status_panel","computed","onActivated","onDeactivated","ref","watch","mqttUtils","name","components","setup","subscribedTopics","status_panel_fields","dataObject","isActive","dataIsAvailable","updateDataObject","data","value","console","log","updateChildModuleValues","requiredValues","childData","fieldPathArray","Object","entries","forEach","fieldName","fieldPath","split","subscribeToModuleFields","push","canUpdateChildData","dataCallback","updateValues"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  <section class=\"app-main\">\n    <connected-view @dataObject=\"dataCallback\" v-slot=\"data\" :subscribedTopics=\"subscribedTopics\">\n\n      <h1 v-if=\"data.connected\">Connected</h1>\n      <h1 v-else>Disconnected</h1>\n\n      <nav_overview :ref=\"status_panel_fields\" ></nav_overview>\n\n      <status_panel @subscribeFields=\"subscribeToModuleFields\" @updateData=\"updateValues\" :canUpdate=\"canUpdateChildData\"></status_panel>\n\n      <h3>Data: {{}}</h3>\n\n      <h4>Subscribed topics: {{subscribedTopics}}</h4>\n    </connected-view>\n\n  </section>\n</template>\n\n<script>\nimport ConnectedView from \"@/views/ConnectedView\";\nimport homeData from \"@/composables/dataObjects\";\nimport nav_overview from \"@/components/FCU/Nav_overview\";\nimport Status_panel from \"@/components/Home/Status_panel\";\nimport {computed, onActivated, onDeactivated, ref, watch} from \"vue\";\nimport mqttUtils from \"@/composables/mqttUtils.mjs\";\n\nexport default {\n  name: \"Home\",\n  components: {Status_panel: Status_panel, ConnectedView, nav_overview},\n\n  setup: function () {\n    let subscribedTopics = ref([]); //Array containing the subscribed topics for this component\n    let status_panel_fields = ref();\n    let dataObject = ref()\n    let isActive = false;\n\n    let dataIsAvailable = ref(false)\n\n    const updateDataObject = (data) => {\n      if(!dataIsAvailable.value) {\n        dataIsAvailable.value = true\n      }\n      dataObject.value = data.value\n    }\n\n    watch(dataObject, ()=>{\n      console.log(dataObject.value)\n    })\n\n    let updateChildModuleValues = (requiredValues, childData) => {\n      let fieldPathArray = []\n\n      Object.entries(requiredValues).forEach(([fieldName, fieldPath]) => {\n        fieldPathArray = fieldPath.split(\"/\")\n        childData.value[fieldName] = dataObject.value[fieldPathArray[0]][fieldPathArray[1]][fieldPathArray[2]]\n      })\n\n      console.log(\"module data\")\n      console.log(childData)\n    }\n\n    let subscribeToModuleFields = (requiredValues) => {\n      let fieldPathArray = []\n      Object.entries(requiredValues).forEach(([fieldName, fieldPath])=>{\n        fieldPathArray = fieldPath.split(\"/\")\n        subscribedTopics.value.push(`${fieldPathArray[0]}/${fieldPathArray[1]}`)\n      })\n\n      console.log(\"subscribed:\")\n      console.log(subscribedTopics.value)\n    }\n\n    onActivated(()=> {isActive = true})\n    onDeactivated(()=> {isActive = false})\n\n    const canUpdateChildData = computed(()=>{return dataObject.value && isActive})\n\n    return {subscribedTopics, dataCallback: updateDataObject, dataObject,\n      updateValues: updateChildModuleValues, canUpdateChildData, subscribeToModuleFields}\n  }\n\n\n}\n\n</script>\n\n<style scoped>\n.app-main{\n  background: var(--primary);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}