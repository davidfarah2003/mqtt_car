{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ConnectedView from \"@/views/ConnectedView\";\nimport { ref } from \"vue\";\nimport updateDataFromJSON from \"@/composables/responseUtils\";\nimport homeData from \"@/composables/dataObjects\";\nexport default {\n  name: \"Home\",\n  components: {\n    ConnectedView\n  },\n  setup: function () {\n    let subscribedTopics = []; //Array containing the subscribed topics for this component\n    let sensorData = homeData;\n    function buildSubscribedTopics(sensorDataValue) {\n      Object.entries(sensorDataValue).forEach(([component_name, value]) => {\n        Object.keys(value).forEach(message_name => {\n          subscribedTopics.push(`${component_name}/${message_name}`);\n        });\n      });\n    }\n    buildSubscribedTopics(sensorData.value);\n    console.log(subscribedTopics);\n    let dataCallBack = receivedData => {\n      updateDataFromJSON(receivedData, sensorData);\n      console.log(sensorData);\n    };\n    return {\n      subscribedTopics,\n      dataCallBack,\n      sensorData\n    };\n  }\n};","map":{"version":3,"mappings":";AAiBA,OAAOA,aAAY,MAAO,uBAAuB;AACjD,SAAQC,GAAG,QAAO,KAAK;AACvB,OAAOC,kBAAiB,MAAO,6BAA6B;AAC5D,OAAOC,QAAO,MAAO,2BAA2B;AAEhD,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IAACL;EAAa,CAAC;EAG3BM,KAAK,EAAE,YAAY;IACjB,IAAIC,gBAAe,GAAI,EAAE,EAAE;IAC3B,IAAIC,UAAS,GAAIL,QAAO;IAExB,SAASM,qBAAqB,CAACC,eAAe,EAAC;MAC7CC,MAAM,CAACC,OAAO,CAACF,eAAe,CAAC,CAACG,OAAO,CAAC,CAAC,CAACC,cAAc,EAAEC,KAAK,CAAC,KAAK;QACnEJ,MAAM,CAACK,IAAI,CAACD,KAAK,CAAC,CAACF,OAAO,CAAGI,YAAY,IAAI;UAC3CV,gBAAgB,CAACW,IAAI,CAAE,GAAEJ,cAAe,IAAGG,YAAa,EAAC;QAC3D,CAAC;MACH,CAAC,CAAC;IACJ;IACAR,qBAAqB,CAACD,UAAU,CAACO,KAAK;IAEtCI,OAAO,CAACC,GAAG,CAACb,gBAAgB;IAE5B,IAAIc,YAAW,GAAKC,YAAY,IAAK;MACnCpB,kBAAkB,CAACoB,YAAY,EAAEd,UAAU;MAC3CW,OAAO,CAACC,GAAG,CAACZ,UAAU;IACxB;IAEA,OAAO;MAACD,gBAAgB;MAAEc,YAAY;MAAEb;IAAU;EACpD;AACF","names":["ConnectedView","ref","updateDataFromJSON","homeData","name","components","setup","subscribedTopics","sensorData","buildSubscribedTopics","sensorDataValue","Object","entries","forEach","component_name","value","keys","message_name","push","console","log","dataCallBack","receivedData"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  <section class=\"app-main\">\n\n    <connected-view  v-slot=\"data\" :subscribedTopics=\"subscribedTopics\" :dataCallBack=\"dataCallBack\">\n      <h1> Home </h1>\n      <h1 v-if=\"data.connected\">Connected</h1>\n      <h1 v-else>Disconnected</h1>\n\n      <h3>Data: {{sensorData.battery.pack_info.pack_voltage}}</h3>\n\n      <h4>Subscribed topics: {{data.subscribedTopics}}</h4>\n    </connected-view>\n\n  </section>\n</template>\n\n<script>\nimport ConnectedView from \"@/views/ConnectedView\";\nimport {ref} from \"vue\";\nimport updateDataFromJSON from \"@/composables/responseUtils\";\nimport homeData from \"@/composables/dataObjects\";\n\nexport default {\n  name: \"Home\",\n  components: {ConnectedView},\n\n\n  setup: function () {\n    let subscribedTopics = []; //Array containing the subscribed topics for this component\n    let sensorData = homeData\n\n    function buildSubscribedTopics(sensorDataValue){\n      Object.entries(sensorDataValue).forEach(([component_name, value]) => {\n        Object.keys(value).forEach( (message_name)=> {\n          subscribedTopics.push(`${component_name}/${message_name}`)\n        })\n      });\n    }\n    buildSubscribedTopics(sensorData.value)\n    \n    console.log(subscribedTopics)\n\n    let dataCallBack = (receivedData) => {\n      updateDataFromJSON(receivedData, sensorData)\n      console.log(sensorData)\n    }\n\n    return {subscribedTopics, dataCallBack, sensorData}\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}