{"ast":null,"code":"import { inject, onMounted, onUnmounted, ref } from \"vue\";\nexport default {\n  name: \"Home\",\n  setup: function () {\n    let mqttClient = null;\n    onMounted(() => {\n      console.log(\"mounted Home\");\n      inject('mqttClient').then(client => {\n        mqttClient = client;\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    /**\n     * Execute when unmounted and the mqttClient is assigned\n     */\n    onUnmounted(() => {\n      if (mqttClient) {\n        mqttClient.unsubscribe('test');\n        console.log(\"unsubscribed from test\");\n        console.log(\"unmounted Home\");\n      }\n    });\n    function setupClient() {\n      if (mqttClient) {\n        mqttClient.subscribe('test');\n        console.log(\"subscribed to test\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAMA,SAAQA,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,GAAG,QAAO,KAAK;AAEvD,eAAe;EACbC,IAAI,EAAE,MAAM;EAEZC,KAAK,EAAE,YAAY;IACjB,IAAIC,UAAS,GAAI,IAAG;IAEpBL,SAAS,CAAC,MAAM;MACdM,OAAO,CAACC,GAAG,CAAC,cAAc;MAE1BR,MAAM,CAAC,YAAY,EACdS,IAAI,CAAEC,MAAM,IAAK;QAChBJ,UAAS,GAAII,MAAK;MACpB,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACdL,OAAO,CAACC,GAAG,CAACI,GAAG;MACjB,CAAC,CAAC;IACR,CAAC;;IAED;;;IAGAV,WAAW,CAAC,MAAK;MACf,IAAGI,UAAU,EAAC;QACZA,UAAU,CAACO,WAAW,CAAC,MAAM;QAC7BN,OAAO,CAACC,GAAG,CAAC,wBAAwB;QACpCD,OAAO,CAACC,GAAG,CAAC,gBAAgB;MAC9B;IACF,CAAC;IAED,SAASM,WAAW,GAAG;MACrB,IAAIR,UAAU,EAAE;QACdA,UAAU,CAACS,SAAS,CAAC,MAAM;QAC3BR,OAAO,CAACC,GAAG,CAAC,oBAAoB;MAClC;IACF;EAEF;AACF","names":["inject","onMounted","onUnmounted","ref","name","setup","mqttClient","console","log","then","client","catch","err","unsubscribe","setupClient","subscribe"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  Home\n</template>\n\n<script>\n\nimport {inject, onMounted, onUnmounted, ref} from \"vue\";\n\nexport default {\n  name: \"Home\",\n\n  setup: function () {\n    let mqttClient = null\n\n    onMounted(() => {\n      console.log(\"mounted Home\")\n\n      inject('mqttClient')\n          .then((client) => {\n            mqttClient = client\n          })\n          .catch((err) => {\n            console.log(err)\n          });\n    })\n\n    /**\n     * Execute when unmounted and the mqttClient is assigned\n     */\n    onUnmounted(()=> {\n      if(mqttClient){\n        mqttClient.unsubscribe('test')\n        console.log(\"unsubscribed from test\")\n        console.log(\"unmounted Home\")\n      }\n    })\n    \n    function setupClient() {\n      if (mqttClient) {\n        mqttClient.subscribe('test')\n        console.log(\"subscribed to test\")\n      }\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}