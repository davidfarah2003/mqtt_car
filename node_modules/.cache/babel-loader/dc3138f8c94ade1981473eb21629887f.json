{"ast":null,"code":"import ConnectedView from \"@/views/ConnectedView\";\nimport { ref } from \"vue\";\nimport retrieveDataFromJSON from \"@/composables/responseUtils\";\nexport default {\n  name: \"Home\",\n  components: {\n    ConnectedView\n  },\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n    const sensorData = ref({});\n    let homeData = {\n      FCU: {\n        state_machine: {\n          global_state: -1,\n          flight_state: -1,\n          flight_mode: -1,\n          arming_state: -1\n        },\n        height_sensor: {\n          height_sensor_status: -1,\n          height_measure: NaN\n        },\n        event_flags: {\n          event_flags: -1\n        },\n        bridge_ahrs: {\n          palpeur_altitude_filtered: NaN,\n          vel_x: NaN,\n          yaw_rate: NaN,\n          roll: NaN,\n          pitch: NaN\n        },\n        bridge_motor: {\n          motor_1_ctrl_temp: NaN,\n          motor_1_current: NaN,\n          motor_1_rpm: NaN,\n          motor_2_ctrl_temp: NaN,\n          motor_2_current: NaN,\n          motor_2_rpm: NaN\n        },\n        height_filtered: NaN,\n        general_status: -1,\n        lat_foil_angle: NaN,\n        main_foil_angle: NaN,\n        back_foil_angle: NaN,\n        speed_sp: NaN,\n        height_sp: NaN,\n        roll_sp: NaN,\n        roll_rate_sp: NaN,\n        height_rate_sp: NaN,\n        pitch_sp: NaN,\n        pitch_rate_sp: NaN,\n        palpeur_altitude_filtered: NaN,\n        heartBeat: NaN\n      },\n      motor_controller_1: {\n        battery_tension: NaN,\n        battery_current: NaN,\n        speed: NaN,\n        ctrl_temp: NaN,\n        pwm_act: NaN,\n        pwm_req: NaN\n      },\n      motor_controller_2: {\n        battery_tension: NaN,\n        battery_current: NaN,\n        speed: NaN,\n        ctrl_temp: NaN,\n        pwm_act: NaN,\n        pwm_req: NaN\n      },\n      main_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN\n      },\n      lat_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN,\n        position_controller_P_gain: NaN,\n        position_controller_I_gain: NaN,\n        position_controller_D_gain: NaN\n      },\n      back_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN\n      },\n      battery: {\n        pack_voltage: NaN,\n        pack_current: NaN,\n        pack_soc: NaN,\n        volt_cell_1: NaN,\n        volt_cell_2: NaN,\n        volt_cell_3: NaN,\n        volt_cell_4: NaN,\n        volt_cell_5: NaN,\n        volt_cell_6: NaN,\n        volt_cell_7: NaN,\n        volt_cell_8: NaN,\n        volt_cell_9: NaN,\n        volt_cell_10: NaN,\n        volt_cell_11: NaN,\n        volt_cell_12: NaN,\n        temp_sens_1: NaN,\n        temp_sens_2: NaN,\n        temp_sens_3: NaN,\n        temp_sens_4: NaN,\n        temp_sens_5: NaN,\n        temp_sens_6: NaN,\n        temp_sens_7: NaN,\n        temp_sens_8: NaN,\n        temp_sens_9: NaN,\n        temp_sens_10: NaN,\n        temp_sens_11: NaN,\n        temp_sens_12: NaN,\n        mppt_1: NaN,\n        mppt_2: NaN,\n        mppt_3: NaN,\n        mppt_4: NaN,\n        mppt_5: NaN,\n        mppt_6: NaN,\n        mppt_7: NaN,\n        mppt_8: NaN,\n        mppt_9: NaN,\n        mppt_10: NaN,\n        temp_BMS: NaN,\n        temp_ext_1: NaN,\n        temp_ext_2: NaN,\n        bms_status: NaN,\n        status: NaN\n      },\n      cockpit_arduino: {\n        speedCommand: NaN,\n        rollCommand: NaN,\n        joystickCommand: NaN,\n        tuningCommand: NaN\n      },\n      palpeur: {\n        palpeur_altitude_1: NaN\n      },\n      CUS_arduino: {\n        waterCooling: NaN,\n        heartBeat: NaN\n      },\n      actuation: {\n        current_main: NaN,\n        current_back: NaN,\n        current_lat: NaN,\n        heartBeat: NaN\n      },\n      arduino_mainbox: {\n        heartBeat: NaN\n      },\n      mesure_altitude: {\n        barometre_mainbox: NaN,\n        barometre_palpeur: NaN,\n        IR_mainbox: NaN,\n        IR_palpeur: NaN\n      }\n    };\n    let dataCallBack = receivedData => {\n      retrieveDataFromJSON(receivedData, sensorData);\n      console.log(sensorData);\n    };\n    return {\n      subscribedTopics,\n      dataCallBack,\n      sensorData\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ConnectedView","ref","retrieveDataFromJSON","name","components","setup","subscribedTopics","sensorData","homeData","FCU","state_machine","global_state","flight_state","flight_mode","arming_state","height_sensor","height_sensor_status","height_measure","NaN","event_flags","bridge_ahrs","palpeur_altitude_filtered","vel_x","yaw_rate","roll","pitch","bridge_motor","motor_1_ctrl_temp","motor_1_current","motor_1_rpm","motor_2_ctrl_temp","motor_2_current","motor_2_rpm","height_filtered","general_status","lat_foil_angle","main_foil_angle","back_foil_angle","speed_sp","height_sp","roll_sp","roll_rate_sp","height_rate_sp","pitch_sp","pitch_rate_sp","heartBeat","motor_controller_1","battery_tension","battery_current","speed","ctrl_temp","pwm_act","pwm_req","motor_controller_2","main_position_motor","modes_of_operation_display","current_demand_value","velocity_demand_value","position_demand_value","position_actual_value","statusword","error_code","lat_position_motor","position_controller_P_gain","position_controller_I_gain","position_controller_D_gain","back_position_motor","battery","pack_voltage","pack_current","pack_soc","volt_cell_1","volt_cell_2","volt_cell_3","volt_cell_4","volt_cell_5","volt_cell_6","volt_cell_7","volt_cell_8","volt_cell_9","volt_cell_10","volt_cell_11","volt_cell_12","temp_sens_1","temp_sens_2","temp_sens_3","temp_sens_4","temp_sens_5","temp_sens_6","temp_sens_7","temp_sens_8","temp_sens_9","temp_sens_10","temp_sens_11","temp_sens_12","mppt_1","mppt_2","mppt_3","mppt_4","mppt_5","mppt_6","mppt_7","mppt_8","mppt_9","mppt_10","temp_BMS","temp_ext_1","temp_ext_2","bms_status","status","cockpit_arduino","speedCommand","rollCommand","joystickCommand","tuningCommand","palpeur","palpeur_altitude_1","CUS_arduino","waterCooling","actuation","current_main","current_back","current_lat","arduino_mainbox","mesure_altitude","barometre_mainbox","barometre_palpeur","IR_mainbox","IR_palpeur","dataCallBack","receivedData","console","log"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  <section class=\"app-main\">\n\n    <connected-view  v-slot=\"data\" :subscribedTopics=\"subscribedTopics\" :dataCallBack=\"dataCallBack\">\n      <h1> Home </h1>\n      <h1 v-if=\"data.connected\">Connected</h1>\n      <h1 v-else>Disconnected</h1>\n\n      <h3>Data: {{sensorData[\"somseNamse/namez\"]}}</h3>\n      <h4>Subscribed topics: {{data.subscribedTopics}}</h4>\n    </connected-view>\n\n  </section>\n</template>\n\n<script>\nimport ConnectedView from \"@/views/ConnectedView\";\nimport {ref} from \"vue\";\nimport retrieveDataFromJSON from \"@/composables/responseUtils\";\n\nexport default {\n  name: \"Home\",\n  components: {ConnectedView},\n\n\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n    const sensorData = ref({})\n\n\n    let homeData = {\n      FCU: {\n        state_machine: {\n          global_state: -1,\n          flight_state: -1,\n          flight_mode: -1,\n          arming_state: -1,\n        },\n        height_sensor: {\n          height_sensor_status : -1,\n          height_measure: NaN\n        },\n        event_flags: {\n          event_flags: -1,\n        },\n        bridge_ahrs: {\n          palpeur_altitude_filtered: NaN,\n          vel_x: NaN,\n          yaw_rate: NaN,\n          roll: NaN,\n          pitch: NaN,\n        },\n        bridge_motor:{\n          motor_1_ctrl_temp: NaN,\n          motor_1_current: NaN,\n          motor_1_rpm: NaN,\n          motor_2_ctrl_temp: NaN,\n          motor_2_current: NaN,\n          motor_2_rpm: NaN,\n        },\n\n\n\n\n        height_filtered: NaN,\n        general_status: -1,\n        lat_foil_angle: NaN,\n        main_foil_angle: NaN,\n        back_foil_angle: NaN,\n        speed_sp: NaN,\n        height_sp: NaN,\n        roll_sp: NaN,\n        roll_rate_sp: NaN,\n        height_rate_sp: NaN,\n        pitch_sp: NaN,\n        pitch_rate_sp: NaN,\n        palpeur_altitude_filtered: NaN,\n        heartBeat: NaN,\n      },\n\n      motor_controller_1: {\n        battery_tension: NaN,\n        battery_current: NaN,\n        speed: NaN,\n        ctrl_temp: NaN,\n        pwm_act: NaN,\n        pwm_req: NaN,\n      },\n\n      motor_controller_2: {\n        battery_tension: NaN,\n        battery_current: NaN,\n        speed: NaN,\n        ctrl_temp: NaN,\n        pwm_act: NaN,\n        pwm_req: NaN,\n      },\n\n      main_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN,\n      },\n\n      lat_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN,\n        position_controller_P_gain: NaN,\n        position_controller_I_gain: NaN,\n        position_controller_D_gain: NaN,\n      },\n\n      back_position_motor: {\n        modes_of_operation_display: NaN,\n        current_demand_value: NaN,\n        velocity_demand_value: NaN,\n        position_demand_value: NaN,\n        position_actual_value: NaN,\n        statusword: NaN,\n        error_code: NaN,\n      },\n\n      battery: {\n        pack_voltage: NaN,\n        pack_current: NaN,\n        pack_soc: NaN,\n        volt_cell_1: NaN,\n        volt_cell_2: NaN,\n        volt_cell_3: NaN,\n        volt_cell_4: NaN,\n        volt_cell_5: NaN,\n        volt_cell_6: NaN,\n        volt_cell_7: NaN,\n        volt_cell_8: NaN,\n        volt_cell_9: NaN,\n        volt_cell_10: NaN,\n        volt_cell_11: NaN,\n        volt_cell_12: NaN,\n        temp_sens_1: NaN,\n        temp_sens_2: NaN,\n        temp_sens_3: NaN,\n        temp_sens_4: NaN,\n        temp_sens_5: NaN,\n        temp_sens_6: NaN,\n        temp_sens_7: NaN,\n        temp_sens_8: NaN,\n        temp_sens_9: NaN,\n        temp_sens_10: NaN,\n        temp_sens_11: NaN,\n        temp_sens_12: NaN,\n        mppt_1: NaN,\n        mppt_2: NaN,\n        mppt_3: NaN,\n        mppt_4: NaN,\n        mppt_5: NaN,\n        mppt_6: NaN,\n        mppt_7: NaN,\n        mppt_8: NaN,\n        mppt_9: NaN,\n        mppt_10: NaN,\n        temp_BMS: NaN,\n        temp_ext_1: NaN,\n        temp_ext_2: NaN,\n        bms_status: NaN,\n        status: NaN,\n      },\n\n      cockpit_arduino: {\n        speedCommand: NaN,\n        rollCommand: NaN,\n        joystickCommand: NaN,\n        tuningCommand: NaN,\n      },\n\n      palpeur: { palpeur_altitude_1: NaN },\n\n      CUS_arduino: { waterCooling: NaN, heartBeat: NaN },\n\n      actuation: {\n        current_main: NaN,\n        current_back: NaN,\n        current_lat: NaN,\n        heartBeat: NaN,\n      },\n\n      arduino_mainbox: { heartBeat: NaN },\n      mesure_altitude: {\n        barometre_mainbox: NaN,\n        barometre_palpeur: NaN,\n        IR_mainbox: NaN,\n        IR_palpeur: NaN,\n      },\n    }\n\n    let dataCallBack = (receivedData) => {\n      retrieveDataFromJSON(receivedData, sensorData)\n\n      console.log(sensorData)\n    }\n    return {subscribedTopics, dataCallBack, sensorData}\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}