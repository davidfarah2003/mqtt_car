{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.dataObject ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_1, _toDisplayString($setup.dataObject[\"motor_1_current\"]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;SACYA,iBAAU,kBAApBC,oBAA4D,mCAApCD,iBAAU","names":["$setup","_createElementBlock"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/components/Home/Status_panel.vue"],"sourcesContent":["<template>\n  <h1 v-if=\"dataObject\">{{dataObject[\"motor_1_current\"]}}</h1>\n\n</template>\n\n<script>\nimport {computed, ref, watch} from \"vue\";\n\nexport default {\n  name: \"Status_panel\",\n  props: ['canUpdate'],\n  emits: ['subscribeFields', 'updateData'],\n\n  setup(props, {emit}) {\n    let dataObject = ref({})\n\n    let requiredFields = {\n      motor_1_current: \"fcu/bridge_motor/motor_1_current\",\n      motor_2_current: \"fcu/bridge_motor/motor_2_current\",\n      main_sts: \"main_position_motor/txpdo_1/statusword\",\n      back_sts: \"back_position_motor/txpdo_1/statusword\",\n      lat_sts: \"lat_position_motor/txpdo_1/statusword\",\n      fcu_sts: \"fcu/status_01/general_status\",\n      imu_sts: \"imu/status_01/general_status\",\n      battery_current: \"battery/pack_info/current\",\n      battery_status: \"battery/pack_info/status\",\n      height_sensor_sts: \"fcu/height_sensor/height_sensor_status\",\n      cockpit_speed_command: \"cockpit_arduino/pilot_command_01/speedcommand\",\n    }\n\n    emit(\"subscribeFields\", requiredFields)\n\n    setInterval( ()=>{\n      if (props.canUpdate) {\n        console.log(\"I can update\")\n        emit(\"updateData\", requiredFields, dataObject)\n        console.log(dataObject[\"motor_1_current\"])\n\n      }\n    } , 200 )\n\n\n    let getData = computed(()=>{\n      if (dataObject.value) return dataObject\n    })\n\n    return {dataObject}\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}