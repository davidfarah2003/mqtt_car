{"ast":null,"code":"import ConnectedView from \"@/views/ConnectedView\";\nexport default {\n  name: \"Home\",\n  components: {\n    ConnectedView\n  },\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n\n    let dataCallBack = receivedData => {\n      const parsed = JSON.parse(receivedData);\n      let sensorData = {};\n      try {\n        parsed.forEach(message => {\n          message[\"sensors\"].forEach(sensor => {\n            if (sensor[\"sensor_name\"] === undefined) {\n              throw new Error(\"Received JSON is not well formatted\");\n            }\n            sensorData[sensor[\"sensor_name\"]] = sensor[\"value\"];\n          });\n        });\n      } catch (err) {\n        console.log(err);\n      }\n      console.log(sensorData);\n    };\n    return {\n      subscribedTopics,\n      dataCallBack\n    };\n  }\n};","map":{"version":3,"mappings":"AAgBA,OAAOA,aAAY,MAAO,uBAAuB;AAEjD,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IAACF;EAAa,CAAC;EAG3BG,KAAK,EAAE,YAAY;IACjB,IAAIC,gBAAe,GAAI,CAAC,MAAM,CAAC,EAAE;;IAEjC,IAAIC,YAAW,GAAKC,YAAY,IAAK;MACnC,MAAMC,MAAK,GAAIC,IAAI,CAACC,KAAK,CAACH,YAAY;MAEtC,IAAII,UAAS,GAAI,CAAC;MAElB,IAAI;QACFH,MAAM,CAACI,OAAO,CAAEC,OAAO,IAAG;UACxBA,OAAO,CAAC,SAAS,CAAC,CAACD,OAAO,CAAEE,MAAM,IAAK;YACrC,IAAGA,MAAM,CAAC,aAAa,MAAMC,SAAS,EAAE;cAAC,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;YAAA;YAC/FL,UAAU,CAACG,MAAM,CAAC,aAAa,CAAC,IAAIA,MAAM,CAAC,OAAO;UACpD,CAAC;QACH,CAAC;MACH,EACA,OAAOG,GAAG,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG;MACjB;MAEAC,OAAO,CAACC,GAAG,CAACR,UAAU;IAExB;IACA,OAAO;MAACN,gBAAgB;MAAEC;IAAY;EACxC;AACF","names":["ConnectedView","name","components","setup","subscribedTopics","dataCallBack","receivedData","parsed","JSON","parse","sensorData","forEach","message","sensor","undefined","Error","err","console","log"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  <section class=\"app-main\">\n\n    <connected-view  v-slot=\"data\" :subscribedTopics=\"subscribedTopics\" :dataCallBack=\"dataCallBack\">\n      <h1> Home </h1>\n      <h1 v-if=\"data.connected\">Connected</h1>\n      <h1 v-else>Disconnected</h1>\n\n      <h3>Data: {{data.test}}</h3>\n      <h4>Subscribed topics: {{data.subscribedTopics}}</h4>\n    </connected-view>\n\n  </section>\n</template>\n\n<script>\nimport ConnectedView from \"@/views/ConnectedView\";\n\nexport default {\n  name: \"Home\",\n  components: {ConnectedView},\n\n\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n\n    let dataCallBack = (receivedData) => {\n      const parsed = JSON.parse(receivedData)\n\n      let sensorData = {}\n\n      try {\n        parsed.forEach((message)=>{\n          message[\"sensors\"].forEach((sensor) => {\n            if(sensor[\"sensor_name\"] === undefined) {throw new Error(\"Received JSON is not well formatted\")}\n            sensorData[sensor[\"sensor_name\"]] = sensor[\"value\"]\n          })\n        })\n      }\n      catch (err) {\n        console.log(err)\n      }\n\n      console.log(sensorData)\n\n    }\n    return {subscribedTopics, dataCallBack}\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}