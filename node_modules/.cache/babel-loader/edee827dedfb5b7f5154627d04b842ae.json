{"ast":null,"code":"import { toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3c3fc574\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"plugin\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_speedometer = _resolveComponent(\"vue-speedometer\");\n  return $setup.initialized ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, [_createTextVNode(_toDisplayString($setup.dataObject) + \" \" + _toDisplayString($setup.dataObject) + \" \" + _toDisplayString($setup.dataObject) + \" \", 1 /* TEXT */), _createVNode(_component_vue_speedometer, {\n    width: 200,\n    ringWidth: 20,\n    needleHeightRatio: 0.7,\n    maxSegmentLabels: 0,\n    segments: 4,\n    value: 333,\n    \"currentValueText:\": \"\",\n    startColor: \"#3ca358\",\n    endColor: \"#a1283a\",\n    needleColor: \"#D8DEE9\",\n    textColor: \"white\"\n  }, null, 8 /* PROPS */, [\"needleHeightRatio\"])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;EACQA,KAAK,EAAC;;;;SAAeC,kBAAW,kBAAtCC,oBAiBO,QAjBPC,UAiBO,qCAhBHF,iBAAU,IAAE,GACd,oBAAEA,iBAAU,IAAE,GACd,oBAAEA,iBAAU,IAAE,GACd,8BAYEG;IAXGC,KAAK,EAAE,GAAG;IACVC,SAAS,EAAE,EAAE;IACbC,iBAAiB,EAAE,GAAG;IACtBC,gBAAgB,EAAE,CAAC;IACnBC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE,GAAG;IACV,mBAAiB,EAAlB,EAAkB;IAClBC,UAAU,EAAC,SAAS;IACpBC,QAAQ,EAAC,SAAS;IAClBC,WAAW,EAAC,SAAS;IACrBC,SAAS,EAAC","names":["class","$setup","_createElementBlock","_hoisted_1","_component_vue_speedometer","width","ringWidth","needleHeightRatio","maxSegmentLabels","segments","value","startColor","endColor","needleColor","textColor"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/components/Home/Dashboard.vue"],"sourcesContent":["<template>\n  <span class=\"plugin\" v-if=\"initialized\">\n    {{dataObject}}\n    {{dataObject}}\n    {{dataObject}}\n    <vue-speedometer\n        :width=\"200\"\n        :ringWidth=\"20\"\n        :needleHeightRatio=\"0.7\"\n        :maxSegmentLabels=\"0\"\n        :segments=\"4\"\n        :value=\"333\"\n        :currentValueText:\n        startColor=\"#3ca358\"\n        endColor=\"#a1283a\"\n        needleColor=\"#D8DEE9\"\n        textColor=\"white\"\n    />\n  </span>\n</template>\n\n<script>\nimport {ref} from \"vue\";\nimport VueSpeedometer from 'vue-speedometer'\n\nexport default {\n  name: \"Dashboard\",\n  props: ['canUpdate', 'connected'],\n  emits: ['subscribeToFields', 'updateData'],\n  components: {VueSpeedometer,},\n\n  setup(props, {emit}) {\n    let dataObject = ref({})\n    let initialized = ref(false)\n\n    //fields to request update\n    let requiredFields = {\n      \"height\" : \"fcu/height_sensor/height_measure\",\n      \"bridge_ahrs\" : \"fcu/bridge_ahrs/*\",\n\n    }\n    emit(\"subscribeToFields\", requiredFields)\n\n    //update intervals for plugin\n    setInterval( ()=>{\n      if (props.canUpdate) {\n        emit(\"updateData\", requiredFields, dataObject)\n        if(!initialized.value) initialized.value = true\n      }\n    } , 500)\n\n    return {dataObject, initialized}\n  }\n}\n</script>\n\n<style scoped>\nvue-speedometer {\n}\n</style>"]},"metadata":{},"sourceType":"module"}