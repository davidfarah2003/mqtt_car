{"ast":null,"code":"import { ref } from \"vue\";\n\n/**\n * Use the MQTT.js library to communicate with broker through websockets (Not TCP - that's why I used precompiled-mqtt)\n * @returns {{}}\n */\nconst getMqttClient = () => {\n  //maybe need to use ref? i dont think\n\n  const mqtt = require('precompiled-mqtt');\n  const options = {\n    // Clean session\n    clean: true,\n    connectTimeout: 4000\n    // Auth\n    //clientId: 'emqx_test',\n    //username: 'emqx_test',\n    //password: 'emqx_test',\n  };\n\n  //const client  = mqtt.connect('mqtt://broker.emqx.io:1883', options)\n\n  const client = mqtt.connect('mqtt://127.0.0.1:9001');\n  client.on('connect', function () {\n    console.log('Connected');\n    client.subscribe('test', function (err) {\n      if (!err) {\n        client.publish('test', 'Hello mqtt');\n      }\n    });\n  });\n  return {\n    client\n  };\n};\ngetMqttClient();\n\n//export default getMqttClient","map":{"version":3,"names":["ref","getMqttClient","mqtt","require","options","clean","connectTimeout","client","connect","on","console","log","subscribe","err","publish"],"sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/composables/getMqttClient.js"],"sourcesContent":["import {ref} from \"vue\";\n\n/**\n * Use the MQTT.js library to communicate with broker through websockets (Not TCP - that's why I used precompiled-mqtt)\n * @returns {{}}\n */\nconst getMqttClient = () => {\n    //maybe need to use ref? i dont think\n\n    const mqtt = require('precompiled-mqtt')\n    const options = {\n        // Clean session\n        clean: true,\n        connectTimeout: 4000,\n        // Auth\n        //clientId: 'emqx_test',\n        //username: 'emqx_test',\n        //password: 'emqx_test',\n    }\n\n\n    //const client  = mqtt.connect('mqtt://broker.emqx.io:1883', options)\n\n    const client  = mqtt.connect('mqtt://127.0.0.1:9001')\n\n    client.on('connect', function () {\n        console.log('Connected')\n        client.subscribe('test', function (err) {\n            if (!err) {\n                client.publish('test', 'Hello mqtt')\n            }\n        })\n    })\n\n\n\n    return {client}\n}\n\ngetMqttClient()\n\n//export default getMqttClient"],"mappings":"AAAA,SAAQA,GAAG,QAAO,KAAK;;AAEvB;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,MAAM;EACxB;;EAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,kBAAkB,CAAC;EACxC,MAAMC,OAAO,GAAG;IACZ;IACAC,KAAK,EAAE,IAAI;IACXC,cAAc,EAAE;IAChB;IACA;IACA;IACA;EACJ,CAAC;;EAGD;;EAEA,MAAMC,MAAM,GAAIL,IAAI,CAACM,OAAO,CAAC,uBAAuB,CAAC;EAErDD,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,YAAY;IAC7BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBJ,MAAM,CAACK,SAAS,CAAC,MAAM,EAAE,UAAUC,GAAG,EAAE;MACpC,IAAI,CAACA,GAAG,EAAE;QACNN,MAAM,CAACO,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC;MACxC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EAIF,OAAO;IAACP;EAAM,CAAC;AACnB,CAAC;AAEDN,aAAa,EAAE;;AAEf"},"metadata":{},"sourceType":"module"}