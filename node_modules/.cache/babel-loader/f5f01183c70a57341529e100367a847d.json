{"ast":null,"code":"import ConnectedView from \"@/views/ConnectedView\";\nimport { ref } from \"vue\";\nimport retrieveDataFromJSON from \"@/composables/responseUtils\";\nexport default {\n  name: \"Home\",\n  components: {\n    ConnectedView\n  },\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n    const sensorData = ref({});\n    let homeData = ref({\n      FCU: {\n        state_machine: {\n          global_state: -1,\n          flight_state: -1,\n          flight_mode: -1,\n          arming_state: -1\n        },\n        height_sensor: {\n          height_sensor_status: -1,\n          height_measure: NaN\n        },\n        event_flags: {\n          event_flags: -1\n        },\n        bridge_ahrs: {\n          palpeur_altitude_filtered: NaN,\n          vel_x: NaN,\n          yaw_rate: NaN,\n          roll: NaN,\n          pitch: NaN\n        },\n        bridge_motor: {\n          motor_1_ctrl_temp: NaN,\n          motor_1_current: NaN,\n          motor_1_rpm: NaN,\n          motor_2_ctrl_temp: NaN,\n          motor_2_current: NaN,\n          motor_2_rpm: NaN\n        },\n        heartBeat: NaN\n      },\n      main_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n      lat_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n      back_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n      battery: {\n        can_port_current_1: {\n          pack_current: NaN\n        },\n        pack_info: {\n          pack_voltage: NaN,\n          pack_soc: NaN,\n          status: NaN,\n          fan_duty: NaN\n        },\n        bms_status: {\n          max_cell_temp: NaN,\n          min_cell_voltage: NaN,\n          max_cell_voltage: NaN,\n          temp_BMS: NaN,\n          temp_ext_1: NaN,\n          temp_ext_2: NaN,\n          bms_status: NaN\n        },\n        cell_voltage_1: {\n          volt_cell_1: NaN,\n          volt_cell_2: NaN,\n          volt_cell_3: NaN,\n          volt_cell_4: NaN\n        },\n        cell_voltage_2: {\n          volt_cell_5: NaN,\n          volt_cell_6: NaN,\n          volt_cell_7: NaN,\n          volt_cell_8: NaN\n        },\n        cell_voltage_3: {\n          volt_cell_9: NaN,\n          volt_cell_10: NaN,\n          volt_cell_11: NaN,\n          volt_cell_12: NaN\n        },\n        pack_temp_1: {\n          temp_sens_1: NaN,\n          temp_sens_2: NaN,\n          temp_sens_3: NaN,\n          temp_sens_4: NaN,\n          temp_sens_5: NaN,\n          temp_sens_6: NaN,\n          temp_sens_7: NaN,\n          temp_sens_8: NaN\n        },\n        pack_temp_2: {\n          temp_sens_9: NaN,\n          temp_sens_10: NaN,\n          temp_sens_11: NaN,\n          temp_sens_12: NaN\n        },\n        mppt_current_1: {\n          mppt_1: NaN,\n          mppt_2: NaN,\n          mppt_3: NaN,\n          mppt_4: NaN\n        },\n        mppt_current_2: {\n          mppt_5: NaN,\n          mppt_6: NaN,\n          mppt_7: NaN,\n          mppt_8: NaN\n        },\n        mppt_current_3: {\n          mppt_9: NaN,\n          mppt_10: NaN\n        }\n      }\n    });\n    let dataCallBack = receivedData => {\n      retrieveDataFromJSON(receivedData, sensorData);\n      console.log(sensorData);\n    };\n    return {\n      subscribedTopics,\n      dataCallBack,\n      sensorData\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ConnectedView","ref","retrieveDataFromJSON","name","components","setup","subscribedTopics","sensorData","homeData","FCU","state_machine","global_state","flight_state","flight_mode","arming_state","height_sensor","height_sensor_status","height_measure","NaN","event_flags","bridge_ahrs","palpeur_altitude_filtered","vel_x","yaw_rate","roll","pitch","bridge_motor","motor_1_ctrl_temp","motor_1_current","motor_1_rpm","motor_2_ctrl_temp","motor_2_current","motor_2_rpm","heartBeat","main_position_motor","TxPDO_1","modes_of_operation_display","statusword","error_code","TxPDO_2","position_demand_value","position_actual_value","TxPDO_3","velocity_demand_value","velocity_actual_value","TxPDO_4","current_demand_value","current_actual_value","lat_position_motor","back_position_motor","battery","can_port_current_1","pack_current","pack_info","pack_voltage","pack_soc","status","fan_duty","bms_status","max_cell_temp","min_cell_voltage","max_cell_voltage","temp_BMS","temp_ext_1","temp_ext_2","cell_voltage_1","volt_cell_1","volt_cell_2","volt_cell_3","volt_cell_4","cell_voltage_2","volt_cell_5","volt_cell_6","volt_cell_7","volt_cell_8","cell_voltage_3","volt_cell_9","volt_cell_10","volt_cell_11","volt_cell_12","pack_temp_1","temp_sens_1","temp_sens_2","temp_sens_3","temp_sens_4","temp_sens_5","temp_sens_6","temp_sens_7","temp_sens_8","pack_temp_2","temp_sens_9","temp_sens_10","temp_sens_11","temp_sens_12","mppt_current_1","mppt_1","mppt_2","mppt_3","mppt_4","mppt_current_2","mppt_5","mppt_6","mppt_7","mppt_8","mppt_current_3","mppt_9","mppt_10","dataCallBack","receivedData","console","log"],"sourceRoot":"","sources":["/home/davidf/Desktop/SSB/ssb-interface-v2/src/views/Home.vue"],"sourcesContent":["<template>\n  <section class=\"app-main\">\n\n    <connected-view  v-slot=\"data\" :subscribedTopics=\"subscribedTopics\" :dataCallBack=\"dataCallBack\">\n      <h1> Home </h1>\n      <h1 v-if=\"data.connected\">Connected</h1>\n      <h1 v-else>Disconnected</h1>\n\n      <h3>Data: {{sensorData[\"somseNamse/namez\"]}}</h3>\n      <h4>Subscribed topics: {{data.subscribedTopics}}</h4>\n    </connected-view>\n\n  </section>\n</template>\n\n<script>\nimport ConnectedView from \"@/views/ConnectedView\";\nimport {ref} from \"vue\";\nimport retrieveDataFromJSON from \"@/composables/responseUtils\";\n\nexport default {\n  name: \"Home\",\n  components: {ConnectedView},\n\n\n  setup: function () {\n    let subscribedTopics = ['Home']; //Array containing the subscribed topics for this component\n    const sensorData = ref({})\n\n\n    let homeData = ref({\n      FCU: {\n        state_machine: {\n          global_state: -1,\n          flight_state: -1,\n          flight_mode: -1,\n          arming_state: -1,\n        },\n        height_sensor: {\n          height_sensor_status : -1,\n          height_measure: NaN\n        },\n        event_flags: {\n          event_flags: -1,\n        },\n        bridge_ahrs: {\n          palpeur_altitude_filtered: NaN,\n          vel_x: NaN,\n          yaw_rate: NaN,\n          roll: NaN,\n          pitch: NaN,\n        },\n        bridge_motor:{\n          motor_1_ctrl_temp: NaN,\n          motor_1_current: NaN,\n          motor_1_rpm: NaN,\n          motor_2_ctrl_temp: NaN,\n          motor_2_current: NaN,\n          motor_2_rpm: NaN,\n        },\n        heartBeat: NaN,\n      },\n\n      main_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        },\n      },\n\n      lat_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        },\n      },\n\n      back_position_motor: {\n        TxPDO_1: {\n          modes_of_operation_display: NaN,\n          statusword: NaN,\n          error_code: NaN\n        },\n        TxPDO_2: {\n          position_demand_value: NaN,\n          position_actual_value: NaN\n        },\n        TxPDO_3: {\n          velocity_demand_value: NaN,\n          velocity_actual_value: NaN\n        },\n        TxPDO_4: {\n          current_demand_value: NaN,\n          current_actual_value: NaN\n        }\n      },\n\n      battery: {\n        can_port_current_1: {\n          pack_current: NaN,\n        },\n        pack_info: {\n          pack_voltage: NaN,\n          pack_soc: NaN,\n          status: NaN,\n          fan_duty: NaN,\n        },\n        bms_status: {\n          max_cell_temp : NaN,\n          min_cell_voltage: NaN,\n          max_cell_voltage: NaN,\n          temp_BMS: NaN,\n          temp_ext_1: NaN,\n          temp_ext_2: NaN,\n          bms_status: NaN,\n        },\n\n        cell_voltage_1: {\n          volt_cell_1: NaN,\n          volt_cell_2: NaN,\n          volt_cell_3: NaN,\n          volt_cell_4: NaN,\n        },\n        cell_voltage_2: {\n          volt_cell_5: NaN,\n          volt_cell_6: NaN,\n          volt_cell_7: NaN,\n          volt_cell_8: NaN,\n        },\n        cell_voltage_3: {\n          volt_cell_9: NaN,\n          volt_cell_10: NaN,\n          volt_cell_11: NaN,\n          volt_cell_12: NaN,\n        },\n        pack_temp_1: {\n          temp_sens_1: NaN,\n          temp_sens_2: NaN,\n          temp_sens_3: NaN,\n          temp_sens_4: NaN,\n          temp_sens_5: NaN,\n          temp_sens_6: NaN,\n          temp_sens_7: NaN,\n          temp_sens_8: NaN,\n        },\n        pack_temp_2: {\n          temp_sens_9: NaN,\n          temp_sens_10: NaN,\n          temp_sens_11: NaN,\n          temp_sens_12: NaN,\n        },\n        mppt_current_1: {\n          mppt_1: NaN,\n          mppt_2: NaN,\n          mppt_3: NaN,\n          mppt_4: NaN,\n        },\n        mppt_current_2: {\n          mppt_5: NaN,\n          mppt_6: NaN,\n          mppt_7: NaN,\n          mppt_8: NaN,\n        },\n        mppt_current_3: {\n          mppt_9: NaN,\n          mppt_10: NaN,\n        },\n\n      },\n\n    })\n\n    let dataCallBack = (receivedData) => {\n      retrieveDataFromJSON(receivedData, sensorData)\n\n      console.log(sensorData)\n    }\n    return {subscribedTopics, dataCallBack, sensorData}\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}